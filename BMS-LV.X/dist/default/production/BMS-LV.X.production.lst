

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Jun 13 19:28:34 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK2,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83  0000                     
    84                           	psect	idataBANK0
    85  00320A                     __pidataBANK0:
    86                           	opt stack 0
    87                           
    88                           ;initializer for _Over_Voltage_Value
    89  00320A  09C4               	dw	2500
    90                           
    91                           ;initializer for _Under_Voltage_Value
    92  00320C  07CF               	dw	1999
    93                           
    94                           ;initializer for _CarOn
    95  00320E  01                 	db	1
    96                           
    97                           ;initializer for _CurrentDir
    98  00320F  01                 	db	1
    99                           
   100                           	psect	idataBANK2
   101  0031B8                     __pidataBANK2:
   102                           	opt stack 0
   103                           
   104                           ;initializer for _retrn
   105  0031B8  000F               	dw	15
   106  0031BA  0094               	dw	148
   107  0031BC  00C3               	dw	195
   108  0031BE  0093               	dw	147
   109  0031C0  0062               	dw	98
   110  0031C2  0090               	dw	144
   111  0031C4  0089               	dw	137
   112  0031C6  00C8               	dw	200
   113                           
   114                           	psect	mediumconst
   115  007B30                     __pmediumconst:
   116                           	opt stack 0
   117  007B30  00                 	db	0
   118  007B31                     LT6804@crc15Table:
   119                           	opt stack 0
   120  007B31  0000               	dw	0
   121  007B33  C599               	dw	50585
   122  007B35  CEAB               	dw	52907
   123  007B37  0B32               	dw	2866
   124  007B39  D8CF               	dw	55503
   125  007B3B  1D56               	dw	7510
   126  007B3D  1664               	dw	5732
   127  007B3F  D3FD               	dw	54269
   128  007B41  F407               	dw	62471
   129  007B43  319E               	dw	12702
   130  007B45  3AAC               	dw	15020
   131  007B47  FF35               	dw	65333
   132  007B49  2CC8               	dw	11464
   133  007B4B  E951               	dw	59729
   134  007B4D  E263               	dw	57955
   135  007B4F  27FA               	dw	10234
   136  007B51  AD97               	dw	44439
   137  007B53  680E               	dw	26638
   138  007B55  633C               	dw	25404
   139  007B57  A6A5               	dw	42661
   140  007B59  7558               	dw	30040
   141  007B5B  B0C1               	dw	45249
   142  007B5D  BBF3               	dw	48115
   143  007B5F  7E6A               	dw	32362
   144  007B61  5990               	dw	22928
   145  007B63  9C09               	dw	39945
   146  007B65  973B               	dw	38715
   147  007B67  52A2               	dw	21154
   148  007B69  815F               	dw	33119
   149  007B6B  44C6               	dw	17606
   150  007B6D  4FF4               	dw	20468
   151  007B6F  8A6D               	dw	35437
   152  007B71  5B2E               	dw	23342
   153  007B73  9EB7               	dw	40631
   154  007B75  9585               	dw	38277
   155  007B77  501C               	dw	20508
   156  007B79  83E1               	dw	33761
   157  007B7B  4678               	dw	18040
   158  007B7D  4D4A               	dw	19786
   159  007B7F  88D3               	dw	35027
   160  007B81  AF29               	dw	44841
   161  007B83  6AB0               	dw	27312
   162  007B85  6182               	dw	24962
   163  007B87  A41B               	dw	42011
   164  007B89  77E6               	dw	30694
   165  007B8B  B27F               	dw	45695
   166  007B8D  B94D               	dw	47437
   167  007B8F  7CD4               	dw	31956
   168  007B91  F6B9               	dw	63161
   169  007B93  3320               	dw	13088
   170  007B95  3812               	dw	14354
   171  007B97  FD8B               	dw	64907
   172  007B99  2E76               	dw	11894
   173  007B9B  EBEF               	dw	60399
   174  007B9D  E0DD               	dw	57565
   175  007B9F  2544               	dw	9540
   176  007BA1  02BE               	dw	702
   177  007BA3  C727               	dw	50983
   178  007BA5  CC15               	dw	52245
   179  007BA7  098C               	dw	2444
   180  007BA9  DA71               	dw	55921
   181  007BAB  1FE8               	dw	8168
   182  007BAD  14DA               	dw	5338
   183  007BAF  D143               	dw	53571
   184  007BB1  F3C5               	dw	62405
   185  007BB3  365C               	dw	13916
   186  007BB5  3D6E               	dw	15726
   187  007BB7  F8F7               	dw	63735
   188  007BB9  2B0A               	dw	11018
   189  007BBB  EE93               	dw	61075
   190  007BBD  E5A1               	dw	58785
   191  007BBF  2038               	dw	8248
   192  007BC1  07C2               	dw	1986
   193  007BC3  C25B               	dw	49755
   194  007BC5  C969               	dw	51561
   195  007BC7  0CF0               	dw	3312
   196  007BC9  DF0D               	dw	57101
   197  007BCB  1A94               	dw	6804
   198  007BCD  11A6               	dw	4518
   199  007BCF  D43F               	dw	54335
   200  007BD1  5E52               	dw	24146
   201  007BD3  9BCB               	dw	39883
   202  007BD5  90F9               	dw	37113
   203  007BD7  5560               	dw	21856
   204  007BD9  869D               	dw	34461
   205  007BDB  4304               	dw	17156
   206  007BDD  4836               	dw	18486
   207  007BDF  8DAF               	dw	36271
   208  007BE1  AA55               	dw	43605
   209  007BE3  6FCC               	dw	28620
   210  007BE5  64FE               	dw	25854
   211  007BE7  A167               	dw	41319
   212  007BE9  729A               	dw	29338
   213  007BEB  B703               	dw	46851
   214  007BED  BC31               	dw	48177
   215  007BEF  79A8               	dw	31144
   216  007BF1  A8EB               	dw	43243
   217  007BF3  6D72               	dw	28018
   218  007BF5  6640               	dw	26176
   219  007BF7  A3D9               	dw	41945
   220  007BF9  7024               	dw	28708
   221  007BFB  B5BD               	dw	46525
   222  007BFD  BE8F               	dw	48783
   223  007BFF  7B16               	dw	31510
   224  007C01  5CEC               	dw	23788
   225  007C03  9975               	dw	39285
   226  007C05  9247               	dw	37447
   227  007C07  57DE               	dw	22494
   228  007C09  8423               	dw	33827
   229  007C0B  41BA               	dw	16826
   230  007C0D  4A88               	dw	19080
   231  007C0F  8F11               	dw	36625
   232  007C11  057C               	dw	1404
   233  007C13  C0E5               	dw	49381
   234  007C15  CBD7               	dw	52183
   235  007C17  0E4E               	dw	3662
   236  007C19  DDB3               	dw	56755
   237  007C1B  182A               	dw	6186
   238  007C1D  1318               	dw	4888
   239  007C1F  D681               	dw	54913
   240  007C21  F17B               	dw	61819
   241  007C23  34E2               	dw	13538
   242  007C25  3FD0               	dw	16336
   243  007C27  FA49               	dw	64073
   244  007C29  29B4               	dw	10676
   245  007C2B  EC2D               	dw	60461
   246  007C2D  E71F               	dw	59167
   247  007C2F  2286               	dw	8838
   248  007C31  A213               	dw	41491
   249  007C33  678A               	dw	26506
   250  007C35  6CB8               	dw	27832
   251  007C37  A921               	dw	43297
   252  007C39  7ADC               	dw	31452
   253  007C3B  BF45               	dw	48965
   254  007C3D  B477               	dw	46199
   255  007C3F  71EE               	dw	29166
   256  007C41  5614               	dw	22036
   257  007C43  938D               	dw	37773
   258  007C45  98BF               	dw	39103
   259  007C47  5D26               	dw	23846
   260  007C49  8EDB               	dw	36571
   261  007C4B  4B42               	dw	19266
   262  007C4D  4070               	dw	16496
   263  007C4F  85E9               	dw	34281
   264  007C51  0F84               	dw	3972
   265  007C53  CA1D               	dw	51741
   266  007C55  C12F               	dw	49455
   267  007C57  04B6               	dw	1206
   268  007C59  D74B               	dw	55115
   269  007C5B  12D2               	dw	4818
   270  007C5D  19E0               	dw	6624
   271  007C5F  DC79               	dw	56441
   272  007C61  FB83               	dw	64387
   273  007C63  3E1A               	dw	15898
   274  007C65  3528               	dw	13608
   275  007C67  F0B1               	dw	61617
   276  007C69  234C               	dw	9036
   277  007C6B  E6D5               	dw	59093
   278  007C6D  EDE7               	dw	60903
   279  007C6F  287E               	dw	10366
   280  007C71  F93D               	dw	63805
   281  007C73  3CA4               	dw	15524
   282  007C75  3796               	dw	14230
   283  007C77  F20F               	dw	61967
   284  007C79  21F2               	dw	8690
   285  007C7B  E46B               	dw	58475
   286  007C7D  EF59               	dw	61273
   287  007C7F  2AC0               	dw	10944
   288  007C81  0D3A               	dw	3386
   289  007C83  C8A3               	dw	51363
   290  007C85  C391               	dw	50065
   291  007C87  0608               	dw	1544
   292  007C89  D5F5               	dw	54773
   293  007C8B  106C               	dw	4204
   294  007C8D  1B5E               	dw	7006
   295  007C8F  DEC7               	dw	57031
   296  007C91  54AA               	dw	21674
   297  007C93  9133               	dw	37171
   298  007C95  9A01               	dw	39425
   299  007C97  5F98               	dw	24472
   300  007C99  8C65               	dw	35941
   301  007C9B  49FC               	dw	18940
   302  007C9D  42CE               	dw	17102
   303  007C9F  8757               	dw	34647
   304  007CA1  A0AD               	dw	41133
   305  007CA3  6534               	dw	25908
   306  007CA5  6E06               	dw	28166
   307  007CA7  AB9F               	dw	43935
   308  007CA9  7862               	dw	30818
   309  007CAB  BDFB               	dw	48635
   310  007CAD  B6C9               	dw	46793
   311  007CAF  7350               	dw	29520
   312  007CB1  51D6               	dw	20950
   313  007CB3  944F               	dw	37967
   314  007CB5  9F7D               	dw	40829
   315  007CB7  5AE4               	dw	23268
   316  007CB9  8919               	dw	35097
   317  007CBB  4C80               	dw	19584
   318  007CBD  47B2               	dw	18354
   319  007CBF  822B               	dw	33323
   320  007CC1  A5D1               	dw	42449
   321  007CC3  6048               	dw	24648
   322  007CC5  6B7A               	dw	27514
   323  007CC7  AEE3               	dw	44771
   324  007CC9  7D1E               	dw	32030
   325  007CCB  B887               	dw	47239
   326  007CCD  B3B5               	dw	46005
   327  007CCF  762C               	dw	30252
   328  007CD1  FC41               	dw	64577
   329  007CD3  39D8               	dw	14808
   330  007CD5  32EA               	dw	13034
   331  007CD7  F773               	dw	63347
   332  007CD9  248E               	dw	9358
   333  007CDB  E117               	dw	57623
   334  007CDD  EA25               	dw	59941
   335  007CDF  2FBC               	dw	12220
   336  007CE1  0846               	dw	2118
   337  007CE3  CDDF               	dw	52703
   338  007CE5  C6ED               	dw	50925
   339  007CE7  0374               	dw	884
   340  007CE9  D089               	dw	53385
   341  007CEB  1510               	dw	5392
   342  007CED  1E22               	dw	7714
   343  007CEF  DBBB               	dw	56251
   344  007CF1  0AF8               	dw	2808
   345  007CF3  CF61               	dw	53089
   346  007CF5  C453               	dw	50259
   347  007CF7  01CA               	dw	458
   348  007CF9  D237               	dw	53815
   349  007CFB  17AE               	dw	6062
   350  007CFD  1C9C               	dw	7324
   351  007CFF  D905               	dw	55557
   352  007D01  FEFF               	dw	65279
   353  007D03  3B66               	dw	15206
   354  007D05  3054               	dw	12372
   355  007D07  F5CD               	dw	62925
   356  007D09  2630               	dw	9776
   357  007D0B  E3A9               	dw	58281
   358  007D0D  E89B               	dw	59547
   359  007D0F  2D02               	dw	11522
   360  007D11  A76F               	dw	42863
   361  007D13  62F6               	dw	25334
   362  007D15  69C4               	dw	27076
   363  007D17  AC5D               	dw	44125
   364  007D19  7FA0               	dw	32672
   365  007D1B  BA39               	dw	47673
   366  007D1D  B10B               	dw	45323
   367  007D1F  7492               	dw	29842
   368  007D21  5368               	dw	21352
   369  007D23  96F1               	dw	38641
   370  007D25  9DC3               	dw	40387
   371  007D27  585A               	dw	22618
   372  007D29  8BA7               	dw	35751
   373  007D2B  4E3E               	dw	20030
   374  007D2D  450C               	dw	17676
   375  007D2F  8095               	dw	32917
   376  007D31                     __end_ofLT6804@crc15Table:
   377                           	opt stack 0
   378  007D31  0000               	dw	0
   379  007D33  C599               	dw	50585
   380  007D35  CEAB               	dw	52907
   381  007D37  0B32               	dw	2866
   382  007D39  D8CF               	dw	55503
   383  007D3B  1D56               	dw	7510
   384  007D3D  1664               	dw	5732
   385  007D3F  D3FD               	dw	54269
   386  007D41  F407               	dw	62471
   387  007D43  319E               	dw	12702
   388  007D45  3AAC               	dw	15020
   389  007D47  FF35               	dw	65333
   390  007D49  2CC8               	dw	11464
   391  007D4B  E951               	dw	59729
   392  007D4D  E263               	dw	57955
   393  007D4F  27FA               	dw	10234
   394  007D51  AD97               	dw	44439
   395  007D53  680E               	dw	26638
   396  007D55  633C               	dw	25404
   397  007D57  A6A5               	dw	42661
   398  007D59  7558               	dw	30040
   399  007D5B  B0C1               	dw	45249
   400  007D5D  BBF3               	dw	48115
   401  007D5F  7E6A               	dw	32362
   402  007D61  5990               	dw	22928
   403  007D63  9C09               	dw	39945
   404  007D65  973B               	dw	38715
   405  007D67  52A2               	dw	21154
   406  007D69  815F               	dw	33119
   407  007D6B  44C6               	dw	17606
   408  007D6D  4FF4               	dw	20468
   409  007D6F  8A6D               	dw	35437
   410  007D71  5B2E               	dw	23342
   411  007D73  9EB7               	dw	40631
   412  007D75  9585               	dw	38277
   413  007D77  501C               	dw	20508
   414  007D79  83E1               	dw	33761
   415  007D7B  4678               	dw	18040
   416  007D7D  4D4A               	dw	19786
   417  007D7F  88D3               	dw	35027
   418  007D81  AF29               	dw	44841
   419  007D83  6AB0               	dw	27312
   420  007D85  6182               	dw	24962
   421  007D87  A41B               	dw	42011
   422  007D89  77E6               	dw	30694
   423  007D8B  B27F               	dw	45695
   424  007D8D  B94D               	dw	47437
   425  007D8F  7CD4               	dw	31956
   426  007D91  F6B9               	dw	63161
   427  007D93  3320               	dw	13088
   428  007D95  3812               	dw	14354
   429  007D97  FD8B               	dw	64907
   430  007D99  2E76               	dw	11894
   431  007D9B  EBEF               	dw	60399
   432  007D9D  E0DD               	dw	57565
   433  007D9F  2544               	dw	9540
   434  007DA1  02BE               	dw	702
   435  007DA3  C727               	dw	50983
   436  007DA5  CC15               	dw	52245
   437  007DA7  098C               	dw	2444
   438  007DA9  DA71               	dw	55921
   439  007DAB  1FE8               	dw	8168
   440  007DAD  14DA               	dw	5338
   441  007DAF  D143               	dw	53571
   442  007DB1  F3C5               	dw	62405
   443  007DB3  365C               	dw	13916
   444  007DB5  3D6E               	dw	15726
   445  007DB7  F8F7               	dw	63735
   446  007DB9  2B0A               	dw	11018
   447  007DBB  EE93               	dw	61075
   448  007DBD  E5A1               	dw	58785
   449  007DBF  2038               	dw	8248
   450  007DC1  07C2               	dw	1986
   451  007DC3  C25B               	dw	49755
   452  007DC5  C969               	dw	51561
   453  007DC7  0CF0               	dw	3312
   454  007DC9  DF0D               	dw	57101
   455  007DCB  1A94               	dw	6804
   456  007DCD  11A6               	dw	4518
   457  007DCF  D43F               	dw	54335
   458  007DD1  5E52               	dw	24146
   459  007DD3  9BCB               	dw	39883
   460  007DD5  90F9               	dw	37113
   461  007DD7  5560               	dw	21856
   462  007DD9  869D               	dw	34461
   463  007DDB  4304               	dw	17156
   464  007DDD  4836               	dw	18486
   465  007DDF  8DAF               	dw	36271
   466  007DE1  AA55               	dw	43605
   467  007DE3  6FCC               	dw	28620
   468  007DE5  64FE               	dw	25854
   469  007DE7  A167               	dw	41319
   470  007DE9  729A               	dw	29338
   471  007DEB  B703               	dw	46851
   472  007DED  BC31               	dw	48177
   473  007DEF  79A8               	dw	31144
   474  007DF1  A8EB               	dw	43243
   475  007DF3  6D72               	dw	28018
   476  007DF5  6640               	dw	26176
   477  007DF7  A3D9               	dw	41945
   478  007DF9  7024               	dw	28708
   479  007DFB  B5BD               	dw	46525
   480  007DFD  BE8F               	dw	48783
   481  007DFF  7B16               	dw	31510
   482  007E01  5CEC               	dw	23788
   483  007E03  9975               	dw	39285
   484  007E05  9247               	dw	37447
   485  007E07  57DE               	dw	22494
   486  007E09  8423               	dw	33827
   487  007E0B  41BA               	dw	16826
   488  007E0D  4A88               	dw	19080
   489  007E0F  8F11               	dw	36625
   490  007E11  057C               	dw	1404
   491  007E13  C0E5               	dw	49381
   492  007E15  CBD7               	dw	52183
   493  007E17  0E4E               	dw	3662
   494  007E19  DDB3               	dw	56755
   495  007E1B  182A               	dw	6186
   496  007E1D  1318               	dw	4888
   497  007E1F  D681               	dw	54913
   498  007E21  F17B               	dw	61819
   499  007E23  34E2               	dw	13538
   500  007E25  3FD0               	dw	16336
   501  007E27  FA49               	dw	64073
   502  007E29  29B4               	dw	10676
   503  007E2B  EC2D               	dw	60461
   504  007E2D  E71F               	dw	59167
   505  007E2F  2286               	dw	8838
   506  007E31  A213               	dw	41491
   507  007E33  678A               	dw	26506
   508  007E35  6CB8               	dw	27832
   509  007E37  A921               	dw	43297
   510  007E39  7ADC               	dw	31452
   511  007E3B  BF45               	dw	48965
   512  007E3D  B477               	dw	46199
   513  007E3F  71EE               	dw	29166
   514  007E41  5614               	dw	22036
   515  007E43  938D               	dw	37773
   516  007E45  98BF               	dw	39103
   517  007E47  5D26               	dw	23846
   518  007E49  8EDB               	dw	36571
   519  007E4B  4B42               	dw	19266
   520  007E4D  4070               	dw	16496
   521  007E4F  85E9               	dw	34281
   522  007E51  0F84               	dw	3972
   523  007E53  CA1D               	dw	51741
   524  007E55  C12F               	dw	49455
   525  007E57  04B6               	dw	1206
   526  007E59  D74B               	dw	55115
   527  007E5B  12D2               	dw	4818
   528  007E5D  19E0               	dw	6624
   529  007E5F  DC79               	dw	56441
   530  007E61  FB83               	dw	64387
   531  007E63  3E1A               	dw	15898
   532  007E65  3528               	dw	13608
   533  007E67  F0B1               	dw	61617
   534  007E69  234C               	dw	9036
   535  007E6B  E6D5               	dw	59093
   536  007E6D  EDE7               	dw	60903
   537  007E6F  287E               	dw	10366
   538  007E71  F93D               	dw	63805
   539  007E73  3CA4               	dw	15524
   540  007E75  3796               	dw	14230
   541  007E77  F20F               	dw	61967
   542  007E79  21F2               	dw	8690
   543  007E7B  E46B               	dw	58475
   544  007E7D  EF59               	dw	61273
   545  007E7F  2AC0               	dw	10944
   546  007E81  0D3A               	dw	3386
   547  007E83  C8A3               	dw	51363
   548  007E85  C391               	dw	50065
   549  007E87  0608               	dw	1544
   550  007E89  D5F5               	dw	54773
   551  007E8B  106C               	dw	4204
   552  007E8D  1B5E               	dw	7006
   553  007E8F  DEC7               	dw	57031
   554  007E91  54AA               	dw	21674
   555  007E93  9133               	dw	37171
   556  007E95  9A01               	dw	39425
   557  007E97  5F98               	dw	24472
   558  007E99  8C65               	dw	35941
   559  007E9B  49FC               	dw	18940
   560  007E9D  42CE               	dw	17102
   561  007E9F  8757               	dw	34647
   562  007EA1  A0AD               	dw	41133
   563  007EA3  6534               	dw	25908
   564  007EA5  6E06               	dw	28166
   565  007EA7  AB9F               	dw	43935
   566  007EA9  7862               	dw	30818
   567  007EAB  BDFB               	dw	48635
   568  007EAD  B6C9               	dw	46793
   569  007EAF  7350               	dw	29520
   570  007EB1  51D6               	dw	20950
   571  007EB3  944F               	dw	37967
   572  007EB5  9F7D               	dw	40829
   573  007EB7  5AE4               	dw	23268
   574  007EB9  8919               	dw	35097
   575  007EBB  4C80               	dw	19584
   576  007EBD  47B2               	dw	18354
   577  007EBF  822B               	dw	33323
   578  007EC1  A5D1               	dw	42449
   579  007EC3  6048               	dw	24648
   580  007EC5  6B7A               	dw	27514
   581  007EC7  AEE3               	dw	44771
   582  007EC9  7D1E               	dw	32030
   583  007ECB  B887               	dw	47239
   584  007ECD  B3B5               	dw	46005
   585  007ECF  762C               	dw	30252
   586  007ED1  FC41               	dw	64577
   587  007ED3  39D8               	dw	14808
   588  007ED5  32EA               	dw	13034
   589  007ED7  F773               	dw	63347
   590  007ED9  248E               	dw	9358
   591  007EDB  E117               	dw	57623
   592  007EDD  EA25               	dw	59941
   593  007EDF  2FBC               	dw	12220
   594  007EE1  0846               	dw	2118
   595  007EE3  CDDF               	dw	52703
   596  007EE5  C6ED               	dw	50925
   597  007EE7  0374               	dw	884
   598  007EE9  D089               	dw	53385
   599  007EEB  1510               	dw	5392
   600  007EED  1E22               	dw	7714
   601  007EEF  DBBB               	dw	56251
   602  007EF1  0AF8               	dw	2808
   603  007EF3  CF61               	dw	53089
   604  007EF5  C453               	dw	50259
   605  007EF7  01CA               	dw	458
   606  007EF9  D237               	dw	53815
   607  007EFB  17AE               	dw	6062
   608  007EFD  1C9C               	dw	7324
   609  007EFF  D905               	dw	55557
   610  007F01  FEFF               	dw	65279
   611  007F03  3B66               	dw	15206
   612  007F05  3054               	dw	12372
   613  007F07  F5CD               	dw	62925
   614  007F09  2630               	dw	9776
   615  007F0B  E3A9               	dw	58281
   616  007F0D  E89B               	dw	59547
   617  007F0F  2D02               	dw	11522
   618  007F11  A76F               	dw	42863
   619  007F13  62F6               	dw	25334
   620  007F15  69C4               	dw	27076
   621  007F17  AC5D               	dw	44125
   622  007F19  7FA0               	dw	32672
   623  007F1B  BA39               	dw	47673
   624  007F1D  B10B               	dw	45323
   625  007F1F  7492               	dw	29842
   626  007F21  5368               	dw	21352
   627  007F23  96F1               	dw	38641
   628  007F25  9DC3               	dw	40387
   629  007F27  585A               	dw	22618
   630  007F29  8BA7               	dw	35751
   631  007F2B  4E3E               	dw	20030
   632  007F2D  450C               	dw	17676
   633  007F2F  8095               	dw	32917
   634  007F31                     __end_of_crc15Table:
   635                           	opt stack 0
   636  007F31                     _dpowers:
   637                           	opt stack 0
   638  007F31  0001               	dw	1
   639  007F33  0000               	dw	0
   640  007F35  000A               	dw	10
   641  007F37  0000               	dw	0
   642  007F39  0064               	dw	100
   643  007F3B  0000               	dw	0
   644  007F3D  03E8               	dw	1000
   645  007F3F  0000               	dw	0
   646  007F41  2710               	dw	10000
   647  007F43  0000               	dw	0
   648  007F45  86A0               	dw	34464
   649  007F47  0001               	dw	1
   650  007F49  4240               	dw	16960
   651  007F4B  000F               	dw	15
   652  007F4D  9680               	dw	38528
   653  007F4F  0098               	dw	152
   654  007F51  E100               	dw	57600
   655  007F53  05F5               	dw	1525
   656  007F55  CA00               	dw	51712
   657  007F57  3B9A               	dw	15258
   658  007F59                     __end_of_dpowers:
   659                           	opt stack 0
   660  007F59                     __npowers_:
   661                           	opt stack 0
   662  007F59  00                 	db	0
   663  007F5A  80                 	db	128
   664  007F5B  3F                 	db	63
   665  007F5C  CD                 	db	205
   666  007F5D  CC                 	db	204
   667  007F5E  3D                 	db	61
   668  007F5F  D7                 	db	215
   669  007F60  23                 	db	35
   670  007F61  3C                 	db	60
   671  007F62  12                 	db	18
   672  007F63  83                 	db	131
   673  007F64  3A                 	db	58
   674  007F65  B7                 	db	183
   675  007F66  D1                 	db	209
   676  007F67  38                 	db	56
   677  007F68  C6                 	db	198
   678  007F69  27                 	db	39
   679  007F6A  37                 	db	55
   680  007F6B  38                 	db	56
   681  007F6C  86                 	db	134
   682  007F6D  35                 	db	53
   683  007F6E  C0                 	db	192
   684  007F6F  D6                 	db	214
   685  007F70  33                 	db	51
   686  007F71  CC                 	db	204
   687  007F72  2B                 	db	43
   688  007F73  32                 	db	50
   689  007F74  70                 	db	112
   690  007F75  89                 	db	137
   691  007F76  30                 	db	48
   692  007F77  E7                 	db	231
   693  007F78  DB                 	db	219
   694  007F79  2E                 	db	46
   695  007F7A  E5                 	db	229
   696  007F7B  3C                 	db	60
   697  007F7C  1E                 	db	30
   698  007F7D  42                 	db	66
   699  007F7E  A2                 	db	162
   700  007F7F  0D                 	db	13
   701  007F80                     __end_of__npowers_:
   702                           	opt stack 0
   703  007F80                     __powers_:
   704                           	opt stack 0
   705  007F80  00                 	db	0
   706  007F81  80                 	db	128
   707  007F82  3F                 	db	63
   708  007F83  00                 	db	0
   709  007F84  20                 	db	32
   710  007F85  41                 	db	65
   711  007F86  00                 	db	0
   712  007F87  C8                 	db	200
   713  007F88  42                 	db	66
   714  007F89  00                 	db	0
   715  007F8A  7A                 	db	122
   716  007F8B  44                 	db	68
   717  007F8C  40                 	db	64
   718  007F8D  1C                 	db	28
   719  007F8E  46                 	db	70
   720  007F8F  50                 	db	80
   721  007F90  C3                 	db	195
   722  007F91  47                 	db	71
   723  007F92  24                 	db	36
   724  007F93  74                 	db	116
   725  007F94  49                 	db	73
   726  007F95  97                 	db	151
   727  007F96  18                 	db	24
   728  007F97  4B                 	db	75
   729  007F98  BC                 	db	188
   730  007F99  BE                 	db	190
   731  007F9A  4C                 	db	76
   732  007F9B  6B                 	db	107
   733  007F9C  6E                 	db	110
   734  007F9D  4E                 	db	78
   735  007F9E  03                 	db	3
   736  007F9F  15                 	db	21
   737  007FA0  50                 	db	80
   738  007FA1  79                 	db	121
   739  007FA2  AD                 	db	173
   740  007FA3  60                 	db	96
   741  007FA4  F3                 	db	243
   742  007FA5  49                 	db	73
   743  007FA6  71                 	db	113
   744  007FA7                     __end_of__powers_:
   745                           	opt stack 0
   746  007FA7                     exp@coeff:
   747                           	opt stack 0
   748  007FA7  00                 	db	0
   749  007FA8  80                 	db	128
   750  007FA9  3F                 	db	63
   751  007FAA  72                 	db	114
   752  007FAB  31                 	db	49
   753  007FAC  3F                 	db	63
   754  007FAD  FE                 	db	254
   755  007FAE  75                 	db	117
   756  007FAF  3E                 	db	62
   757  007FB0  58                 	db	88
   758  007FB1  63                 	db	99
   759  007FB2  3D                 	db	61
   760  007FB3  95                 	db	149
   761  007FB4  1D                 	db	29
   762  007FB5  3C                 	db	60
   763  007FB6  C5                 	db	197
   764  007FB7  AE                 	db	174
   765  007FB8  3A                 	db	58
   766  007FB9  79                 	db	121
   767  007FBA  21                 	db	33
   768  007FBB  39                 	db	57
   769  007FBC  94                 	db	148
   770  007FBD  80                 	db	128
   771  007FBE  37                 	db	55
   772  007FBF  93                 	db	147
   773  007FC0  A7                 	db	167
   774  007FC1  35                 	db	53
   775  007FC2  56                 	db	86
   776  007FC3  15                 	db	21
   777  007FC4  34                 	db	52
   778  007FC5                     __end_ofexp@coeff:
   779                           	opt stack 0
   780  007FC5                     log@coeff:
   781                           	opt stack 0
   782  007FC5  00                 	db	0
   783  007FC6  00                 	db	0
   784  007FC7  00                 	db	0
   785  007FC8  00                 	db	0
   786  007FC9  80                 	db	128
   787  007FCA  3F                 	db	63
   788  007FCB  F0                 	db	240
   789  007FCC  FF                 	db	255
   790  007FCD  BE                 	db	190
   791  007FCE  E2                 	db	226
   792  007FCF  A9                 	db	169
   793  007FD0  3E                 	db	62
   794  007FD1  83                 	db	131
   795  007FD2  76                 	db	118
   796  007FD3  BE                 	db	190
   797  007FD4  AE                 	db	174
   798  007FD5  2B                 	db	43
   799  007FD6  3E                 	db	62
   800  007FD7  3C                 	db	60
   801  007FD8  C3                 	db	195
   802  007FD9  BD                 	db	189
   803  007FDA  D2                 	db	210
   804  007FDB  13                 	db	19
   805  007FDC  3D                 	db	61
   806  007FDD  78                 	db	120
   807  007FDE  D3                 	db	211
   808  007FDF  BB                 	db	187
   809  007FE0                     __end_oflog@coeff:
   810                           	opt stack 0
   811  007FE0                     STR_2:
   812  007FE0  20                 	db	32
   813  007FE1  43                 	db	67	;'C'
   814  007FE2  65                 	db	101	;'e'
   815  007FE3  6C                 	db	108	;'l'
   816  007FE4  6C                 	db	108	;'l'
   817  007FE5  20                 	db	32
   818  007FE6  25                 	db	37
   819  007FE7  64                 	db	100	;'d'
   820  007FE8  20                 	db	32
   821  007FE9  56                 	db	86	;'V'
   822  007FEA  6F                 	db	111	;'o'
   823  007FEB  6C                 	db	108	;'l'
   824  007FEC  74                 	db	116	;'t'
   825  007FED  61                 	db	97	;'a'
   826  007FEE  67                 	db	103	;'g'
   827  007FEF  65                 	db	101	;'e'
   828  007FF0  3A                 	db	58	;':'
   829  007FF1  20                 	db	32
   830  007FF2  25                 	db	37
   831  007FF3  31                 	db	49	;'1'
   832  007FF4  2E                 	db	46
   833  007FF5  32                 	db	50	;'2'
   834  007FF6  66                 	db	102	;'f'
   835  007FF7  20                 	db	32
   836  007FF8  0A                 	db	10
   837  007FF9  00                 	db	0
   838  007FFA                     STR_1:
   839  007FFA  42                 	db	66	;'B'
   840  007FFB  4F                 	db	79	;'O'
   841  007FFC  4F                 	db	79	;'O'
   842  007FFD  54                 	db	84	;'T'
   843  007FFE  00                 	db	0
   844                           
   845                           ; #config settings
   846  007FFF  00                 	db	0	; dummy byte at the end
   847  0000                     
   848                           	psect	nvCOMRAM
   849  00004F                     __pnvCOMRAM:
   850                           	opt stack 0
   851  00004F                     _timer0ReloadVal16bit:
   852                           	opt stack 0
   853  00004F                     	ds	2
   854                           
   855                           	psect	nvBANK0
   856  0000FF                     __pnvBANK0:
   857                           	opt stack 0
   858  0000FF                     _eusart1TxBufferRemaining:
   859                           	opt stack 0
   860  0000FF                     	ds	1
   861  0000                     _ANSELA	set	3896
   862  0000                     _ANSELB	set	3897
   863  0000                     _ANSELC	set	3898
   864  0000                     _ANSELD	set	3899
   865  0000                     _ANSELE	set	3900
   866  0000                     _ADCON0	set	4034
   867  0000                     _ADCON0bits	set	4034
   868  0000                     _ADCON1	set	4033
   869  0000                     _ADCON2	set	4032
   870  0000                     _ADRESH	set	4036
   871  0000                     _ADRESL	set	4035
   872  0000                     _BAUDCON1	set	4024
   873  0000                     _INTCON2bits	set	4081
   874  0000                     _INTCONbits	set	4082
   875  0000                     _IPR1bits	set	3999
   876  0000                     _LATA	set	3977
   877  0000                     _LATB	set	3978
   878  0000                     _LATC	set	3979
   879  0000                     _LATCbits	set	3979
   880  0000                     _LATD	set	3980
   881  0000                     _LATE	set	3981
   882  0000                     _OSCCON	set	4051
   883  0000                     _OSCCON2	set	4050
   884  0000                     _OSCTUNE	set	3995
   885  0000                     _PIE1bits	set	3997
   886  0000                     _PIR1bits	set	3998
   887  0000                     _RCONbits	set	4048
   888  0000                     _RCREG1	set	4014
   889  0000                     _RCSTA1	set	4011
   890  0000                     _RCSTA1bits	set	4011
   891  0000                     _SLRCON	set	3936
   892  0000                     _SPBRG1	set	4015
   893  0000                     _SPBRGH1	set	4016
   894  0000                     _SSP2ADD	set	3950
   895  0000                     _SSP2BUF	set	3951
   896  0000                     _SSP2CON1	set	3948
   897  0000                     _SSP2CON1bits	set	3948
   898  0000                     _SSP2STAT	set	3949
   899  0000                     _SSP2STATbits	set	3949
   900  0000                     _T0CON	set	4053
   901  0000                     _T0CONbits	set	4053
   902  0000                     _TMR0H	set	4055
   903  0000                     _TMR0L	set	4054
   904  0000                     _TRISA	set	3986
   905  0000                     _TRISB	set	3987
   906  0000                     _TRISC	set	3988
   907  0000                     _TRISD	set	3989
   908  0000                     _TRISDbits	set	3989
   909  0000                     _TRISE	set	3990
   910  0000                     _TXREG1	set	4013
   911  0000                     _TXSTA1	set	4012
   912  0000                     _WPUB	set	3937
   913  0000                     _LATD3	set	31843
   914  0000                     _LATD6	set	31846
   915  0000                     _TRISD3	set	31915
   916                           
   917                           	psect	cinit
   918  002AC4                     __pcinit:
   919                           	opt stack 0
   920  002AC4                     start_initialization:
   921                           	opt stack 0
   922  002AC4                     __initialization:
   923                           	opt stack 0
   924                           
   925                           ; Clear objects allocated to BANK2 (174 bytes)
   926  002AC4  EE02  F000         	lfsr	0,__pbssBANK2
   927  002AC8  0EAE               	movlw	174
   928  002ACA                     clear_0:
   929  002ACA  6AEE               	clrf	postinc0,c
   930  002ACC  06E8               	decf	wreg,f,c
   931  002ACE  E1FD               	bnz	clear_0
   932                           
   933                           ; Clear objects allocated to BANK1 (39 bytes)
   934  002AD0  EE01  F0D3         	lfsr	0,__pbssBANK1
   935  002AD4  0E27               	movlw	39
   936  002AD6                     clear_1:
   937  002AD6  6AEE               	clrf	postinc0,c
   938  002AD8  06E8               	decf	wreg,f,c
   939  002ADA  E1FD               	bnz	clear_1
   940                           
   941                           ; Clear objects allocated to BANK0 (89 bytes)
   942  002ADC  EE00  F060         	lfsr	0,__pbssBANK0
   943  002AE0  0E59               	movlw	89
   944  002AE2                     clear_2:
   945  002AE2  6AEE               	clrf	postinc0,c
   946  002AE4  06E8               	decf	wreg,f,c
   947  002AE6  E1FD               	bnz	clear_2
   948                           
   949                           ; Clear objects allocated to COMRAM (13 bytes)
   950  002AE8  EE00  F042         	lfsr	0,__pbssCOMRAM
   951  002AEC  0E0D               	movlw	13
   952  002AEE                     clear_3:
   953  002AEE  6AEE               	clrf	postinc0,c
   954  002AF0  06E8               	decf	wreg,f,c
   955  002AF2  E1FD               	bnz	clear_3
   956                           
   957                           ; Initialize objects allocated to BANK2 (16 bytes)
   958                           ; load TBLPTR registers with __pidataBANK2
   959  002AF4  0EB8               	movlw	low __pidataBANK2
   960  002AF6  6EF6               	movwf	tblptrl,c
   961  002AF8  0E31               	movlw	high __pidataBANK2
   962  002AFA  6EF7               	movwf	tblptrh,c
   963  002AFC  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   964  002AFE  6EF8               	movwf	tblptru,c
   965  002B00  EE02  F0AE         	lfsr	0,__pdataBANK2
   966  002B04  EE10 F010          	lfsr	1,16
   967  002B08                     copy_data0:
   968  002B08  0009               	tblrd		*+
   969  002B0A  CFF5 FFEE          	movff	tablat,postinc0
   970  002B0E  50E5               	movf	postdec1,w,c
   971  002B10  50E1               	movf	fsr1l,w,c
   972  002B12  E1FA               	bnz	copy_data0
   973                           
   974                           ; Initialize objects allocated to BANK0 (6 bytes)
   975                           ; load TBLPTR registers with __pidataBANK0
   976  002B14  0E0A               	movlw	low __pidataBANK0
   977  002B16  6EF6               	movwf	tblptrl,c
   978  002B18  0E32               	movlw	high __pidataBANK0
   979  002B1A  6EF7               	movwf	tblptrh,c
   980  002B1C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   981  002B1E  6EF8               	movwf	tblptru,c
   982  002B20  EE00  F0F9         	lfsr	0,__pdataBANK0
   983  002B24  EE10 F006          	lfsr	1,6
   984  002B28                     copy_data1:
   985  002B28  0009               	tblrd		*+
   986  002B2A  CFF5 FFEE          	movff	tablat,postinc0
   987  002B2E  50E5               	movf	postdec1,w,c
   988  002B30  50E1               	movf	fsr1l,w,c
   989  002B32  E1FA               	bnz	copy_data1
   990  002B34                     end_of_initialization:
   991                           	opt stack 0
   992  002B34                     __end_of__initialization:
   993                           	opt stack 0
   994  002B34  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   995  002B36  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   996  002B38  0E00               	movlw	low (__Lmediumconst shr (0+16))
   997  002B3A  6EF8               	movwf	tblptru,c
   998  002B3C  0100               	movlb	0
   999  002B3E  EF5F  F017         	goto	_main	;jump to C main() function
  1000                           tblptru	equ	0xFF8
  1001                           tblptrh	equ	0xFF7
  1002                           tblptrl	equ	0xFF6
  1003                           tablat	equ	0xFF5
  1004                           postinc0	equ	0xFEE
  1005                           wreg	equ	0xFE8
  1006                           postdec1	equ	0xFE5
  1007                           fsr1l	equ	0xFE1
  1008                           
  1009                           	psect	bssCOMRAM
  1010  000042                     __pbssCOMRAM:
  1011                           	opt stack 0
  1012  000042                     _current_byte:
  1013                           	opt stack 0
  1014  000042                     	ds	2
  1015  000044                     _i:
  1016                           	opt stack 0
  1017  000044                     	ds	2
  1018  000046                     _CFGR0:
  1019                           	opt stack 0
  1020  000046                     	ds	1
  1021  000047                     _CFGR4:
  1022                           	opt stack 0
  1023  000047                     	ds	1
  1024  000048                     _CFGR5:
  1025                           	opt stack 0
  1026  000048                     	ds	1
  1027  000049                     _eusart1RxHead:
  1028                           	opt stack 0
  1029  000049                     	ds	1
  1030  00004A                     _eusart1RxTail:
  1031                           	opt stack 0
  1032  00004A                     	ds	1
  1033  00004B                     _eusart1TxHead:
  1034                           	opt stack 0
  1035  00004B                     	ds	1
  1036  00004C                     _eusart1TxTail:
  1037                           	opt stack 0
  1038  00004C                     	ds	1
  1039  00004D                     _current_ic:
  1040                           	opt stack 0
  1041  00004D                     	ds	2
  1042                           tblptru	equ	0xFF8
  1043                           tblptrh	equ	0xFF7
  1044                           tblptrl	equ	0xFF6
  1045                           tablat	equ	0xFF5
  1046                           postinc0	equ	0xFEE
  1047                           wreg	equ	0xFE8
  1048                           postdec1	equ	0xFE5
  1049                           fsr1l	equ	0xFE1
  1050                           
  1051                           	psect	bssBANK0
  1052  000060                     __pbssBANK0:
  1053                           	opt stack 0
  1054  000060                     _CVolt:
  1055                           	opt stack 0
  1056  000060                     	ds	18
  1057  000072                     _Current:
  1058                           	opt stack 0
  1059  000072                     	ds	12
  1060  00007E                     _eusart1RxBuffer:
  1061                           	opt stack 0
  1062  00007E                     	ds	8
  1063  000086                     _eusart1TxBuffer:
  1064                           	opt stack 0
  1065  000086                     	ds	8
  1066  00008E                     _CC1:
  1067                           	opt stack 0
  1068  00008E                     	ds	3
  1069  000091                     _CC2:
  1070                           	opt stack 0
  1071  000091                     	ds	3
  1072  000094                     _CC3:
  1073                           	opt stack 0
  1074  000094                     	ds	3
  1075  000097                     _Volt1:
  1076                           	opt stack 0
  1077  000097                     	ds	3
  1078  00009A                     _Volt2:
  1079                           	opt stack 0
  1080  00009A                     	ds	3
  1081  00009D                     _fault:
  1082                           	opt stack 0
  1083  00009D                     	ds	3
  1084  0000A0                     _Read_Status_INC:
  1085                           	opt stack 0
  1086  0000A0                     	ds	2
  1087  0000A2                     _errno:
  1088                           	opt stack 0
  1089  0000A2                     	ds	2
  1090  0000A4                     _faultvalue:
  1091                           	opt stack 0
  1092  0000A4                     	ds	2
  1093  0000A6                     _j:
  1094                           	opt stack 0
  1095  0000A6                     	ds	2
  1096  0000A8                     _k:
  1097                           	opt stack 0
  1098  0000A8                     	ds	2
  1099  0000AA                     _eusart1RxCount:
  1100                           	opt stack 0
  1101  0000AA                     	ds	1
  1102  0000AB                     _fault_flag:
  1103                           	opt stack 0
  1104  0000AB                     	ds	1
  1105  0000AC                     _infault:
  1106                           	opt stack 0
  1107  0000AC                     	ds	1
  1108  0000AD                     _ADAX:
  1109                           	opt stack 0
  1110  0000AD                     	ds	4
  1111  0000B1                     _ADCV:
  1112                           	opt stack 0
  1113  0000B1                     	ds	4
  1114  0000B5                     _ADSTAT:
  1115                           	opt stack 0
  1116  0000B5                     	ds	4
  1117                           tblptru	equ	0xFF8
  1118                           tblptrh	equ	0xFF7
  1119                           tblptrl	equ	0xFF6
  1120                           tablat	equ	0xFF5
  1121                           postinc0	equ	0xFEE
  1122                           wreg	equ	0xFE8
  1123                           postdec1	equ	0xFE5
  1124                           fsr1l	equ	0xFE1
  1125                           
  1126                           	psect	dataBANK0
  1127  0000F9                     __pdataBANK0:
  1128                           	opt stack 0
  1129  0000F9                     _Over_Voltage_Value:
  1130                           	opt stack 0
  1131  0000F9                     	ds	2
  1132  0000FB                     _Under_Voltage_Value:
  1133                           	opt stack 0
  1134  0000FB                     	ds	2
  1135  0000FD                     _CarOn:
  1136                           	opt stack 0
  1137  0000FD                     	ds	1
  1138  0000FE                     _CurrentDir:
  1139                           	opt stack 0
  1140  0000FE                     	ds	1
  1141                           tblptru	equ	0xFF8
  1142                           tblptrh	equ	0xFF7
  1143                           tblptrl	equ	0xFF6
  1144                           tablat	equ	0xFF5
  1145                           postinc0	equ	0xFEE
  1146                           wreg	equ	0xFE8
  1147                           postdec1	equ	0xFE5
  1148                           fsr1l	equ	0xFE1
  1149                           
  1150                           	psect	bssBANK1
  1151  0001D3                     __pbssBANK1:
  1152                           	opt stack 0
  1153  0001D3                     _Temp_DegF:
  1154                           	opt stack 0
  1155  0001D3                     	ds	24
  1156  0001EB                     _CFGR1:
  1157                           	opt stack 0
  1158  0001EB                     	ds	1
  1159  0001EC                     _CFGR2:
  1160                           	opt stack 0
  1161  0001EC                     	ds	1
  1162  0001ED                     _CFGR3:
  1163                           	opt stack 0
  1164  0001ED                     	ds	1
  1165  0001EE                     _LTC6804_DATA_ConfigBank:
  1166                           	opt stack 0
  1167  0001EE                     	ds	12
  1168                           tblptru	equ	0xFF8
  1169                           tblptrh	equ	0xFF7
  1170                           tblptrl	equ	0xFF6
  1171                           tablat	equ	0xFF5
  1172                           postinc0	equ	0xFEE
  1173                           wreg	equ	0xFE8
  1174                           postdec1	equ	0xFE5
  1175                           fsr1l	equ	0xFE1
  1176                           
  1177                           	psect	bssBANK2
  1178  000200                     __pbssBANK2:
  1179                           	opt stack 0
  1180  000200                     _PrevTemp_DegF:
  1181                           	opt stack 0
  1182  000200                     	ds	24
  1183  000218                     _Voltage_data:
  1184                           	opt stack 0
  1185  000218                     	ds	24
  1186  000230                     _CurrentOffset:
  1187                           	opt stack 0
  1188  000230                     	ds	18
  1189  000242                     _Aux_codes_Bank:
  1190                           	opt stack 0
  1191  000242                     	ds	12
  1192  00024E                     _Aux_data:
  1193                           	opt stack 0
  1194  00024E                     	ds	12
  1195  00025A                     _Stat_codes_Bank:
  1196                           	opt stack 0
  1197  00025A                     	ds	12
  1198  000266                     _aux_codes_Bank1:
  1199                           	opt stack 0
  1200  000266                     	ds	12
  1201  000272                     _aux_codes_Bank2:
  1202                           	opt stack 0
  1203  000272                     	ds	12
  1204  00027E                     _TmpTemp_DegF:
  1205                           	opt stack 0
  1206  00027E                     	ds	24
  1207  000296                     _cell_codes_Bank:
  1208                           	opt stack 0
  1209  000296                     	ds	24
  1210                           tblptru	equ	0xFF8
  1211                           tblptrh	equ	0xFF7
  1212                           tblptrl	equ	0xFF6
  1213                           tablat	equ	0xFF5
  1214                           postinc0	equ	0xFEE
  1215                           wreg	equ	0xFE8
  1216                           postdec1	equ	0xFE5
  1217                           fsr1l	equ	0xFE1
  1218                           
  1219                           	psect	dataBANK2
  1220  0002AE                     __pdataBANK2:
  1221                           	opt stack 0
  1222  0002AE                     _retrn:
  1223                           	opt stack 0
  1224  0002AE                     	ds	16
  1225                           tblptru	equ	0xFF8
  1226                           tblptrh	equ	0xFF7
  1227                           tblptrl	equ	0xFF6
  1228                           tablat	equ	0xFF5
  1229                           postinc0	equ	0xFEE
  1230                           wreg	equ	0xFE8
  1231                           postdec1	equ	0xFE5
  1232                           fsr1l	equ	0xFE1
  1233                           
  1234                           	psect	cstackBANK1
  1235  000100                     __pcstackBANK1:
  1236                           	opt stack 0
  1237  000100                     _Run_Mode$2826:
  1238                           	opt stack 0
  1239  000100                     LTC6804_wrcfg@cmd:
  1240                           	opt stack 0
  1241                           
  1242                           ; 200 bytes @ 0x0
  1243  000100                     	ds	3
  1244  000103                     Run_Mode@k:
  1245                           	opt stack 0
  1246                           
  1247                           ; 2 bytes @ 0x3
  1248  000103                     	ds	197
  1249  0001C8                     LTC6804_wrcfg@BYTES_IN_REG:
  1250                           	opt stack 0
  1251                           
  1252                           ; 2 bytes @ 0xC8
  1253  0001C8                     	ds	2
  1254  0001CA                     LTC6804_wrcfg@temp_pec:
  1255                           	opt stack 0
  1256                           
  1257                           ; 2 bytes @ 0xCA
  1258  0001CA                     	ds	2
  1259  0001CC                     LTC6804_wrcfg@cmd_index:
  1260                           	opt stack 0
  1261                           
  1262                           ; 2 bytes @ 0xCC
  1263  0001CC                     	ds	2
  1264  0001CE                     
  1265                           ; 2 bytes @ 0xCE
  1266  0001CE                     	ds	2
  1267  0001D0                     
  1268                           ; 3 bytes @ 0xD0
  1269  0001D0                     	ds	3
  1270                           tblptru	equ	0xFF8
  1271                           tblptrh	equ	0xFF7
  1272                           tblptrl	equ	0xFF6
  1273                           tablat	equ	0xFF5
  1274                           postinc0	equ	0xFEE
  1275                           wreg	equ	0xFE8
  1276                           postdec1	equ	0xFE5
  1277                           fsr1l	equ	0xFE1
  1278                           
  1279                           	psect	cstackBANK0
  1280  0000B9                     __pcstackBANK0:
  1281                           	opt stack 0
  1282  0000B9                     ??___ftadd:
  1283  0000B9                     ?_LTC6804_rdcv:
  1284                           	opt stack 0
  1285  0000B9                     ___fttol@sign1:
  1286                           	opt stack 0
  1287  0000B9                     LTC6804_rdcv@reg:
  1288                           	opt stack 0
  1289                           
  1290                           ; 2 bytes @ 0x0
  1291  0000B9                     	ds	1
  1292  0000BA                     ___fttol@lval:
  1293                           	opt stack 0
  1294                           
  1295                           ; 4 bytes @ 0x1
  1296  0000BA                     	ds	1
  1297  0000BB                     LTC6804_rdcv@total_ic:
  1298                           	opt stack 0
  1299                           
  1300                           ; 2 bytes @ 0x2
  1301  0000BB                     	ds	1
  1302  0000BC                     ___ftadd@sign:
  1303                           	opt stack 0
  1304                           
  1305                           ; 1 bytes @ 0x3
  1306  0000BC                     	ds	1
  1307  0000BD                     ___ftadd@exp2:
  1308                           	opt stack 0
  1309  0000BD                     LTC6804_rdcv@cell_codes:
  1310                           	opt stack 0
  1311                           
  1312                           ; 2 bytes @ 0x4
  1313  0000BD                     	ds	1
  1314  0000BE                     ___ftadd@exp1:
  1315                           	opt stack 0
  1316  0000BE                     ___fttol@exp1:
  1317                           	opt stack 0
  1318                           
  1319                           ; 1 bytes @ 0x5
  1320  0000BE                     	ds	1
  1321  0000BF                     ??_LTC6804_rdcv:
  1322  0000BF                     ?___ftsub:
  1323                           	opt stack 0
  1324  0000BF                     ___ftsub@f1:
  1325                           	opt stack 0
  1326                           
  1327                           ; 3 bytes @ 0x6
  1328  0000BF                     	ds	3
  1329  0000C2                     ___ftsub@f2:
  1330                           	opt stack 0
  1331                           
  1332                           ; 3 bytes @ 0x9
  1333  0000C2                     	ds	3
  1334  0000C5                     ?_printf:
  1335                           	opt stack 0
  1336  0000C5                     LTC6804_rdcv@hi:
  1337                           	opt stack 0
  1338  0000C5                     printf@f:
  1339                           	opt stack 0
  1340                           
  1341                           ; 2 bytes @ 0xC
  1342  0000C5                     	ds	2
  1343  0000C7                     _LTC6804_rdcv$2831:
  1344                           	opt stack 0
  1345                           
  1346                           ; 2 bytes @ 0xE
  1347  0000C7                     	ds	2
  1348  0000C9                     LTC6804_rdcv@cell_data:
  1349                           	opt stack 0
  1350                           
  1351                           ; 20 bytes @ 0x10
  1352  0000C9                     	ds	3
  1353  0000CC                     ??_printf:
  1354                           
  1355                           ; 0 bytes @ 0x13
  1356  0000CC                     	ds	6
  1357  0000D2                     _printf$2837:
  1358                           	opt stack 0
  1359                           
  1360                           ; 3 bytes @ 0x19
  1361  0000D2                     	ds	3
  1362  0000D5                     printf@ap:
  1363                           	opt stack 0
  1364                           
  1365                           ; 2 bytes @ 0x1C
  1366  0000D5                     	ds	2
  1367  0000D7                     printf@flag:
  1368                           	opt stack 0
  1369                           
  1370                           ; 2 bytes @ 0x1E
  1371  0000D7                     	ds	2
  1372  0000D9                     printf@width:
  1373                           	opt stack 0
  1374                           
  1375                           ; 2 bytes @ 0x20
  1376  0000D9                     	ds	2
  1377  0000DB                     printf@tmpval:
  1378                           	opt stack 0
  1379                           
  1380                           ; 4 bytes @ 0x22
  1381  0000DB                     	ds	2
  1382  0000DD                     LTC6804_rdcv@pec_error:
  1383                           	opt stack 0
  1384                           
  1385                           ; 2 bytes @ 0x24
  1386  0000DD                     	ds	2
  1387  0000DF                     LTC6804_rdcv@NUM_RX_BYT:
  1388                           	opt stack 0
  1389  0000DF                     printf@val:
  1390                           	opt stack 0
  1391                           
  1392                           ; 4 bytes @ 0x26
  1393  0000DF                     	ds	2
  1394  0000E1                     LTC6804_rdcv@BYT_IN_REG:
  1395                           	opt stack 0
  1396                           
  1397                           ; 2 bytes @ 0x28
  1398  0000E1                     	ds	2
  1399  0000E3                     LTC6804_rdcv@parsed_cell:
  1400                           	opt stack 0
  1401  0000E3                     printf@exp:
  1402                           	opt stack 0
  1403                           
  1404                           ; 2 bytes @ 0x2A
  1405  0000E3                     	ds	2
  1406  0000E5                     LTC6804_rdcv@received_pec:
  1407                           	opt stack 0
  1408  0000E5                     printf@fval:
  1409                           	opt stack 0
  1410                           
  1411                           ; 3 bytes @ 0x2C
  1412  0000E5                     	ds	2
  1413  0000E7                     LTC6804_rdcv@data_pec:
  1414                           	opt stack 0
  1415                           
  1416                           ; 2 bytes @ 0x2E
  1417  0000E7                     	ds	1
  1418  0000E8                     printf@prec:
  1419                           	opt stack 0
  1420                           
  1421                           ; 2 bytes @ 0x2F
  1422  0000E8                     	ds	1
  1423  0000E9                     LTC6804_rdcv@cell_reg:
  1424                           	opt stack 0
  1425                           
  1426                           ; 2 bytes @ 0x30
  1427  0000E9                     	ds	1
  1428  0000EA                     printf@c:
  1429                           	opt stack 0
  1430                           
  1431                           ; 1 bytes @ 0x31
  1432  0000EA                     	ds	1
  1433  0000EB                     LTC6804_rdcv@CELL_IN_REG:
  1434                           	opt stack 0
  1435                           
  1436                           ; 2 bytes @ 0x32
  1437  0000EB                     	ds	2
  1438  0000ED                     LTC6804_rdcv@current_cell:
  1439                           	opt stack 0
  1440                           
  1441                           ; 2 bytes @ 0x34
  1442  0000ED                     	ds	2
  1443  0000EF                     LTC6804_rdcv@data_counter:
  1444                           	opt stack 0
  1445                           
  1446                           ; 2 bytes @ 0x36
  1447  0000EF                     	ds	2
  1448  0000F1                     ?_Read_Battery:
  1449                           	opt stack 0
  1450  0000F1                     Read_Battery@BatteryPlacement:
  1451                           	opt stack 0
  1452                           
  1453                           ; 2 bytes @ 0x38
  1454  0000F1                     	ds	2
  1455  0000F3                     Read_Battery@cell_codes:
  1456                           	opt stack 0
  1457                           
  1458                           ; 2 bytes @ 0x3A
  1459  0000F3                     	ds	2
  1460  0000F5                     ??_Read_Battery:
  1461                           
  1462                           ; 0 bytes @ 0x3C
  1463  0000F5                     	ds	2
  1464  0000F7                     Read_Battery@Read_Status:
  1465                           	opt stack 0
  1466                           
  1467                           ; 2 bytes @ 0x3E
  1468  0000F7                     	ds	2
  1469                           tblptru	equ	0xFF8
  1470                           tblptrh	equ	0xFF7
  1471                           tblptrl	equ	0xFF6
  1472                           tablat	equ	0xFF5
  1473                           postinc0	equ	0xFEE
  1474                           wreg	equ	0xFE8
  1475                           postdec1	equ	0xFE5
  1476                           fsr1l	equ	0xFE1
  1477                           
  1478                           	psect	cstackCOMRAM
  1479  000001                     __pcstackCOMRAM:
  1480                           	opt stack 0
  1481  000001                     ??_INTERRUPT_InterruptManager:
  1482  000001                     
  1483                           ; 2 bytes @ 0x0
  1484  000001                     	ds	14
  1485  00000F                     ??_isdigit:
  1486  00000F                     ??_TMR0_Initialize:
  1487  00000F                     ?___awmod:
  1488                           	opt stack 0
  1489  00000F                     ?___ftpack:
  1490                           	opt stack 0
  1491  00000F                     ?___ftneg:
  1492                           	opt stack 0
  1493  00000F                     ?__tdiv_to_l_:
  1494                           	opt stack 0
  1495  00000F                     ?__div_to_l_:
  1496                           	opt stack 0
  1497  00000F                     ?___lldiv:
  1498                           	opt stack 0
  1499  00000F                     SPI2_Exchange8bit@stuff:
  1500                           	opt stack 0
  1501  00000F                     EUSART1_Write@txData:
  1502                           	opt stack 0
  1503  00000F                     Delay@wait:
  1504                           	opt stack 0
  1505  00000F                     DelayMicro@wait:
  1506                           	opt stack 0
  1507  00000F                     set_adc@MD:
  1508                           	opt stack 0
  1509  00000F                     ___awmod@dividend:
  1510                           	opt stack 0
  1511  00000F                     __div_to_l_@f1:
  1512                           	opt stack 0
  1513  00000F                     ___ftpack@arg:
  1514                           	opt stack 0
  1515  00000F                     __tdiv_to_l_@f1:
  1516                           	opt stack 0
  1517  00000F                     ___ftge@ff1:
  1518                           	opt stack 0
  1519  00000F                     ___ftneg@f1:
  1520                           	opt stack 0
  1521  00000F                     ___lldiv@dividend:
  1522                           	opt stack 0
  1523                           
  1524                           ; 4 bytes @ 0xE
  1525  00000F                     	ds	1
  1526  000010                     SPI2_Exchange8bit@data:
  1527                           	opt stack 0
  1528  000010                     putch@txData:
  1529                           	opt stack 0
  1530  000010                     _isdigit$2266:
  1531                           	opt stack 0
  1532                           
  1533                           ; 1 bytes @ 0xF
  1534  000010                     	ds	1
  1535  000011                     ??_Delay:
  1536  000011                     ??_DelayMicro:
  1537  000011                     isdigit@c:
  1538                           	opt stack 0
  1539  000011                     set_adc@DCP:
  1540                           	opt stack 0
  1541  000011                     spi_write_array@len:
  1542                           	opt stack 0
  1543  000011                     spi_write_read@tx_Data:
  1544                           	opt stack 0
  1545  000011                     ___awmod@divisor:
  1546                           	opt stack 0
  1547                           
  1548                           ; 2 bytes @ 0x10
  1549  000011                     	ds	1
  1550  000012                     ___ftpack@exp:
  1551                           	opt stack 0
  1552  000012                     Delay@x:
  1553                           	opt stack 0
  1554  000012                     DelayMicro@x:
  1555                           	opt stack 0
  1556  000012                     __div_to_l_@f2:
  1557                           	opt stack 0
  1558  000012                     __tdiv_to_l_@f2:
  1559                           	opt stack 0
  1560  000012                     ___ftge@ff2:
  1561                           	opt stack 0
  1562                           
  1563                           ; 3 bytes @ 0x11
  1564  000012                     	ds	1
  1565  000013                     ___awmod@counter:
  1566                           	opt stack 0
  1567  000013                     ___ftpack@sign:
  1568                           	opt stack 0
  1569  000013                     set_adc@CH:
  1570                           	opt stack 0
  1571  000013                     spi_write_array@data:
  1572                           	opt stack 0
  1573  000013                     spi_write_read@tx_len:
  1574                           	opt stack 0
  1575  000013                     ___lldiv@divisor:
  1576                           	opt stack 0
  1577                           
  1578                           ; 4 bytes @ 0x12
  1579  000013                     	ds	1
  1580  000014                     ??___ftpack:
  1581  000014                     ___awmod@sign:
  1582                           	opt stack 0
  1583                           
  1584                           ; 1 bytes @ 0x13
  1585  000014                     	ds	1
  1586  000015                     ??_spi_write_array:
  1587  000015                     ??__tdiv_to_l_:
  1588  000015                     ??___ftge:
  1589  000015                     ?___awdiv:
  1590                           	opt stack 0
  1591  000015                     set_adc@CHG:
  1592                           	opt stack 0
  1593  000015                     spi_write_read@rx_data:
  1594                           	opt stack 0
  1595  000015                     ___awdiv@dividend:
  1596                           	opt stack 0
  1597  000015                     __div_to_l_@quot:
  1598                           	opt stack 0
  1599                           
  1600                           ; 4 bytes @ 0x14
  1601  000015                     	ds	2
  1602  000017                     ??_set_adc:
  1603  000017                     ?___awtoft:
  1604                           	opt stack 0
  1605  000017                     ?___lltoft:
  1606                           	opt stack 0
  1607  000017                     spi_write_read@rx_len:
  1608                           	opt stack 0
  1609  000017                     ___awdiv@divisor:
  1610                           	opt stack 0
  1611  000017                     ___awtoft@c:
  1612                           	opt stack 0
  1613  000017                     ___lldiv@quotient:
  1614                           	opt stack 0
  1615  000017                     ___lltoft@c:
  1616                           	opt stack 0
  1617                           
  1618                           ; 4 bytes @ 0x16
  1619  000017                     	ds	1
  1620  000018                     __tdiv_to_l_@quot:
  1621                           	opt stack 0
  1622                           
  1623                           ; 4 bytes @ 0x17
  1624  000018                     	ds	1
  1625  000019                     ??_spi_write_read:
  1626  000019                     ___awdiv@counter:
  1627                           	opt stack 0
  1628  000019                     __div_to_l_@cntr:
  1629                           	opt stack 0
  1630  000019                     set_adc@md_bits:
  1631                           	opt stack 0
  1632                           
  1633                           ; 2 bytes @ 0x18
  1634  000019                     	ds	1
  1635  00001A                     ___awdiv@sign:
  1636                           	opt stack 0
  1637  00001A                     ___awtoft@sign:
  1638                           	opt stack 0
  1639  00001A                     __div_to_l_@exp1:
  1640                           	opt stack 0
  1641                           
  1642                           ; 1 bytes @ 0x19
  1643  00001A                     	ds	1
  1644  00001B                     ??___lltoft:
  1645  00001B                     ___lldiv@counter:
  1646                           	opt stack 0
  1647  00001B                     spi_write_read@i:
  1648                           	opt stack 0
  1649  00001B                     ___awdiv@quotient:
  1650                           	opt stack 0
  1651                           
  1652                           ; 2 bytes @ 0x1A
  1653  00001B                     	ds	1
  1654  00001C                     ?___llmod:
  1655                           	opt stack 0
  1656  00001C                     __tdiv_to_l_@cntr:
  1657                           	opt stack 0
  1658  00001C                     ___llmod@dividend:
  1659                           	opt stack 0
  1660                           
  1661                           ; 4 bytes @ 0x1B
  1662  00001C                     	ds	1
  1663  00001D                     ?___wmul:
  1664                           	opt stack 0
  1665  00001D                     __tdiv_to_l_@exp1:
  1666                           	opt stack 0
  1667  00001D                     ___wmul@multiplier:
  1668                           	opt stack 0
  1669                           
  1670                           ; 2 bytes @ 0x1C
  1671  00001D                     	ds	2
  1672  00001F                     ___lltoft@exp:
  1673                           	opt stack 0
  1674  00001F                     ___wmul@multiplicand:
  1675                           	opt stack 0
  1676                           
  1677                           ; 2 bytes @ 0x1E
  1678  00001F                     	ds	1
  1679  000020                     ___llmod@divisor:
  1680                           	opt stack 0
  1681                           
  1682                           ; 4 bytes @ 0x1F
  1683  000020                     	ds	1
  1684  000021                     ___wmul@product:
  1685                           	opt stack 0
  1686                           
  1687                           ; 2 bytes @ 0x20
  1688  000021                     	ds	2
  1689  000023                     ?_pec15_calc:
  1690                           	opt stack 0
  1691  000023                     ?___ftmul:
  1692                           	opt stack 0
  1693  000023                     SetTempEnable@ic:
  1694                           	opt stack 0
  1695  000023                     Set_ADC_Mode@ic:
  1696                           	opt stack 0
  1697  000023                     Set_DCC_Mode_OFF@ic:
  1698                           	opt stack 0
  1699  000023                     Set_DCTO_Mode_OFF@ic:
  1700                           	opt stack 0
  1701  000023                     Set_REFON_Pin@ic:
  1702                           	opt stack 0
  1703  000023                     pec15_calc@len:
  1704                           	opt stack 0
  1705  000023                     ___ftmul@f1:
  1706                           	opt stack 0
  1707                           
  1708                           ; 3 bytes @ 0x22
  1709  000023                     	ds	1
  1710  000024                     ___llmod@counter:
  1711                           	opt stack 0
  1712                           
  1713                           ; 1 bytes @ 0x23
  1714  000024                     	ds	1
  1715  000025                     ??_Set_DCC_Mode_OFF:
  1716  000025                     ??_Set_DCTO_Mode_OFF:
  1717  000025                     SetTempEnable@value:
  1718                           	opt stack 0
  1719  000025                     Set_ADC_Mode@ADCOPT_Mode:
  1720                           	opt stack 0
  1721  000025                     Set_REFON_Pin@REFON_Mode:
  1722                           	opt stack 0
  1723  000025                     pec15_calc@data:
  1724                           	opt stack 0
  1725                           
  1726                           ; 2 bytes @ 0x24
  1727  000025                     	ds	1
  1728  000026                     ??_Set_REFON_Pin:
  1729  000026                     ??_Set_ADC_Mode:
  1730  000026                     ??_SetTempEnable:
  1731  000026                     ___ftmul@f2:
  1732                           	opt stack 0
  1733                           
  1734                           ; 3 bytes @ 0x25
  1735  000026                     	ds	1
  1736  000027                     ??_pec15_calc:
  1737  000027                     Set_DCC_Mode_OFF@fault_value:
  1738                           	opt stack 0
  1739  000027                     Set_DCTO_Mode_OFF@fault_value:
  1740                           	opt stack 0
  1741                           
  1742                           ; 2 bytes @ 0x26
  1743  000027                     	ds	1
  1744  000028                     SetTempEnable@fault_value:
  1745                           	opt stack 0
  1746  000028                     Set_ADC_Mode@fault_value:
  1747                           	opt stack 0
  1748  000028                     Set_REFON_Pin@fault_value:
  1749                           	opt stack 0
  1750                           
  1751                           ; 2 bytes @ 0x27
  1752  000028                     	ds	1
  1753  000029                     ??___ftmul:
  1754                           
  1755                           ; 0 bytes @ 0x28
  1756  000029                     	ds	3
  1757  00002C                     ___ftmul@exp:
  1758                           	opt stack 0
  1759  00002C                     pec15_calc@addr:
  1760                           	opt stack 0
  1761                           
  1762                           ; 2 bytes @ 0x2B
  1763  00002C                     	ds	1
  1764  00002D                     ___ftmul@f3_as_product:
  1765                           	opt stack 0
  1766                           
  1767                           ; 3 bytes @ 0x2C
  1768  00002D                     	ds	1
  1769  00002E                     pec15_calc@remainder:
  1770                           	opt stack 0
  1771                           
  1772                           ; 2 bytes @ 0x2D
  1773  00002E                     	ds	2
  1774  000030                     ??_LTC6804_adcv:
  1775  000030                     ___ftmul@cntr:
  1776                           	opt stack 0
  1777  000030                     LTC6804_rdcv_reg@reg:
  1778                           	opt stack 0
  1779  000030                     LTC6804_wrcfg@total_ic:
  1780                           	opt stack 0
  1781                           
  1782                           ; 2 bytes @ 0x2F
  1783  000030                     	ds	1
  1784  000031                     ___ftmul@sign:
  1785                           	opt stack 0
  1786                           
  1787                           ; 1 bytes @ 0x30
  1788  000031                     	ds	1
  1789  000032                     ?_fround:
  1790                           	opt stack 0
  1791  000032                     ?_scale:
  1792                           	opt stack 0
  1793  000032                     LTC6804_rdcv_reg@total_ic:
  1794                           	opt stack 0
  1795  000032                     LTC6804_wrcfg@config:
  1796                           	opt stack 0
  1797  000032                     LTC6804_adcv@cmd:
  1798                           	opt stack 0
  1799                           
  1800                           ; 8 bytes @ 0x31
  1801  000032                     	ds	2
  1802  000034                     ??_LTC6804_wrcfg:
  1803  000034                     LTC6804_rdcv_reg@data:
  1804                           	opt stack 0
  1805                           
  1806                           ; 2 bytes @ 0x33
  1807  000034                     	ds	1
  1808  000035                     _fround$2835:
  1809                           	opt stack 0
  1810  000035                     _scale$2836:
  1811                           	opt stack 0
  1812                           
  1813                           ; 3 bytes @ 0x34
  1814  000035                     	ds	1
  1815  000036                     ??_LTC6804_rdcv_reg:
  1816  000036                     Initalize_LT6804b@IC:
  1817                           	opt stack 0
  1818                           
  1819                           ; 2 bytes @ 0x35
  1820  000036                     	ds	2
  1821  000038                     scale@scl:
  1822                           	opt stack 0
  1823  000038                     LTC6804_rdcv_reg@temp_pec:
  1824                           	opt stack 0
  1825  000038                     _fround$2834:
  1826                           	opt stack 0
  1827                           
  1828                           ; 3 bytes @ 0x37
  1829  000038                     	ds	1
  1830  000039                     ?___fttol:
  1831                           	opt stack 0
  1832  000039                     ___fttol@f1:
  1833                           	opt stack 0
  1834                           
  1835                           ; 3 bytes @ 0x38
  1836  000039                     	ds	1
  1837  00003A                     LTC6804_adcv@temp_pec:
  1838                           	opt stack 0
  1839  00003A                     LTC6804_rdcv_reg@cmd:
  1840                           	opt stack 0
  1841                           
  1842                           ; 8 bytes @ 0x39
  1843  00003A                     	ds	1
  1844  00003B                     fround@prec:
  1845                           	opt stack 0
  1846                           
  1847                           ; 1 bytes @ 0x3A
  1848  00003B                     	ds	1
  1849  00003C                     ?___ftadd:
  1850                           	opt stack 0
  1851  00003C                     ___ftadd@f1:
  1852                           	opt stack 0
  1853                           
  1854                           ; 3 bytes @ 0x3B
  1855  00003C                     	ds	1
  1856  00003D                     ??___fttol:
  1857                           
  1858                           ; 0 bytes @ 0x3C
  1859  00003D                     	ds	2
  1860  00003F                     ___ftadd@f2:
  1861                           	opt stack 0
  1862                           
  1863                           ; 3 bytes @ 0x3E
  1864  00003F                     	ds	3
  1865  000042                     tblptru	equ	0xFF8
  1866                           tblptrh	equ	0xFF7
  1867                           tblptrl	equ	0xFF6
  1868                           tablat	equ	0xFF5
  1869                           postinc0	equ	0xFEE
  1870                           wreg	equ	0xFE8
  1871                           postdec1	equ	0xFE5
  1872                           fsr1l	equ	0xFE1
  1873                           
  1874                           ; 0 bytes @ 0x41
  1875 ;;
  1876 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1877 ;;
  1878 ;; *************** function _main *****************
  1879 ;; Defined at:
  1880 ;;		line 33 in file "Main.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  argc            2  206[BANK1 ] int 
  1883 ;;  argv            3  208[BANK1 ] PTR PTR unsigned char 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  2  206[BANK1 ] int 
  1888 ;; Registers used:
  1889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1895 ;;      Params:         0       0       5       0       0       0       0
  1896 ;;      Locals:         0       0       0       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0       0       0
  1898 ;;      Totals:         0       0       5       0       0       0       0
  1899 ;;Total ram usage:        5 bytes
  1900 ;; Hardware stack levels required when called:    9
  1901 ;; This function calls:
  1902 ;;		_Delay
  1903 ;;		_Run_Mode
  1904 ;;		_SYSTEM_Initialize
  1905 ;;		_Start_BMS
  1906 ;;		_printf
  1907 ;; This function is called by:
  1908 ;;		Startup code after reset
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text0
  1913  002EBE                     __ptext0:
  1914                           	opt stack 0
  1915  002EBE                     _main:
  1916                           	opt stack 22
  1917                           
  1918                           ;Main.c: 35: SYSTEM_Initialize();
  1919                           
  1920                           ;incstack = 0
  1921  002EBE  EC7B  F018         	call	_SYSTEM_Initialize	;wreg free
  1922                           
  1923                           ;Main.c: 36: do { LATD6 = 1; } while(0);
  1924  002EC2  8C8C               	bsf	3980,6,c	;volatile
  1925                           
  1926                           ;Main.c: 37: Delay(120);
  1927  002EC4  0E00               	movlw	0
  1928  002EC6  6E10               	movwf	Delay@wait+1,c
  1929  002EC8  0E78               	movlw	120
  1930  002ECA  6E0F               	movwf	Delay@wait,c
  1931  002ECC  ECF4  F017         	call	_Delay	;wreg free
  1932                           
  1933                           ;Main.c: 38: do { LATD6 = 0; } while(0);
  1934  002ED0  9C8C               	bcf	3980,6,c	;volatile
  1935                           
  1936                           ;Main.c: 56: (INTCONbits.GIE = 1);
  1937  002ED2  8EF2               	bsf	intcon,7,c	;volatile
  1938                           
  1939                           ;Main.c: 59: (INTCONbits.PEIE = 1);
  1940  002ED4  8CF2               	bsf	intcon,6,c	;volatile
  1941                           
  1942                           ;Main.c: 68: LATCbits.LATC5 =1;
  1943  002ED6  8A8B               	bsf	3979,5,c	;volatile
  1944                           
  1945                           ;Main.c: 69: printf("BOOT");
  1946  002ED8  0EFA               	movlw	low STR_1
  1947  002EDA  0100               	movlb	0	; () banked
  1948  002EDC  6FC5               	movwf	printf@f& (0+255),b
  1949  002EDE  0E7F               	movlw	high STR_1
  1950  002EE0  0100               	movlb	0	; () banked
  1951  002EE2  6FC6               	movwf	(printf@f+1)& (0+255),b
  1952  002EE4  EC58  F000         	call	_printf	;wreg free
  1953                           
  1954                           ;Main.c: 70: Start_BMS();
  1955  002EE8  EC08  F019         	call	_Start_BMS	;wreg free
  1956  002EEC                     l8383:
  1957                           
  1958                           ;Main.c: 73: {
  1959                           ;Main.c: 74: Run_Mode();
  1960  002EEC  ECD0  F012         	call	_Run_Mode	;wreg free
  1961                           
  1962                           ;Main.c: 75: Delay(500);
  1963  002EF0  0E01               	movlw	1
  1964  002EF2  6E10               	movwf	Delay@wait+1,c
  1965  002EF4  0EF4               	movlw	244
  1966  002EF6  6E0F               	movwf	Delay@wait,c
  1967  002EF8  ECF4  F017         	call	_Delay	;wreg free
  1968  002EFC  D7F7               	goto	l8383
  1969  002EFE                     __end_of_main:
  1970                           	opt stack 0
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           intcon	equ	0xFF2
  1976                           postinc0	equ	0xFEE
  1977                           wreg	equ	0xFE8
  1978                           postdec1	equ	0xFE5
  1979                           fsr1l	equ	0xFE1
  1980                           
  1981 ;; *************** function _Start_BMS *****************
  1982 ;; Defined at:
  1983 ;;		line 31 in file "BatteryManagment.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;		None               void
  1990 ;; Registers used:
  1991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1997 ;;      Params:         0       0       0       0       0       0       0
  1998 ;;      Locals:         0       0       0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0
  2000 ;;      Totals:         0       0       0       0       0       0       0
  2001 ;;Total ram usage:        0 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    8
  2004 ;; This function calls:
  2005 ;;		_Initalize_LT6804b
  2006 ;; This function is called by:
  2007 ;;		_main
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text1
  2012  003210                     __ptext1:
  2013                           	opt stack 0
  2014  003210                     _Start_BMS:
  2015                           	opt stack 22
  2016                           
  2017                           ;BatteryManagment.c: 34: Initalize_LT6804b();
  2018                           
  2019                           ;incstack = 0
  2020  003210  EC1A  F014         	call	_Initalize_LT6804b	;wreg free
  2021  003214  0012               	return		;funcret
  2022  003216                     __end_of_Start_BMS:
  2023                           	opt stack 0
  2024                           tblptru	equ	0xFF8
  2025                           tblptrh	equ	0xFF7
  2026                           tblptrl	equ	0xFF6
  2027                           tablat	equ	0xFF5
  2028                           intcon	equ	0xFF2
  2029                           postinc0	equ	0xFEE
  2030                           wreg	equ	0xFE8
  2031                           postdec1	equ	0xFE5
  2032                           fsr1l	equ	0xFE1
  2033                           
  2034 ;; *************** function _Initalize_LT6804b *****************
  2035 ;; Defined at:
  2036 ;;		line 57 in file "BatteryManagment.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  IC              2   53[COMRAM] int 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;		None               void
  2043 ;; Registers used:
  2044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2050 ;;      Params:         0       0       0       0       0       0       0
  2051 ;;      Locals:         2       0       0       0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0       0       0
  2053 ;;      Totals:         2       0       0       0       0       0       0
  2054 ;;Total ram usage:        2 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    7
  2057 ;; This function calls:
  2058 ;;		_SetTempEnable
  2059 ;;		_Set_ADC_Mode
  2060 ;;		_Set_DCC_Mode_OFF
  2061 ;;		_Set_DCTO_Mode_OFF
  2062 ;;		_Set_REFON_Pin
  2063 ;;		_UpdateLT6804
  2064 ;; This function is called by:
  2065 ;;		_Start_BMS
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text2
  2070  002834                     __ptext2:
  2071                           	opt stack 0
  2072  002834                     _Initalize_LT6804b:
  2073                           	opt stack 22
  2074                           
  2075                           ;BatteryManagment.c: 58: int IC = 0;
  2076                           
  2077                           ;incstack = 0
  2078  002834  0E00               	movlw	0
  2079  002836  6E37               	movwf	Initalize_LT6804b@IC+1,c
  2080  002838  0E00               	movlw	0
  2081  00283A  6E36               	movwf	Initalize_LT6804b@IC,c
  2082                           
  2083                           ;BatteryManagment.c: 60: CFGR0=0xFE;
  2084  00283C  0EFE               	movlw	254
  2085  00283E  6E46               	movwf	_CFGR0,c
  2086                           
  2087                           ;BatteryManagment.c: 61: CFGR1=0;
  2088  002840  0E00               	movlw	0
  2089  002842  0101               	movlb	1	; () banked
  2090  002844  6FEB               	movwf	_CFGR1& (0+255),b
  2091                           
  2092                           ;BatteryManagment.c: 62: CFGR2=0;
  2093  002846  0E00               	movlw	0
  2094  002848  0101               	movlb	1	; () banked
  2095  00284A  6FEC               	movwf	_CFGR2& (0+255),b
  2096                           
  2097                           ;BatteryManagment.c: 63: CFGR3=0;
  2098  00284C  0E00               	movlw	0
  2099  00284E  0101               	movlb	1	; () banked
  2100  002850  6FED               	movwf	_CFGR3& (0+255),b
  2101                           
  2102                           ;BatteryManagment.c: 64: CFGR4=0;
  2103  002852  0E00               	movlw	0
  2104  002854  6E47               	movwf	_CFGR4,c
  2105                           
  2106                           ;BatteryManagment.c: 65: CFGR5=0;
  2107  002856  0E00               	movlw	0
  2108  002858  6E48               	movwf	_CFGR5,c
  2109                           
  2110                           ;BatteryManagment.c: 68: while (IC < 1) {
  2111  00285A  D026               	goto	l8023
  2112  00285C                     l8019:
  2113                           
  2114                           ;BatteryManagment.c: 69: Set_REFON_Pin(IC, 1);
  2115  00285C  C036  F023         	movff	Initalize_LT6804b@IC,Set_REFON_Pin@ic
  2116  002860  C037  F024         	movff	Initalize_LT6804b@IC+1,Set_REFON_Pin@ic+1
  2117  002864  0E01               	movlw	1
  2118  002866  6E25               	movwf	Set_REFON_Pin@REFON_Mode,c
  2119  002868  ECCD  F016         	call	_Set_REFON_Pin	;wreg free
  2120                           
  2121                           ;BatteryManagment.c: 70: Set_ADC_Mode(IC, 0);
  2122  00286C  C036  F023         	movff	Initalize_LT6804b@IC,Set_ADC_Mode@ic
  2123  002870  C037  F024         	movff	Initalize_LT6804b@IC+1,Set_ADC_Mode@ic+1
  2124  002874  0E00               	movlw	0
  2125  002876  6E25               	movwf	Set_ADC_Mode@ADCOPT_Mode,c
  2126  002878  ECF2  F016         	call	_Set_ADC_Mode	;wreg free
  2127                           
  2128                           ;BatteryManagment.c: 71: Set_DCC_Mode_OFF(IC);
  2129  00287C  C036  F023         	movff	Initalize_LT6804b@IC,Set_DCC_Mode_OFF@ic
  2130  002880  C037  F024         	movff	Initalize_LT6804b@IC+1,Set_DCC_Mode_OFF@ic+1
  2131  002884  EC22  F015         	call	_Set_DCC_Mode_OFF	;wreg free
  2132                           
  2133                           ;BatteryManagment.c: 72: Set_DCTO_Mode_OFF(IC);
  2134  002888  C036  F023         	movff	Initalize_LT6804b@IC,Set_DCTO_Mode_OFF@ic
  2135  00288C  C037  F024         	movff	Initalize_LT6804b@IC+1,Set_DCTO_Mode_OFF@ic+1
  2136  002890  EC3C  F017         	call	_Set_DCTO_Mode_OFF	;wreg free
  2137                           
  2138                           ;BatteryManagment.c: 73: SetTempEnable(IC, 0);
  2139  002894  C036  F023         	movff	Initalize_LT6804b@IC,SetTempEnable@ic
  2140  002898  C037  F024         	movff	Initalize_LT6804b@IC+1,SetTempEnable@ic+1
  2141  00289C  0E00               	movlw	0
  2142  00289E  6E25               	movwf	SetTempEnable@value,c
  2143  0028A0  EC17  F017         	call	_SetTempEnable	;wreg free
  2144                           
  2145                           ;BatteryManagment.c: 75: IC++;
  2146  0028A4  4A36               	infsnz	Initalize_LT6804b@IC,f,c
  2147  0028A6  2A37               	incf	Initalize_LT6804b@IC+1,f,c
  2148  0028A8                     l8023:
  2149  0028A8  BE37               	btfsc	Initalize_LT6804b@IC+1,7,c
  2150  0028AA  D7D8               	goto	l8019
  2151  0028AC  5037               	movf	Initalize_LT6804b@IC+1,w,c
  2152  0028AE  E103               	bnz	l8025
  2153  0028B0  0436               	decf	Initalize_LT6804b@IC,w,c
  2154  0028B2  A0D8               	btfss	status,0,c
  2155  0028B4  D7D3               	goto	l8019
  2156  0028B6                     l8025:
  2157                           
  2158                           ;BatteryManagment.c: 76: };
  2159                           ;BatteryManagment.c: 79: UpdateLT6804();
  2160  0028B6  ECC8  F018         	call	_UpdateLT6804	;wreg free
  2161  0028BA  0012               	return		;funcret
  2162  0028BC                     __end_of_Initalize_LT6804b:
  2163                           	opt stack 0
  2164                           tblptru	equ	0xFF8
  2165                           tblptrh	equ	0xFF7
  2166                           tblptrl	equ	0xFF6
  2167                           tablat	equ	0xFF5
  2168                           intcon	equ	0xFF2
  2169                           postinc0	equ	0xFEE
  2170                           wreg	equ	0xFE8
  2171                           postdec1	equ	0xFE5
  2172                           fsr1l	equ	0xFE1
  2173                           status	equ	0xFD8
  2174                           
  2175 ;; *************** function _UpdateLT6804 *****************
  2176 ;; Defined at:
  2177 ;;		line 716 in file "BatteryManagment.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;		None
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;		None
  2182 ;; Return value:  Size  Location     Type
  2183 ;;		None               void
  2184 ;; Registers used:
  2185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2191 ;;      Params:         0       0       0       0       0       0       0
  2192 ;;      Locals:         0       0       0       0       0       0       0
  2193 ;;      Temps:          0       0       0       0       0       0       0
  2194 ;;      Totals:         0       0       0       0       0       0       0
  2195 ;;Total ram usage:        0 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    6
  2198 ;; This function calls:
  2199 ;;		_LTC6804_wrcfg
  2200 ;; This function is called by:
  2201 ;;		_Initalize_LT6804b
  2202 ;;		_RunBypass_Set
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text3
  2207  003190                     __ptext3:
  2208                           	opt stack 0
  2209  003190                     _UpdateLT6804:
  2210                           	opt stack 22
  2211                           
  2212                           ;BatteryManagment.c: 718: LTC6804_wrcfg(1, LTC6804_DATA_ConfigBank);
  2213                           
  2214                           ;incstack = 0
  2215  003190  0E00               	movlw	0
  2216  003192  6E31               	movwf	LTC6804_wrcfg@total_ic+1,c
  2217  003194  0E01               	movlw	1
  2218  003196  6E30               	movwf	LTC6804_wrcfg@total_ic,c
  2219  003198  0EEE               	movlw	low _LTC6804_DATA_ConfigBank
  2220  00319A  6E32               	movwf	LTC6804_wrcfg@config,c
  2221  00319C  0E01               	movlw	high _LTC6804_DATA_ConfigBank
  2222  00319E  6E33               	movwf	LTC6804_wrcfg@config+1,c
  2223  0031A0  EC3A  F00C         	call	_LTC6804_wrcfg	;wreg free
  2224  0031A4  0012               	return		;funcret
  2225  0031A6                     __end_of_UpdateLT6804:
  2226                           	opt stack 0
  2227                           tblptru	equ	0xFF8
  2228                           tblptrh	equ	0xFF7
  2229                           tblptrl	equ	0xFF6
  2230                           tablat	equ	0xFF5
  2231                           intcon	equ	0xFF2
  2232                           postinc0	equ	0xFEE
  2233                           wreg	equ	0xFE8
  2234                           postdec1	equ	0xFE5
  2235                           fsr1l	equ	0xFE1
  2236                           status	equ	0xFD8
  2237                           
  2238 ;; *************** function _LTC6804_wrcfg *****************
  2239 ;; Defined at:
  2240 ;;		line 1000 in file "LT6804.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  total_ic        2   47[COMRAM] int 
  2243 ;;  config          2   49[COMRAM] PTR int [6]
  2244 ;;		 -> LTC6804_DATA_ConfigBank(12), 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  cmd           200    0[BANK1 ] int [100]
  2247 ;;  cmd_index       2  204[BANK1 ] int 
  2248 ;;  temp_pec        2  202[BANK1 ] int 
  2249 ;;  BYTES_IN_REG    2  200[BANK1 ] const int 
  2250 ;; Return value:  Size  Location     Type
  2251 ;;		None               void
  2252 ;; Registers used:
  2253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2259 ;;      Params:         4       0       0       0       0       0       0
  2260 ;;      Locals:         0       0     206       0       0       0       0
  2261 ;;      Temps:          2       0       0       0       0       0       0
  2262 ;;      Totals:         6       0     206       0       0       0       0
  2263 ;;Total ram usage:      212 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    5
  2266 ;; This function calls:
  2267 ;;		___wmul
  2268 ;;		_pec15_calc
  2269 ;;		_spi_write_array
  2270 ;;		_wakeup_idle
  2271 ;; This function is called by:
  2272 ;;		_UpdateLT6804
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text4
  2277  001874                     __ptext4:
  2278                           	opt stack 0
  2279  001874                     _LTC6804_wrcfg:
  2280                           	opt stack 22
  2281                           
  2282                           ;LT6804.c: 1002: const int BYTES_IN_REG = 6;
  2283                           
  2284                           ;incstack = 0
  2285  001874  0E00               	movlw	0
  2286  001876  0101               	movlb	1	; () banked
  2287  001878  6FC9               	movwf	(LTC6804_wrcfg@BYTES_IN_REG+1)& (0+255),b
  2288  00187A  0E06               	movlw	6
  2289  00187C  6FC8               	movwf	LTC6804_wrcfg@BYTES_IN_REG& (0+255),b
  2290                           
  2291                           ;LT6804.c: 1003: int cmd[100];
  2292                           ;LT6804.c: 1004: int temp_pec;
  2293                           ;LT6804.c: 1005: int cmd_index;
  2294                           ;LT6804.c: 1008: cmd[0] = 0x00;
  2295  00187E  0E00               	movlw	0
  2296  001880  0101               	movlb	1	; () banked
  2297  001882  6F01               	movwf	(LTC6804_wrcfg@cmd+1)& (0+255),b
  2298  001884  0E00               	movlw	0
  2299  001886  6F00               	movwf	LTC6804_wrcfg@cmd& (0+255),b
  2300                           
  2301                           ;LT6804.c: 1009: cmd[1] = 0x01;
  2302  001888  0E00               	movlw	0
  2303  00188A  0101               	movlb	1	; () banked
  2304  00188C  6F03               	movwf	(LTC6804_wrcfg@cmd+3)& (0+255),b
  2305  00188E  0E01               	movlw	1
  2306  001890  6F02               	movwf	(LTC6804_wrcfg@cmd+2)& (0+255),b
  2307                           
  2308                           ;LT6804.c: 1010: cmd[2] = 0x3d;
  2309  001892  0E00               	movlw	0
  2310  001894  0101               	movlb	1	; () banked
  2311  001896  6F05               	movwf	(LTC6804_wrcfg@cmd+5)& (0+255),b
  2312  001898  0E3D               	movlw	61
  2313  00189A  6F04               	movwf	(LTC6804_wrcfg@cmd+4)& (0+255),b
  2314                           
  2315                           ;LT6804.c: 1011: cmd[3] = 0x6e;
  2316  00189C  0E00               	movlw	0
  2317  00189E  0101               	movlb	1	; () banked
  2318  0018A0  6F07               	movwf	(LTC6804_wrcfg@cmd+7)& (0+255),b
  2319  0018A2  0E6E               	movlw	110
  2320  0018A4  6F06               	movwf	(LTC6804_wrcfg@cmd+6)& (0+255),b
  2321                           
  2322                           ;LT6804.c: 1014: cmd_index = 4;
  2323  0018A6  0E00               	movlw	0
  2324  0018A8  0101               	movlb	1	; () banked
  2325  0018AA  6FCD               	movwf	(LTC6804_wrcfg@cmd_index+1)& (0+255),b
  2326  0018AC  0E04               	movlw	4
  2327  0018AE  6FCC               	movwf	LTC6804_wrcfg@cmd_index& (0+255),b
  2328                           
  2329                           ; BSR set to: 1
  2330                           ;LT6804.c: 1015: for (current_ic = total_ic; current_ic > 0; current_ic--)
  2331  0018B0  C030  F04D         	movff	LTC6804_wrcfg@total_ic,_current_ic
  2332  0018B4  C031  F04E         	movff	LTC6804_wrcfg@total_ic+1,_current_ic+1
  2333  0018B8  D09B               	goto	l6995
  2334  0018BA                     l6971:
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;LT6804.c: 1016: {
  2338                           ;LT6804.c: 1017: for (current_byte = 0; current_byte < BYTES_IN_REG; current_byte++)
  2339  0018BA  0E00               	movlw	0
  2340  0018BC  6E43               	movwf	_current_byte+1,c
  2341  0018BE  0E00               	movlw	0
  2342  0018C0  6E42               	movwf	_current_byte,c
  2343  0018C2                     l6973:
  2344                           
  2345                           ; BSR set to: 1
  2346  0018C2  0101               	movlb	1	; () banked
  2347  0018C4  51C8               	movf	LTC6804_wrcfg@BYTES_IN_REG& (0+255),w,b
  2348  0018C6  5C42               	subwf	_current_byte,w,c
  2349  0018C8  5043               	movf	_current_byte+1,w,c
  2350  0018CA  0A80               	xorlw	128
  2351  0018CC  6E34               	movwf	??_LTC6804_wrcfg& (0+255),c
  2352  0018CE  0101               	movlb	1	; () banked
  2353  0018D0  51C9               	movf	(LTC6804_wrcfg@BYTES_IN_REG+1)& (0+255),w,b
  2354  0018D2  0A80               	xorlw	128
  2355  0018D4  5834               	subwfb	??_LTC6804_wrcfg& (0+255),w,c
  2356  0018D6  B0D8               	btfsc	status,0,c
  2357  0018D8  D039               	goto	l6985
  2358                           
  2359                           ; BSR set to: 1
  2360                           ;LT6804.c: 1018: {
  2361                           ;LT6804.c: 1020: cmd[cmd_index] = config[current_ic-1][current_byte];
  2362                           
  2363                           ; BSR set to: 1
  2364                           
  2365                           ; BSR set to: 1
  2366  0018DA  0EFF               	movlw	255
  2367  0018DC  244D               	addwf	_current_ic,w,c
  2368  0018DE  6E1D               	movwf	___wmul@multiplier,c
  2369  0018E0  0EFF               	movlw	255
  2370  0018E2  204E               	addwfc	_current_ic+1,w,c
  2371  0018E4  6E1E               	movwf	___wmul@multiplier+1,c
  2372  0018E6  0E00               	movlw	0
  2373  0018E8  6E20               	movwf	___wmul@multiplicand+1,c
  2374  0018EA  0E0C               	movlw	12
  2375  0018EC  6E1F               	movwf	___wmul@multiplicand,c
  2376  0018EE  EC68  F018         	call	___wmul	;wreg free
  2377  0018F2  C032  F034         	movff	LTC6804_wrcfg@config,??_LTC6804_wrcfg
  2378  0018F6  C033  F035         	movff	LTC6804_wrcfg@config+1,??_LTC6804_wrcfg+1
  2379  0018FA  501D               	movf	?___wmul,w,c
  2380  0018FC  2634               	addwf	??_LTC6804_wrcfg,f,c
  2381  0018FE  501E               	movf	?___wmul+1,w,c
  2382  001900  2235               	addwfc	??_LTC6804_wrcfg+1,f,c
  2383  001902  90D8               	bcf	status,0,c
  2384  001904  3442               	rlcf	_current_byte,w,c
  2385  001906  6ED9               	movwf	fsr2l,c
  2386  001908  3443               	rlcf	_current_byte+1,w,c
  2387  00190A  6EDA               	movwf	fsr2h,c
  2388  00190C  5034               	movf	??_LTC6804_wrcfg,w,c
  2389  00190E  26D9               	addwf	fsr2l,f,c
  2390  001910  5035               	movf	??_LTC6804_wrcfg+1,w,c
  2391  001912  22DA               	addwfc	fsr2h,f,c
  2392  001914  90D8               	bcf	status,0,c
  2393  001916  0101               	movlb	1	; () banked
  2394  001918  35CC               	rlcf	LTC6804_wrcfg@cmd_index& (0+255),w,b
  2395  00191A  6EE1               	movwf	fsr1l,c
  2396  00191C  0101               	movlb	1	; () banked
  2397  00191E  35CD               	rlcf	(LTC6804_wrcfg@cmd_index+1)& (0+255),w,b
  2398  001920  6EE2               	movwf	fsr1h,c
  2399  001922  0E00               	movlw	low LTC6804_wrcfg@cmd
  2400  001924  26E1               	addwf	fsr1l,f,c
  2401  001926  0E01               	movlw	high LTC6804_wrcfg@cmd
  2402  001928  22E2               	addwfc	fsr1h,f,c
  2403  00192A  CFDE FFE6          	movff	postinc2,postinc1
  2404  00192E  CFDD FFE5          	movff	postdec2,postdec1
  2405                           
  2406                           ; BSR set to: 1
  2407                           ;LT6804.c: 1021: cmd_index = cmd_index + 1;
  2408  001932  0E01               	movlw	1
  2409  001934  0101               	movlb	1	; () banked
  2410  001936  25CC               	addwf	LTC6804_wrcfg@cmd_index& (0+255),w,b
  2411  001938  0101               	movlb	1	; () banked
  2412  00193A  6FCC               	movwf	LTC6804_wrcfg@cmd_index& (0+255),b
  2413  00193C  0E00               	movlw	0
  2414  00193E  0101               	movlb	1	; () banked
  2415  001940  21CD               	addwfc	(LTC6804_wrcfg@cmd_index+1)& (0+255),w,b
  2416  001942  0101               	movlb	1	; () banked
  2417  001944  6FCD               	movwf	(LTC6804_wrcfg@cmd_index+1)& (0+255),b
  2418                           
  2419                           ; BSR set to: 1
  2420  001946  4A42               	infsnz	_current_byte,f,c
  2421  001948  2A43               	incf	_current_byte+1,f,c
  2422  00194A  D7BB               	goto	l6973
  2423  00194C                     l6985:
  2424                           
  2425                           ; BSR set to: 1
  2426                           ;LT6804.c: 1022: }
  2427                           ;LT6804.c: 1024: temp_pec = (int)pec15_calc(BYTES_IN_REG, &config[current_ic-1][0]);
  2428  00194C  C1C8  F023         	movff	LTC6804_wrcfg@BYTES_IN_REG,pec15_calc@len
  2429  001950  C1C9  F024         	movff	LTC6804_wrcfg@BYTES_IN_REG+1,pec15_calc@len+1
  2430  001954  0EFF               	movlw	255
  2431  001956  244D               	addwf	_current_ic,w,c
  2432  001958  6E1D               	movwf	___wmul@multiplier,c
  2433  00195A  0EFF               	movlw	255
  2434  00195C  204E               	addwfc	_current_ic+1,w,c
  2435  00195E  6E1E               	movwf	___wmul@multiplier+1,c
  2436  001960  0E00               	movlw	0
  2437  001962  6E20               	movwf	___wmul@multiplicand+1,c
  2438  001964  0E0C               	movlw	12
  2439  001966  6E1F               	movwf	___wmul@multiplicand,c
  2440  001968  EC68  F018         	call	___wmul	;wreg free
  2441  00196C  501D               	movf	?___wmul,w,c
  2442  00196E  2432               	addwf	LTC6804_wrcfg@config,w,c
  2443  001970  6E25               	movwf	pec15_calc@data,c
  2444  001972  501E               	movf	?___wmul+1,w,c
  2445  001974  2033               	addwfc	LTC6804_wrcfg@config+1,w,c
  2446  001976  6E26               	movwf	pec15_calc@data+1,c
  2447  001978  EC80  F013         	call	_pec15_calc	;wreg free
  2448  00197C  C023  F1CA         	movff	?_pec15_calc,LTC6804_wrcfg@temp_pec
  2449  001980  C024  F1CB         	movff	?_pec15_calc+1,LTC6804_wrcfg@temp_pec+1
  2450                           
  2451                           ;LT6804.c: 1025: cmd[cmd_index] = (int)(temp_pec >> 8);
  2452  001984  C1CB  F034         	movff	LTC6804_wrcfg@temp_pec+1,??_LTC6804_wrcfg
  2453  001988  6A35               	clrf	(??_LTC6804_wrcfg+1)& (0+255),c
  2454  00198A  BE34               	btfsc	??_LTC6804_wrcfg& (0+255),7,c
  2455  00198C  6835               	setf	(??_LTC6804_wrcfg+1)& (0+255),c
  2456  00198E  90D8               	bcf	status,0,c
  2457  001990  0101               	movlb	1	; () banked
  2458  001992  35CC               	rlcf	LTC6804_wrcfg@cmd_index& (0+255),w,b
  2459  001994  6ED9               	movwf	fsr2l,c
  2460  001996  0101               	movlb	1	; () banked
  2461  001998  35CD               	rlcf	(LTC6804_wrcfg@cmd_index+1)& (0+255),w,b
  2462  00199A  6EDA               	movwf	fsr2h,c
  2463  00199C  0E00               	movlw	low LTC6804_wrcfg@cmd
  2464  00199E  26D9               	addwf	fsr2l,f,c
  2465  0019A0  0E01               	movlw	high LTC6804_wrcfg@cmd
  2466  0019A2  22DA               	addwfc	fsr2h,f,c
  2467  0019A4  C034  FFDE         	movff	??_LTC6804_wrcfg,postinc2
  2468  0019A8  C035  FFDD         	movff	??_LTC6804_wrcfg+1,postdec2
  2469                           
  2470                           ; BSR set to: 1
  2471                           ;LT6804.c: 1026: cmd[cmd_index + 1] = (int)temp_pec;
  2472  0019AC  C1CC  F034         	movff	LTC6804_wrcfg@cmd_index,??_LTC6804_wrcfg
  2473  0019B0  C1CD  F035         	movff	LTC6804_wrcfg@cmd_index+1,??_LTC6804_wrcfg+1
  2474  0019B4  90D8               	bcf	status,0,c
  2475  0019B6  3634               	rlcf	??_LTC6804_wrcfg,f,c
  2476  0019B8  3635               	rlcf	??_LTC6804_wrcfg+1,f,c
  2477  0019BA  0E02               	movlw	2
  2478  0019BC  2634               	addwf	??_LTC6804_wrcfg,f,c
  2479  0019BE  0E00               	movlw	0
  2480  0019C0  2235               	addwfc	??_LTC6804_wrcfg+1,f,c
  2481  0019C2  0E00               	movlw	low LTC6804_wrcfg@cmd
  2482  0019C4  2434               	addwf	??_LTC6804_wrcfg,w,c
  2483  0019C6  6ED9               	movwf	fsr2l,c
  2484  0019C8  0E01               	movlw	high LTC6804_wrcfg@cmd
  2485  0019CA  2035               	addwfc	??_LTC6804_wrcfg+1,w,c
  2486  0019CC  6EDA               	movwf	fsr2h,c
  2487  0019CE  C1CA  FFDE         	movff	LTC6804_wrcfg@temp_pec,postinc2
  2488  0019D2  C1CB  FFDD         	movff	LTC6804_wrcfg@temp_pec+1,postdec2
  2489                           
  2490                           ; BSR set to: 1
  2491                           ;LT6804.c: 1027: cmd_index = cmd_index + 2;
  2492  0019D6  0E02               	movlw	2
  2493  0019D8  0101               	movlb	1	; () banked
  2494  0019DA  25CC               	addwf	LTC6804_wrcfg@cmd_index& (0+255),w,b
  2495  0019DC  0101               	movlb	1	; () banked
  2496  0019DE  6FCC               	movwf	LTC6804_wrcfg@cmd_index& (0+255),b
  2497  0019E0  0E00               	movlw	0
  2498  0019E2  0101               	movlb	1	; () banked
  2499  0019E4  21CD               	addwfc	(LTC6804_wrcfg@cmd_index+1)& (0+255),w,b
  2500  0019E6  0101               	movlb	1	; () banked
  2501  0019E8  6FCD               	movwf	(LTC6804_wrcfg@cmd_index+1)& (0+255),b
  2502                           
  2503                           ; BSR set to: 1
  2504  0019EA  064D               	decf	_current_ic,f,c
  2505  0019EC  A0D8               	btfss	status,0,c
  2506  0019EE  064E               	decf	_current_ic+1,f,c
  2507  0019F0                     l6995:
  2508                           
  2509                           ; BSR set to: 1
  2510  0019F0  BE4E               	btfsc	_current_ic+1,7,c
  2511  0019F2  D005               	goto	l6997
  2512  0019F4  504E               	movf	_current_ic+1,w,c
  2513  0019F6  E102               	bnz	u6881
  2514  0019F8  044D               	decf	_current_ic,w,c
  2515  0019FA  B0D8               	btfsc	status,0,c
  2516  0019FC                     u6881:
  2517  0019FC  D75E               	goto	l6971
  2518  0019FE                     l6997:
  2519                           
  2520                           ; BSR set to: 1
  2521                           ;LT6804.c: 1028: }
  2522                           ;LT6804.c: 1031: wakeup_idle ();
  2523  0019FE  ECD3  F018         	call	_wakeup_idle	;wreg free
  2524                           
  2525                           ;LT6804.c: 1033: for(current_ic = 0; current_ic<total_ic; current_ic++)
  2526  001A02  0E00               	movlw	0
  2527  001A04  6E4E               	movwf	_current_ic+1,c
  2528  001A06  0E00               	movlw	0
  2529  001A08  6E4D               	movwf	_current_ic,c
  2530  001A0A  D05E               	goto	l7019
  2531  001A0C                     l7001:
  2532                           
  2533                           ;LT6804.c: 1034: {
  2534                           ;LT6804.c: 1035: cmd[0] = 0x80 + (current_ic<<3);
  2535  001A0C  C04D  F034         	movff	_current_ic,??_LTC6804_wrcfg
  2536  001A10  C04E  F035         	movff	_current_ic+1,??_LTC6804_wrcfg+1
  2537  001A14  90D8               	bcf	status,0,c
  2538  001A16  3634               	rlcf	??_LTC6804_wrcfg,f,c
  2539  001A18  3635               	rlcf	??_LTC6804_wrcfg+1,f,c
  2540  001A1A  90D8               	bcf	status,0,c
  2541  001A1C  3634               	rlcf	??_LTC6804_wrcfg,f,c
  2542  001A1E  3635               	rlcf	??_LTC6804_wrcfg+1,f,c
  2543  001A20  90D8               	bcf	status,0,c
  2544  001A22  3634               	rlcf	??_LTC6804_wrcfg,f,c
  2545  001A24  3635               	rlcf	??_LTC6804_wrcfg+1,f,c
  2546  001A26  0E80               	movlw	128
  2547  001A28  2434               	addwf	??_LTC6804_wrcfg,w,c
  2548  001A2A  0101               	movlb	1	; () banked
  2549  001A2C  6F00               	movwf	LTC6804_wrcfg@cmd& (0+255),b
  2550  001A2E  0E00               	movlw	0
  2551  001A30  2035               	addwfc	??_LTC6804_wrcfg+1,w,c
  2552  001A32  0101               	movlb	1	; () banked
  2553  001A34  6F01               	movwf	(LTC6804_wrcfg@cmd+1)& (0+255),b
  2554                           
  2555                           ; BSR set to: 1
  2556                           ;LT6804.c: 1036: temp_pec = pec15_calc(2, cmd);
  2557  001A36  0E00               	movlw	0
  2558  001A38  6E24               	movwf	pec15_calc@len+1,c
  2559  001A3A  0E02               	movlw	2
  2560  001A3C  6E23               	movwf	pec15_calc@len,c
  2561  001A3E  0E00               	movlw	low LTC6804_wrcfg@cmd
  2562  001A40  6E25               	movwf	pec15_calc@data,c
  2563  001A42  0E01               	movlw	high LTC6804_wrcfg@cmd
  2564  001A44  6E26               	movwf	pec15_calc@data+1,c
  2565  001A46  EC80  F013         	call	_pec15_calc	;wreg free
  2566  001A4A  C023  F1CA         	movff	?_pec15_calc,LTC6804_wrcfg@temp_pec
  2567  001A4E  C024  F1CB         	movff	?_pec15_calc+1,LTC6804_wrcfg@temp_pec+1
  2568                           
  2569                           ;LT6804.c: 1037: cmd[2] = (int)(temp_pec >> 8);
  2570  001A52  C1CB  F034         	movff	LTC6804_wrcfg@temp_pec+1,??_LTC6804_wrcfg
  2571  001A56  6A35               	clrf	(??_LTC6804_wrcfg+1)& (0+255),c
  2572  001A58  BE34               	btfsc	??_LTC6804_wrcfg& (0+255),7,c
  2573  001A5A  6835               	setf	(??_LTC6804_wrcfg+1)& (0+255),c
  2574  001A5C  C034  F104         	movff	??_LTC6804_wrcfg,LTC6804_wrcfg@cmd+4
  2575  001A60  C035  F105         	movff	??_LTC6804_wrcfg+1,LTC6804_wrcfg@cmd+5
  2576                           
  2577                           ;LT6804.c: 1038: cmd[3] = (int)(temp_pec);
  2578  001A64  C1CA  F106         	movff	LTC6804_wrcfg@temp_pec,LTC6804_wrcfg@cmd+6
  2579  001A68  C1CB  F107         	movff	LTC6804_wrcfg@temp_pec+1,LTC6804_wrcfg@cmd+7
  2580                           
  2581                           ;LT6804.c: 1039: LATD3 = 0;
  2582  001A6C  968C               	bcf	3980,3,c	;volatile
  2583                           
  2584                           ;LT6804.c: 1040: spi_write_array(4,cmd);
  2585  001A6E  0E00               	movlw	0
  2586  001A70  6E12               	movwf	spi_write_array@len+1,c
  2587  001A72  0E04               	movlw	4
  2588  001A74  6E11               	movwf	spi_write_array@len,c
  2589  001A76  0E00               	movlw	low LTC6804_wrcfg@cmd
  2590  001A78  6E13               	movwf	spi_write_array@data,c
  2591  001A7A  0E01               	movlw	high LTC6804_wrcfg@cmd
  2592  001A7C  6E14               	movwf	spi_write_array@data+1,c
  2593  001A7E  EC9E  F017         	call	_spi_write_array	;wreg free
  2594                           
  2595                           ;LT6804.c: 1041: spi_write_array(8,&cmd[4+(8*current_ic)]);
  2596  001A82  0E00               	movlw	0
  2597  001A84  6E12               	movwf	spi_write_array@len+1,c
  2598  001A86  0E08               	movlw	8
  2599  001A88  6E11               	movwf	spi_write_array@len,c
  2600  001A8A  C04D  F034         	movff	_current_ic,??_LTC6804_wrcfg
  2601  001A8E  C04E  F035         	movff	_current_ic+1,??_LTC6804_wrcfg+1
  2602  001A92  90D8               	bcf	status,0,c
  2603  001A94  3634               	rlcf	??_LTC6804_wrcfg,f,c
  2604  001A96  3635               	rlcf	??_LTC6804_wrcfg+1,f,c
  2605  001A98  90D8               	bcf	status,0,c
  2606  001A9A  3634               	rlcf	??_LTC6804_wrcfg,f,c
  2607  001A9C  3635               	rlcf	??_LTC6804_wrcfg+1,f,c
  2608  001A9E  90D8               	bcf	status,0,c
  2609  001AA0  3634               	rlcf	??_LTC6804_wrcfg,f,c
  2610  001AA2  3635               	rlcf	??_LTC6804_wrcfg+1,f,c
  2611  001AA4  90D8               	bcf	status,0,c
  2612  001AA6  3634               	rlcf	??_LTC6804_wrcfg,f,c
  2613  001AA8  3635               	rlcf	??_LTC6804_wrcfg+1,f,c
  2614  001AAA  0E08               	movlw	8
  2615  001AAC  2634               	addwf	??_LTC6804_wrcfg,f,c
  2616  001AAE  0E00               	movlw	0
  2617  001AB0  2235               	addwfc	??_LTC6804_wrcfg+1,f,c
  2618  001AB2  0E00               	movlw	low LTC6804_wrcfg@cmd
  2619  001AB4  2434               	addwf	??_LTC6804_wrcfg,w,c
  2620  001AB6  6E13               	movwf	spi_write_array@data,c
  2621  001AB8  0E01               	movlw	high LTC6804_wrcfg@cmd
  2622  001ABA  2035               	addwfc	??_LTC6804_wrcfg+1,w,c
  2623  001ABC  6E14               	movwf	spi_write_array@data+1,c
  2624  001ABE  EC9E  F017         	call	_spi_write_array	;wreg free
  2625                           
  2626                           ;LT6804.c: 1042: LATD3 = 1;
  2627  001AC2  868C               	bsf	3980,3,c	;volatile
  2628  001AC4  4A4D               	infsnz	_current_ic,f,c
  2629  001AC6  2A4E               	incf	_current_ic+1,f,c
  2630  001AC8                     l7019:
  2631  001AC8  5030               	movf	LTC6804_wrcfg@total_ic,w,c
  2632  001ACA  5C4D               	subwf	_current_ic,w,c
  2633  001ACC  504E               	movf	_current_ic+1,w,c
  2634  001ACE  0A80               	xorlw	128
  2635  001AD0  6E34               	movwf	??_LTC6804_wrcfg& (0+255),c
  2636  001AD2  5031               	movf	LTC6804_wrcfg@total_ic+1,w,c
  2637  001AD4  0A80               	xorlw	128
  2638  001AD6  5834               	subwfb	??_LTC6804_wrcfg& (0+255),w,c
  2639  001AD8  B0D8               	btfsc	status,0,c
  2640  001ADA  0012               	return	
  2641  001ADC  D797               	goto	l7001
  2642  001ADE                     __end_of_LTC6804_wrcfg:
  2643                           	opt stack 0
  2644                           tblptru	equ	0xFF8
  2645                           tblptrh	equ	0xFF7
  2646                           tblptrl	equ	0xFF6
  2647                           tablat	equ	0xFF5
  2648                           intcon	equ	0xFF2
  2649                           postinc0	equ	0xFEE
  2650                           wreg	equ	0xFE8
  2651                           postinc1	equ	0xFE6
  2652                           postdec1	equ	0xFE5
  2653                           fsr1h	equ	0xFE2
  2654                           fsr1l	equ	0xFE1
  2655                           postinc2	equ	0xFDE
  2656                           postdec2	equ	0xFDD
  2657                           fsr2h	equ	0xFDA
  2658                           fsr2l	equ	0xFD9
  2659                           status	equ	0xFD8
  2660                           
  2661 ;; *************** function _Set_REFON_Pin *****************
  2662 ;; Defined at:
  2663 ;;		line 704 in file "BatteryManagment.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  ic              2   34[COMRAM] int 
  2666 ;;  REFON_Mode      1   36[COMRAM] unsigned char 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  fault_value     2   39[COMRAM] int 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  2   34[COMRAM] int 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2678 ;;      Params:         3       0       0       0       0       0       0
  2679 ;;      Locals:         2       0       0       0       0       0       0
  2680 ;;      Temps:          2       0       0       0       0       0       0
  2681 ;;      Totals:         7       0       0       0       0       0       0
  2682 ;;Total ram usage:        7 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    4
  2685 ;; This function calls:
  2686 ;;		___wmul
  2687 ;; This function is called by:
  2688 ;;		_Initalize_LT6804b
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text5
  2693  002D9A                     __ptext5:
  2694                           	opt stack 0
  2695  002D9A                     _Set_REFON_Pin:
  2696                           	opt stack 24
  2697                           
  2698                           ;BatteryManagment.c: 705: int fault_value = 0;
  2699                           
  2700                           ;incstack = 0
  2701  002D9A  0E00               	movlw	0
  2702  002D9C  6E29               	movwf	Set_REFON_Pin@fault_value+1,c
  2703  002D9E  0E00               	movlw	0
  2704  002DA0  6E28               	movwf	Set_REFON_Pin@fault_value,c
  2705                           
  2706                           ;BatteryManagment.c: 706: if (REFON_Mode) {
  2707  002DA2  5025               	movf	Set_REFON_Pin@REFON_Mode,w,c
  2708  002DA4  B4D8               	btfsc	status,2,c
  2709  002DA6  D003               	goto	l7271
  2710                           
  2711                           ;BatteryManagment.c: 707: CFGR0 = CFGR0 | 0x4;
  2712  002DA8  5046               	movf	_CFGR0,w,c
  2713  002DAA  0904               	iorlw	4
  2714  002DAC  D002               	goto	L1
  2715  002DAE                     l7271:
  2716                           
  2717                           ;BatteryManagment.c: 709: CFGR0 = CFGR0 & ~0x4;
  2718  002DAE  5046               	movf	_CFGR0,w,c
  2719  002DB0  0BFB               	andlw	251
  2720  002DB2                     L1:
  2721  002DB2  6E46               	movwf	_CFGR0,c
  2722                           
  2723                           ;BatteryManagment.c: 710: }
  2724                           ;BatteryManagment.c: 712: LTC6804_DATA_ConfigBank[ic][0] = CFGR0;
  2725  002DB4  5046               	movf	_CFGR0,w,c
  2726  002DB6  6E26               	movwf	??_Set_REFON_Pin& (0+255),c
  2727  002DB8  6A27               	clrf	(??_Set_REFON_Pin+1)& (0+255),c
  2728  002DBA  C023  F01D         	movff	Set_REFON_Pin@ic,___wmul@multiplier
  2729  002DBE  C024  F01E         	movff	Set_REFON_Pin@ic+1,___wmul@multiplier+1
  2730  002DC2  0E00               	movlw	0
  2731  002DC4  6E20               	movwf	___wmul@multiplicand+1,c
  2732  002DC6  0E0C               	movlw	12
  2733  002DC8  6E1F               	movwf	___wmul@multiplicand,c
  2734  002DCA  EC68  F018         	call	___wmul	;wreg free
  2735  002DCE  0EEE               	movlw	low _LTC6804_DATA_ConfigBank
  2736  002DD0  241D               	addwf	?___wmul,w,c
  2737  002DD2  6ED9               	movwf	fsr2l,c
  2738  002DD4  0E01               	movlw	high _LTC6804_DATA_ConfigBank
  2739  002DD6  201E               	addwfc	?___wmul+1,w,c
  2740  002DD8  6EDA               	movwf	fsr2h,c
  2741  002DDA  C026  FFDE         	movff	??_Set_REFON_Pin,postinc2
  2742  002DDE  C027  FFDD         	movff	??_Set_REFON_Pin+1,postdec2
  2743  002DE2  0012               	return	
  2744  002DE4                     __end_of_Set_REFON_Pin:
  2745                           	opt stack 0
  2746                           tblptru	equ	0xFF8
  2747                           tblptrh	equ	0xFF7
  2748                           tblptrl	equ	0xFF6
  2749                           tablat	equ	0xFF5
  2750                           intcon	equ	0xFF2
  2751                           postinc0	equ	0xFEE
  2752                           wreg	equ	0xFE8
  2753                           postinc1	equ	0xFE6
  2754                           postdec1	equ	0xFE5
  2755                           fsr1h	equ	0xFE2
  2756                           fsr1l	equ	0xFE1
  2757                           postinc2	equ	0xFDE
  2758                           postdec2	equ	0xFDD
  2759                           fsr2h	equ	0xFDA
  2760                           fsr2l	equ	0xFD9
  2761                           status	equ	0xFD8
  2762                           
  2763 ;; *************** function _Set_DCTO_Mode_OFF *****************
  2764 ;; Defined at:
  2765 ;;		line 695 in file "BatteryManagment.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;  ic              2   34[COMRAM] int 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  fault_value     2   38[COMRAM] int 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  2   34[COMRAM] int 
  2772 ;; Registers used:
  2773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2779 ;;      Params:         2       0       0       0       0       0       0
  2780 ;;      Locals:         2       0       0       0       0       0       0
  2781 ;;      Temps:          2       0       0       0       0       0       0
  2782 ;;      Totals:         6       0       0       0       0       0       0
  2783 ;;Total ram usage:        6 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    4
  2786 ;; This function calls:
  2787 ;;		___wmul
  2788 ;; This function is called by:
  2789 ;;		_Initalize_LT6804b
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text6
  2794  002E78                     __ptext6:
  2795                           	opt stack 0
  2796  002E78                     _Set_DCTO_Mode_OFF:
  2797                           	opt stack 24
  2798                           
  2799                           ;BatteryManagment.c: 696: int fault_value = 0;
  2800                           
  2801                           ;incstack = 0
  2802  002E78  0E00               	movlw	0
  2803  002E7A  6E28               	movwf	Set_DCTO_Mode_OFF@fault_value+1,c
  2804  002E7C  0E00               	movlw	0
  2805  002E7E  6E27               	movwf	Set_DCTO_Mode_OFF@fault_value,c
  2806                           
  2807                           ;BatteryManagment.c: 697: CFGR5 = CFGR5 &~(0xF0);
  2808  002E80  5048               	movf	_CFGR5,w,c
  2809  002E82  0B0F               	andlw	15
  2810  002E84  6E48               	movwf	_CFGR5,c
  2811                           
  2812                           ;BatteryManagment.c: 698: LTC6804_DATA_ConfigBank[ic][5] = CFGR5;
  2813  002E86  5048               	movf	_CFGR5,w,c
  2814  002E88  6E25               	movwf	??_Set_DCTO_Mode_OFF& (0+255),c
  2815  002E8A  6A26               	clrf	(??_Set_DCTO_Mode_OFF+1)& (0+255),c
  2816  002E8C  C023  F01D         	movff	Set_DCTO_Mode_OFF@ic,___wmul@multiplier
  2817  002E90  C024  F01E         	movff	Set_DCTO_Mode_OFF@ic+1,___wmul@multiplier+1
  2818  002E94  0E00               	movlw	0
  2819  002E96  6E20               	movwf	___wmul@multiplicand+1,c
  2820  002E98  0E0C               	movlw	12
  2821  002E9A  6E1F               	movwf	___wmul@multiplicand,c
  2822  002E9C  EC68  F018         	call	___wmul	;wreg free
  2823  002EA0  0E0A               	movlw	10
  2824  002EA2  261D               	addwf	?___wmul,f,c
  2825  002EA4  0E00               	movlw	0
  2826  002EA6  221E               	addwfc	?___wmul+1,f,c
  2827  002EA8  0EEE               	movlw	low _LTC6804_DATA_ConfigBank
  2828  002EAA  241D               	addwf	?___wmul,w,c
  2829  002EAC  6ED9               	movwf	fsr2l,c
  2830  002EAE  0E01               	movlw	high _LTC6804_DATA_ConfigBank
  2831  002EB0  201E               	addwfc	?___wmul+1,w,c
  2832  002EB2  6EDA               	movwf	fsr2h,c
  2833  002EB4  C025  FFDE         	movff	??_Set_DCTO_Mode_OFF,postinc2
  2834  002EB8  C026  FFDD         	movff	??_Set_DCTO_Mode_OFF+1,postdec2
  2835  002EBC  0012               	return	
  2836  002EBE                     __end_of_Set_DCTO_Mode_OFF:
  2837                           	opt stack 0
  2838                           tblptru	equ	0xFF8
  2839                           tblptrh	equ	0xFF7
  2840                           tblptrl	equ	0xFF6
  2841                           tablat	equ	0xFF5
  2842                           intcon	equ	0xFF2
  2843                           postinc0	equ	0xFEE
  2844                           wreg	equ	0xFE8
  2845                           postinc1	equ	0xFE6
  2846                           postdec1	equ	0xFE5
  2847                           fsr1h	equ	0xFE2
  2848                           fsr1l	equ	0xFE1
  2849                           postinc2	equ	0xFDE
  2850                           postdec2	equ	0xFDD
  2851                           fsr2h	equ	0xFDA
  2852                           fsr2l	equ	0xFD9
  2853                           status	equ	0xFD8
  2854                           
  2855 ;; *************** function _Set_DCC_Mode_OFF *****************
  2856 ;; Defined at:
  2857 ;;		line 685 in file "BatteryManagment.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  ic              2   34[COMRAM] int 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  fault_value     2   38[COMRAM] int 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;		None               void
  2864 ;; Registers used:
  2865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2871 ;;      Params:         2       0       0       0       0       0       0
  2872 ;;      Locals:         2       0       0       0       0       0       0
  2873 ;;      Temps:          2       0       0       0       0       0       0
  2874 ;;      Totals:         6       0       0       0       0       0       0
  2875 ;;Total ram usage:        6 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    4
  2878 ;; This function calls:
  2879 ;;		___wmul
  2880 ;; This function is called by:
  2881 ;;		_Initalize_LT6804b
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text7
  2886  002A44                     __ptext7:
  2887                           	opt stack 0
  2888  002A44                     _Set_DCC_Mode_OFF:
  2889                           	opt stack 24
  2890                           
  2891                           ;BatteryManagment.c: 686: int fault_value = 0;
  2892                           
  2893                           ;incstack = 0
  2894  002A44  0E00               	movlw	0
  2895  002A46  6E28               	movwf	Set_DCC_Mode_OFF@fault_value+1,c
  2896  002A48  0E00               	movlw	0
  2897  002A4A  6E27               	movwf	Set_DCC_Mode_OFF@fault_value,c
  2898                           
  2899                           ;BatteryManagment.c: 687: CFGR4 = 0;
  2900  002A4C  0E00               	movlw	0
  2901  002A4E  6E47               	movwf	_CFGR4,c
  2902                           
  2903                           ;BatteryManagment.c: 688: CFGR5 = CFGR5 &~(0xF);
  2904  002A50  5048               	movf	_CFGR5,w,c
  2905  002A52  0BF0               	andlw	240
  2906  002A54  6E48               	movwf	_CFGR5,c
  2907                           
  2908                           ;BatteryManagment.c: 689: LTC6804_DATA_ConfigBank[ic][4] = CFGR4;
  2909  002A56  5047               	movf	_CFGR4,w,c
  2910  002A58  6E25               	movwf	??_Set_DCC_Mode_OFF& (0+255),c
  2911  002A5A  6A26               	clrf	(??_Set_DCC_Mode_OFF+1)& (0+255),c
  2912  002A5C  C023  F01D         	movff	Set_DCC_Mode_OFF@ic,___wmul@multiplier
  2913  002A60  C024  F01E         	movff	Set_DCC_Mode_OFF@ic+1,___wmul@multiplier+1
  2914  002A64  0E00               	movlw	0
  2915  002A66  6E20               	movwf	___wmul@multiplicand+1,c
  2916  002A68  0E0C               	movlw	12
  2917  002A6A  6E1F               	movwf	___wmul@multiplicand,c
  2918  002A6C  EC68  F018         	call	___wmul	;wreg free
  2919  002A70  0E08               	movlw	8
  2920  002A72  261D               	addwf	?___wmul,f,c
  2921  002A74  0E00               	movlw	0
  2922  002A76  221E               	addwfc	?___wmul+1,f,c
  2923  002A78  0EEE               	movlw	low _LTC6804_DATA_ConfigBank
  2924  002A7A  241D               	addwf	?___wmul,w,c
  2925  002A7C  6ED9               	movwf	fsr2l,c
  2926  002A7E  0E01               	movlw	high _LTC6804_DATA_ConfigBank
  2927  002A80  201E               	addwfc	?___wmul+1,w,c
  2928  002A82  6EDA               	movwf	fsr2h,c
  2929  002A84  C025  FFDE         	movff	??_Set_DCC_Mode_OFF,postinc2
  2930  002A88  C026  FFDD         	movff	??_Set_DCC_Mode_OFF+1,postdec2
  2931                           
  2932                           ;BatteryManagment.c: 690: LTC6804_DATA_ConfigBank[ic][5] = CFGR5;
  2933  002A8C  5048               	movf	_CFGR5,w,c
  2934  002A8E  6E25               	movwf	??_Set_DCC_Mode_OFF& (0+255),c
  2935  002A90  6A26               	clrf	(??_Set_DCC_Mode_OFF+1)& (0+255),c
  2936  002A92  C023  F01D         	movff	Set_DCC_Mode_OFF@ic,___wmul@multiplier
  2937  002A96  C024  F01E         	movff	Set_DCC_Mode_OFF@ic+1,___wmul@multiplier+1
  2938  002A9A  0E00               	movlw	0
  2939  002A9C  6E20               	movwf	___wmul@multiplicand+1,c
  2940  002A9E  0E0C               	movlw	12
  2941  002AA0  6E1F               	movwf	___wmul@multiplicand,c
  2942  002AA2  EC68  F018         	call	___wmul	;wreg free
  2943  002AA6  0E0A               	movlw	10
  2944  002AA8  261D               	addwf	?___wmul,f,c
  2945  002AAA  0E00               	movlw	0
  2946  002AAC  221E               	addwfc	?___wmul+1,f,c
  2947  002AAE  0EEE               	movlw	low _LTC6804_DATA_ConfigBank
  2948  002AB0  241D               	addwf	?___wmul,w,c
  2949  002AB2  6ED9               	movwf	fsr2l,c
  2950  002AB4  0E01               	movlw	high _LTC6804_DATA_ConfigBank
  2951  002AB6  201E               	addwfc	?___wmul+1,w,c
  2952  002AB8  6EDA               	movwf	fsr2h,c
  2953  002ABA  C025  FFDE         	movff	??_Set_DCC_Mode_OFF,postinc2
  2954  002ABE  C026  FFDD         	movff	??_Set_DCC_Mode_OFF+1,postdec2
  2955  002AC2  0012               	return		;funcret
  2956  002AC4                     __end_of_Set_DCC_Mode_OFF:
  2957                           	opt stack 0
  2958                           tblptru	equ	0xFF8
  2959                           tblptrh	equ	0xFF7
  2960                           tblptrl	equ	0xFF6
  2961                           tablat	equ	0xFF5
  2962                           intcon	equ	0xFF2
  2963                           postinc0	equ	0xFEE
  2964                           wreg	equ	0xFE8
  2965                           postinc1	equ	0xFE6
  2966                           postdec1	equ	0xFE5
  2967                           fsr1h	equ	0xFE2
  2968                           fsr1l	equ	0xFE1
  2969                           postinc2	equ	0xFDE
  2970                           postdec2	equ	0xFDD
  2971                           fsr2h	equ	0xFDA
  2972                           fsr2l	equ	0xFD9
  2973                           status	equ	0xFD8
  2974                           
  2975 ;; *************** function _Set_ADC_Mode *****************
  2976 ;; Defined at:
  2977 ;;		line 672 in file "BatteryManagment.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  ic              2   34[COMRAM] int 
  2980 ;;  ADCOPT_Mode     1   36[COMRAM] unsigned char 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  fault_value     2   39[COMRAM] int 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  2   34[COMRAM] int 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2992 ;;      Params:         3       0       0       0       0       0       0
  2993 ;;      Locals:         2       0       0       0       0       0       0
  2994 ;;      Temps:          2       0       0       0       0       0       0
  2995 ;;      Totals:         7       0       0       0       0       0       0
  2996 ;;Total ram usage:        7 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    4
  2999 ;; This function calls:
  3000 ;;		___wmul
  3001 ;; This function is called by:
  3002 ;;		_Initalize_LT6804b
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text8
  3007  002DE4                     __ptext8:
  3008                           	opt stack 0
  3009  002DE4                     _Set_ADC_Mode:
  3010                           	opt stack 24
  3011                           
  3012                           ;BatteryManagment.c: 673: int fault_value = 0;
  3013                           
  3014                           ;incstack = 0
  3015  002DE4  0E00               	movlw	0
  3016  002DE6  6E29               	movwf	Set_ADC_Mode@fault_value+1,c
  3017  002DE8  0E00               	movlw	0
  3018  002DEA  6E28               	movwf	Set_ADC_Mode@fault_value,c
  3019                           
  3020                           ;BatteryManagment.c: 674: if (ADCOPT_Mode) {
  3021  002DEC  5025               	movf	Set_ADC_Mode@ADCOPT_Mode,w,c
  3022  002DEE  B4D8               	btfsc	status,2,c
  3023  002DF0  D003               	goto	l7281
  3024                           
  3025                           ;BatteryManagment.c: 675: CFGR0 = CFGR0 | 0x01;
  3026  002DF2  5046               	movf	_CFGR0,w,c
  3027  002DF4  0901               	iorlw	1
  3028  002DF6  D002               	goto	L2
  3029  002DF8                     l7281:
  3030                           
  3031                           ;BatteryManagment.c: 677: CFGR0 = CFGR0 & ~0x01;
  3032  002DF8  5046               	movf	_CFGR0,w,c
  3033  002DFA  0BFE               	andlw	254
  3034  002DFC                     L2:
  3035  002DFC  6E46               	movwf	_CFGR0,c
  3036                           
  3037                           ;BatteryManagment.c: 678: }
  3038                           ;BatteryManagment.c: 680: LTC6804_DATA_ConfigBank[ic][0] = CFGR0;
  3039  002DFE  5046               	movf	_CFGR0,w,c
  3040  002E00  6E26               	movwf	??_Set_ADC_Mode& (0+255),c
  3041  002E02  6A27               	clrf	(??_Set_ADC_Mode+1)& (0+255),c
  3042  002E04  C023  F01D         	movff	Set_ADC_Mode@ic,___wmul@multiplier
  3043  002E08  C024  F01E         	movff	Set_ADC_Mode@ic+1,___wmul@multiplier+1
  3044  002E0C  0E00               	movlw	0
  3045  002E0E  6E20               	movwf	___wmul@multiplicand+1,c
  3046  002E10  0E0C               	movlw	12
  3047  002E12  6E1F               	movwf	___wmul@multiplicand,c
  3048  002E14  EC68  F018         	call	___wmul	;wreg free
  3049  002E18  0EEE               	movlw	low _LTC6804_DATA_ConfigBank
  3050  002E1A  241D               	addwf	?___wmul,w,c
  3051  002E1C  6ED9               	movwf	fsr2l,c
  3052  002E1E  0E01               	movlw	high _LTC6804_DATA_ConfigBank
  3053  002E20  201E               	addwfc	?___wmul+1,w,c
  3054  002E22  6EDA               	movwf	fsr2h,c
  3055  002E24  C026  FFDE         	movff	??_Set_ADC_Mode,postinc2
  3056  002E28  C027  FFDD         	movff	??_Set_ADC_Mode+1,postdec2
  3057  002E2C  0012               	return	
  3058  002E2E                     __end_of_Set_ADC_Mode:
  3059                           	opt stack 0
  3060                           tblptru	equ	0xFF8
  3061                           tblptrh	equ	0xFF7
  3062                           tblptrl	equ	0xFF6
  3063                           tablat	equ	0xFF5
  3064                           intcon	equ	0xFF2
  3065                           postinc0	equ	0xFEE
  3066                           wreg	equ	0xFE8
  3067                           postinc1	equ	0xFE6
  3068                           postdec1	equ	0xFE5
  3069                           fsr1h	equ	0xFE2
  3070                           fsr1l	equ	0xFE1
  3071                           postinc2	equ	0xFDE
  3072                           postdec2	equ	0xFDD
  3073                           fsr2h	equ	0xFDA
  3074                           fsr2l	equ	0xFD9
  3075                           status	equ	0xFD8
  3076                           
  3077 ;; *************** function _SetTempEnable *****************
  3078 ;; Defined at:
  3079 ;;		line 612 in file "BatteryManagment.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  ic              2   34[COMRAM] int 
  3082 ;;  value           1   36[COMRAM] unsigned char 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  fault_value     2   39[COMRAM] int 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  2   34[COMRAM] int 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3094 ;;      Params:         3       0       0       0       0       0       0
  3095 ;;      Locals:         2       0       0       0       0       0       0
  3096 ;;      Temps:          2       0       0       0       0       0       0
  3097 ;;      Totals:         7       0       0       0       0       0       0
  3098 ;;Total ram usage:        7 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    4
  3101 ;; This function calls:
  3102 ;;		___wmul
  3103 ;; This function is called by:
  3104 ;;		_Initalize_LT6804b
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text9
  3109  002E2E                     __ptext9:
  3110                           	opt stack 0
  3111  002E2E                     _SetTempEnable:
  3112                           	opt stack 24
  3113                           
  3114                           ;BatteryManagment.c: 613: int fault_value = 0;
  3115                           
  3116                           ;incstack = 0
  3117  002E2E  0E00               	movlw	0
  3118  002E30  6E29               	movwf	SetTempEnable@fault_value+1,c
  3119  002E32  0E00               	movlw	0
  3120  002E34  6E28               	movwf	SetTempEnable@fault_value,c
  3121                           
  3122                           ;BatteryManagment.c: 614: if (value) {
  3123  002E36  5025               	movf	SetTempEnable@value,w,c
  3124  002E38  B4D8               	btfsc	status,2,c
  3125  002E3A  D003               	goto	l7307
  3126                           
  3127                           ;BatteryManagment.c: 615: CFGR0 = CFGR0 | (1 << 7);
  3128  002E3C  5046               	movf	_CFGR0,w,c
  3129  002E3E  0980               	iorlw	128
  3130  002E40  D002               	goto	L3
  3131  002E42                     l7307:
  3132                           
  3133                           ;BatteryManagment.c: 617: CFGR0 = CFGR0 & ~(1 << 7);
  3134  002E42  5046               	movf	_CFGR0,w,c
  3135  002E44  0B7F               	andlw	127
  3136  002E46                     L3:
  3137  002E46  6E46               	movwf	_CFGR0,c
  3138                           
  3139                           ;BatteryManagment.c: 618: }
  3140                           ;BatteryManagment.c: 620: LTC6804_DATA_ConfigBank[ic][0] = CFGR0;
  3141  002E48  5046               	movf	_CFGR0,w,c
  3142  002E4A  6E26               	movwf	??_SetTempEnable& (0+255),c
  3143  002E4C  6A27               	clrf	(??_SetTempEnable+1)& (0+255),c
  3144  002E4E  C023  F01D         	movff	SetTempEnable@ic,___wmul@multiplier
  3145  002E52  C024  F01E         	movff	SetTempEnable@ic+1,___wmul@multiplier+1
  3146  002E56  0E00               	movlw	0
  3147  002E58  6E20               	movwf	___wmul@multiplicand+1,c
  3148  002E5A  0E0C               	movlw	12
  3149  002E5C  6E1F               	movwf	___wmul@multiplicand,c
  3150  002E5E  EC68  F018         	call	___wmul	;wreg free
  3151  002E62  0EEE               	movlw	low _LTC6804_DATA_ConfigBank
  3152  002E64  241D               	addwf	?___wmul,w,c
  3153  002E66  6ED9               	movwf	fsr2l,c
  3154  002E68  0E01               	movlw	high _LTC6804_DATA_ConfigBank
  3155  002E6A  201E               	addwfc	?___wmul+1,w,c
  3156  002E6C  6EDA               	movwf	fsr2h,c
  3157  002E6E  C026  FFDE         	movff	??_SetTempEnable,postinc2
  3158  002E72  C027  FFDD         	movff	??_SetTempEnable+1,postdec2
  3159  002E76  0012               	return	
  3160  002E78                     __end_of_SetTempEnable:
  3161                           	opt stack 0
  3162                           tblptru	equ	0xFF8
  3163                           tblptrh	equ	0xFF7
  3164                           tblptrl	equ	0xFF6
  3165                           tablat	equ	0xFF5
  3166                           intcon	equ	0xFF2
  3167                           postinc0	equ	0xFEE
  3168                           wreg	equ	0xFE8
  3169                           postinc1	equ	0xFE6
  3170                           postdec1	equ	0xFE5
  3171                           fsr1h	equ	0xFE2
  3172                           fsr1l	equ	0xFE1
  3173                           postinc2	equ	0xFDE
  3174                           postdec2	equ	0xFDD
  3175                           fsr2h	equ	0xFDA
  3176                           fsr2l	equ	0xFD9
  3177                           status	equ	0xFD8
  3178                           
  3179 ;; *************** function _SYSTEM_Initialize *****************
  3180 ;; Defined at:
  3181 ;;		line 112 in file "mcc_generated_files/mcc.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;		None
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;		None
  3186 ;; Return value:  Size  Location     Type
  3187 ;;		None               void
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3195 ;;      Params:         0       0       0       0       0       0       0
  3196 ;;      Locals:         0       0       0       0       0       0       0
  3197 ;;      Temps:          0       0       0       0       0       0       0
  3198 ;;      Totals:         0       0       0       0       0       0       0
  3199 ;;Total ram usage:        0 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    5
  3202 ;; This function calls:
  3203 ;;		_ADC_Initialize
  3204 ;;		_EUSART1_Initialize
  3205 ;;		_INTERRUPT_Initialize
  3206 ;;		_OSCILLATOR_Initialize
  3207 ;;		_PIN_MANAGER_Initialize
  3208 ;;		_SPI2_Initialize
  3209 ;;		_TMR0_Initialize
  3210 ;; This function is called by:
  3211 ;;		_main
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text10
  3216  0030F6                     __ptext10:
  3217                           	opt stack 0
  3218  0030F6                     _SYSTEM_Initialize:
  3219                           	opt stack 25
  3220                           
  3221                           ;mcc.c: 115: INTERRUPT_Initialize();
  3222                           
  3223                           ;incstack = 0
  3224  0030F6  ECFA  F018         	call	_INTERRUPT_Initialize	;wreg free
  3225                           
  3226                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  3227  0030FA  ECA1  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  3228                           
  3229                           ;mcc.c: 117: OSCILLATOR_Initialize();
  3230  0030FE  ECF3  F018         	call	_OSCILLATOR_Initialize	;wreg free
  3231                           
  3232                           ;mcc.c: 118: SPI2_Initialize();
  3233  003102  ECEC  F018         	call	_SPI2_Initialize	;wreg free
  3234                           
  3235                           ;mcc.c: 119: ADC_Initialize();
  3236  003106  ECBC  F018         	call	_ADC_Initialize	;wreg free
  3237                           
  3238                           ;mcc.c: 120: TMR0_Initialize();
  3239  00310A  EC3E  F018         	call	_TMR0_Initialize	;wreg free
  3240                           
  3241                           ;mcc.c: 121: EUSART1_Initialize();
  3242  00310E  ECBC  F017         	call	_EUSART1_Initialize	;wreg free
  3243                           
  3244                           ;mcc.c: 123: TRISDbits.RD4 = 0;
  3245  003112  9895               	bcf	3989,4,c	;volatile
  3246                           
  3247                           ;mcc.c: 124: TRISDbits.RD1 = 1;
  3248  003114  8295               	bsf	3989,1,c	;volatile
  3249                           
  3250                           ;mcc.c: 125: TRISDbits.RD0 = 0;
  3251  003116  9095               	bcf	3989,0,c	;volatile
  3252  003118  0012               	return		;funcret
  3253  00311A                     __end_of_SYSTEM_Initialize:
  3254                           	opt stack 0
  3255                           tblptru	equ	0xFF8
  3256                           tblptrh	equ	0xFF7
  3257                           tblptrl	equ	0xFF6
  3258                           tablat	equ	0xFF5
  3259                           intcon	equ	0xFF2
  3260                           postinc0	equ	0xFEE
  3261                           wreg	equ	0xFE8
  3262                           postinc1	equ	0xFE6
  3263                           postdec1	equ	0xFE5
  3264                           fsr1h	equ	0xFE2
  3265                           fsr1l	equ	0xFE1
  3266                           postinc2	equ	0xFDE
  3267                           postdec2	equ	0xFDD
  3268                           fsr2h	equ	0xFDA
  3269                           fsr2l	equ	0xFD9
  3270                           status	equ	0xFD8
  3271                           
  3272 ;; *************** function _TMR0_Initialize *****************
  3273 ;; Defined at:
  3274 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;		None               void
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3288 ;;      Params:         0       0       0       0       0       0       0
  3289 ;;      Locals:         0       0       0       0       0       0       0
  3290 ;;      Temps:          2       0       0       0       0       0       0
  3291 ;;      Totals:         2       0       0       0       0       0       0
  3292 ;;Total ram usage:        2 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    4
  3295 ;; This function calls:
  3296 ;;		_TMR0_StartTimer
  3297 ;; This function is called by:
  3298 ;;		_SYSTEM_Initialize
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text11
  3303  00307C                     __ptext11:
  3304                           	opt stack 0
  3305  00307C                     _TMR0_Initialize:
  3306                           	opt stack 25
  3307                           
  3308                           ;tmr0.c: 69: T0CON = 0x9F;
  3309                           
  3310                           ;incstack = 0
  3311  00307C  0E9F               	movlw	159
  3312  00307E  6ED5               	movwf	4053,c	;volatile
  3313                           
  3314                           ;tmr0.c: 72: TMR0H = 0x63;
  3315  003080  0E63               	movlw	99
  3316  003082  6ED7               	movwf	4055,c	;volatile
  3317                           
  3318                           ;tmr0.c: 75: TMR0L = 0xBF;
  3319  003084  0EBF               	movlw	191
  3320  003086  6ED6               	movwf	4054,c	;volatile
  3321                           
  3322                           ;tmr0.c: 78: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  3323  003088  50D6               	movf	4054,w,c	;volatile
  3324  00308A  CFD7 F00F          	movff	4055,??_TMR0_Initialize	;volatile
  3325  00308E  6A10               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  3326  003090  C00F  F010         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  3327  003094  6A0F               	clrf	??_TMR0_Initialize,c
  3328  003096  100F               	iorwf	??_TMR0_Initialize,w,c
  3329  003098  6E4F               	movwf	_timer0ReloadVal16bit,c	;volatile
  3330  00309A  5010               	movf	??_TMR0_Initialize+1,w,c
  3331  00309C  6E50               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  3332                           
  3333                           ;tmr0.c: 81: INTCONbits.TMR0IF = 0;
  3334  00309E  94F2               	bcf	intcon,2,c	;volatile
  3335                           
  3336                           ;tmr0.c: 84: INTCONbits.TMR0IE = 1;
  3337  0030A0  8AF2               	bsf	intcon,5,c	;volatile
  3338                           
  3339                           ;tmr0.c: 87: TMR0_StartTimer();
  3340  0030A2  EC0B  F019         	call	_TMR0_StartTimer	;wreg free
  3341  0030A6  0012               	return		;funcret
  3342  0030A8                     __end_of_TMR0_Initialize:
  3343                           	opt stack 0
  3344                           tblptru	equ	0xFF8
  3345                           tblptrh	equ	0xFF7
  3346                           tblptrl	equ	0xFF6
  3347                           tablat	equ	0xFF5
  3348                           intcon	equ	0xFF2
  3349                           postinc0	equ	0xFEE
  3350                           wreg	equ	0xFE8
  3351                           postinc1	equ	0xFE6
  3352                           postdec1	equ	0xFE5
  3353                           fsr1h	equ	0xFE2
  3354                           fsr1l	equ	0xFE1
  3355                           postinc2	equ	0xFDE
  3356                           postdec2	equ	0xFDD
  3357                           fsr2h	equ	0xFDA
  3358                           fsr2l	equ	0xFD9
  3359                           status	equ	0xFD8
  3360                           
  3361 ;; *************** function _TMR0_StartTimer *****************
  3362 ;; Defined at:
  3363 ;;		line 90 in file "mcc_generated_files/tmr0.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;		None               void
  3370 ;; Registers used:
  3371 ;;		None
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3377 ;;      Params:         0       0       0       0       0       0       0
  3378 ;;      Locals:         0       0       0       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0
  3380 ;;      Totals:         0       0       0       0       0       0       0
  3381 ;;Total ram usage:        0 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    3
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_TMR0_Initialize
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text12
  3392  003216                     __ptext12:
  3393                           	opt stack 0
  3394  003216                     _TMR0_StartTimer:
  3395                           	opt stack 25
  3396                           
  3397                           ;tmr0.c: 93: T0CONbits.TMR0ON = 1;
  3398                           
  3399                           ;incstack = 0
  3400  003216  8ED5               	bsf	4053,7,c	;volatile
  3401  003218  0012               	return		;funcret
  3402  00321A                     __end_of_TMR0_StartTimer:
  3403                           	opt stack 0
  3404                           tblptru	equ	0xFF8
  3405                           tblptrh	equ	0xFF7
  3406                           tblptrl	equ	0xFF6
  3407                           tablat	equ	0xFF5
  3408                           intcon	equ	0xFF2
  3409                           postinc0	equ	0xFEE
  3410                           wreg	equ	0xFE8
  3411                           postinc1	equ	0xFE6
  3412                           postdec1	equ	0xFE5
  3413                           fsr1h	equ	0xFE2
  3414                           fsr1l	equ	0xFE1
  3415                           postinc2	equ	0xFDE
  3416                           postdec2	equ	0xFDD
  3417                           fsr2h	equ	0xFDA
  3418                           fsr2l	equ	0xFD9
  3419                           status	equ	0xFD8
  3420                           
  3421 ;; *************** function _SPI2_Initialize *****************
  3422 ;; Defined at:
  3423 ;;		line 64 in file "mcc_generated_files/spi2.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;		None
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;		None               void
  3430 ;; Registers used:
  3431 ;;		wreg, status,2
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3437 ;;      Params:         0       0       0       0       0       0       0
  3438 ;;      Locals:         0       0       0       0       0       0       0
  3439 ;;      Temps:          0       0       0       0       0       0       0
  3440 ;;      Totals:         0       0       0       0       0       0       0
  3441 ;;Total ram usage:        0 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    3
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_SYSTEM_Initialize
  3448 ;;		_LTC6804_initialize
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text13
  3453  0031D8                     __ptext13:
  3454                           	opt stack 0
  3455  0031D8                     _SPI2_Initialize:
  3456                           	opt stack 26
  3457                           
  3458                           ;spi2.c: 69: SSP2STAT = 0b01000000;
  3459                           
  3460                           ;incstack = 0
  3461  0031D8  0E40               	movlw	64
  3462  0031DA  6E6D               	movwf	3949,c	;volatile
  3463                           
  3464                           ;spi2.c: 72: SSP2CON1 = 0x22;
  3465  0031DC  0E22               	movlw	34
  3466  0031DE  6E6C               	movwf	3948,c	;volatile
  3467                           
  3468                           ;spi2.c: 75: SSP2ADD = 0x00;
  3469  0031E0  0E00               	movlw	0
  3470  0031E2  6E6E               	movwf	3950,c	;volatile
  3471  0031E4  0012               	return		;funcret
  3472  0031E6                     __end_of_SPI2_Initialize:
  3473                           	opt stack 0
  3474                           tblptru	equ	0xFF8
  3475                           tblptrh	equ	0xFF7
  3476                           tblptrl	equ	0xFF6
  3477                           tablat	equ	0xFF5
  3478                           intcon	equ	0xFF2
  3479                           postinc0	equ	0xFEE
  3480                           wreg	equ	0xFE8
  3481                           postinc1	equ	0xFE6
  3482                           postdec1	equ	0xFE5
  3483                           fsr1h	equ	0xFE2
  3484                           fsr1l	equ	0xFE1
  3485                           postinc2	equ	0xFDE
  3486                           postdec2	equ	0xFDD
  3487                           fsr2h	equ	0xFDA
  3488                           fsr2l	equ	0xFD9
  3489                           status	equ	0xFD8
  3490                           
  3491 ;; *************** function _PIN_MANAGER_Initialize *****************
  3492 ;; Defined at:
  3493 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;		None
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;		None               void
  3500 ;; Registers used:
  3501 ;;		wreg, status,2
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3507 ;;      Params:         0       0       0       0       0       0       0
  3508 ;;      Locals:         0       0       0       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0       0       0
  3510 ;;      Totals:         0       0       0       0       0       0       0
  3511 ;;Total ram usage:        0 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    3
  3514 ;; This function calls:
  3515 ;;		Nothing
  3516 ;; This function is called by:
  3517 ;;		_SYSTEM_Initialize
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text14
  3522  002B42                     __ptext14:
  3523                           	opt stack 0
  3524  002B42                     _PIN_MANAGER_Initialize:
  3525                           	opt stack 26
  3526                           
  3527                           ;pin_manager.c: 51: LATB = 0x0;
  3528                           
  3529                           ;incstack = 0
  3530  002B42  0E00               	movlw	0
  3531  002B44  6E8A               	movwf	3978,c	;volatile
  3532                           
  3533                           ;pin_manager.c: 52: LATA = 0x0;
  3534  002B46  0E00               	movlw	0
  3535  002B48  6E89               	movwf	3977,c	;volatile
  3536                           
  3537                           ;pin_manager.c: 53: ANSELE = 0x7;
  3538  002B4A  0E07               	movlw	7
  3539  002B4C  010F               	movlb	15	; () banked
  3540  002B4E  6F3C               	movwf	60,b	;volatile
  3541                           
  3542                           ;pin_manager.c: 54: LATE = 0x0;
  3543  002B50  0E00               	movlw	0
  3544  002B52  6E8D               	movwf	3981,c	;volatile
  3545                           
  3546                           ;pin_manager.c: 55: LATD = 0x0;
  3547  002B54  0E00               	movlw	0
  3548  002B56  6E8C               	movwf	3980,c	;volatile
  3549                           
  3550                           ;pin_manager.c: 56: LATC = 0x0;
  3551  002B58  0E00               	movlw	0
  3552  002B5A  6E8B               	movwf	3979,c	;volatile
  3553                           
  3554                           ;pin_manager.c: 57: ANSELA = 0x2E;
  3555  002B5C  0E2E               	movlw	46
  3556  002B5E  010F               	movlb	15	; () banked
  3557  002B60  6F38               	movwf	56,b	;volatile
  3558                           
  3559                           ;pin_manager.c: 58: ANSELB = 0x3F;
  3560  002B62  0E3F               	movlw	63
  3561  002B64  010F               	movlb	15	; () banked
  3562  002B66  6F39               	movwf	57,b	;volatile
  3563                           
  3564                           ;pin_manager.c: 59: ANSELC = 0x3C;
  3565  002B68  0E3C               	movlw	60
  3566  002B6A  010F               	movlb	15	; () banked
  3567  002B6C  6F3A               	movwf	58,b	;volatile
  3568                           
  3569                           ;pin_manager.c: 60: ANSELD = 0xF7;
  3570  002B6E  0EF7               	movlw	247
  3571  002B70  010F               	movlb	15	; () banked
  3572  002B72  6F3B               	movwf	59,b	;volatile
  3573                           
  3574                           ;pin_manager.c: 61: WPUB = 0xE7;
  3575  002B74  0EE7               	movlw	231
  3576  002B76  6E61               	movwf	3937,c	;volatile
  3577                           
  3578                           ;pin_manager.c: 62: TRISD = 0x37;
  3579  002B78  0E37               	movlw	55
  3580  002B7A  6E95               	movwf	3989,c	;volatile
  3581                           
  3582                           ;pin_manager.c: 63: TRISE = 0x7;
  3583  002B7C  0E07               	movlw	7
  3584  002B7E  6E96               	movwf	3990,c	;volatile
  3585                           
  3586                           ; BSR set to: 15
  3587                           ;pin_manager.c: 64: TRISB = 0xFF;
  3588  002B80  6893               	setf	3987,c	;volatile
  3589                           
  3590                           ;pin_manager.c: 65: TRISC = 0x9F;
  3591  002B82  0E9F               	movlw	159
  3592  002B84  6E94               	movwf	3988,c	;volatile
  3593                           
  3594                           ;pin_manager.c: 66: TRISA = 0xFE;
  3595  002B86  0EFE               	movlw	254
  3596  002B88  6E92               	movwf	3986,c	;volatile
  3597                           
  3598                           ; BSR set to: 15
  3599                           ;pin_manager.c: 67: TRISD3=0;
  3600  002B8A  9695               	bcf	3989,3,c	;volatile
  3601                           
  3602                           ; BSR set to: 15
  3603                           
  3604                           ; BSR set to: 15
  3605                           
  3606                           ;pin_manager.c: 68: do { LATD3 = 1; } while(0);
  3607  002B8C  868C               	bsf	3980,3,c	;volatile
  3608                           
  3609                           ; BSR set to: 15
  3610                           ;pin_manager.c: 69: INTCON2bits.nRBPU = 0x1;
  3611                           
  3612                           ; BSR set to: 15
  3613  002B8E  8EF1               	bsf	intcon2,7,c	;volatile
  3614                           
  3615                           ; BSR set to: 15
  3616                           ;pin_manager.c: 70: TRISDbits.TRISD1 = 1;
  3617  002B90  8295               	bsf	3989,1,c	;volatile
  3618                           
  3619                           ;pin_manager.c: 71: ANSELD = 0;
  3620  002B92  0E00               	movlw	0
  3621  002B94  010F               	movlb	15	; () banked
  3622  002B96  6F3B               	movwf	59,b	;volatile
  3623                           
  3624                           ;pin_manager.c: 73: ANSELE = 0;
  3625  002B98  0E00               	movlw	0
  3626  002B9A  010F               	movlb	15	; () banked
  3627  002B9C  6F3C               	movwf	60,b	;volatile
  3628                           
  3629                           ;pin_manager.c: 74: ANSELC = 0;
  3630  002B9E  0E00               	movlw	0
  3631  002BA0  010F               	movlb	15	; () banked
  3632  002BA2  6F3A               	movwf	58,b	;volatile
  3633                           
  3634                           ;pin_manager.c: 75: ANSELB = 0;
  3635  002BA4  0E00               	movlw	0
  3636  002BA6  010F               	movlb	15	; () banked
  3637  002BA8  6F39               	movwf	57,b	;volatile
  3638                           
  3639                           ;pin_manager.c: 76: SLRCON =0;
  3640  002BAA  0E00               	movlw	0
  3641  002BAC  6E60               	movwf	3936,c	;volatile
  3642                           
  3643                           ; BSR set to: 15
  3644                           ;pin_manager.c: 80: INTCONbits.RBIE = 0;
  3645  002BAE  96F2               	bcf	intcon,3,c	;volatile
  3646                           
  3647                           ; BSR set to: 15
  3648  002BB0  0012               	return		;funcret
  3649  002BB2                     __end_of_PIN_MANAGER_Initialize:
  3650                           	opt stack 0
  3651                           tblptru	equ	0xFF8
  3652                           tblptrh	equ	0xFF7
  3653                           tblptrl	equ	0xFF6
  3654                           tablat	equ	0xFF5
  3655                           intcon	equ	0xFF2
  3656                           intcon2	equ	0xFF1
  3657                           postinc0	equ	0xFEE
  3658                           wreg	equ	0xFE8
  3659                           postinc1	equ	0xFE6
  3660                           postdec1	equ	0xFE5
  3661                           fsr1h	equ	0xFE2
  3662                           fsr1l	equ	0xFE1
  3663                           postinc2	equ	0xFDE
  3664                           postdec2	equ	0xFDD
  3665                           fsr2h	equ	0xFDA
  3666                           fsr2l	equ	0xFD9
  3667                           status	equ	0xFD8
  3668                           
  3669 ;; *************** function _OSCILLATOR_Initialize *****************
  3670 ;; Defined at:
  3671 ;;		line 129 in file "mcc_generated_files/mcc.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;		None               void
  3678 ;; Registers used:
  3679 ;;		wreg, status,2
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3685 ;;      Params:         0       0       0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0
  3688 ;;      Totals:         0       0       0       0       0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    3
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_SYSTEM_Initialize
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text15
  3700  0031E6                     __ptext15:
  3701                           	opt stack 0
  3702  0031E6                     _OSCILLATOR_Initialize:
  3703                           	opt stack 26
  3704                           
  3705                           ;mcc.c: 132: OSCCON = 0x70;
  3706                           
  3707                           ; BSR set to: 15
  3708                           ;incstack = 0
  3709  0031E6  0E70               	movlw	112
  3710  0031E8  6ED3               	movwf	4051,c	;volatile
  3711                           
  3712                           ;mcc.c: 134: OSCCON2 = 0x04;
  3713  0031EA  0E04               	movlw	4
  3714  0031EC  6ED2               	movwf	4050,c	;volatile
  3715                           
  3716                           ;mcc.c: 136: OSCTUNE = 0x00;
  3717  0031EE  0E00               	movlw	0
  3718  0031F0  6E9B               	movwf	3995,c	;volatile
  3719  0031F2  0012               	return		;funcret
  3720  0031F4                     __end_of_OSCILLATOR_Initialize:
  3721                           	opt stack 0
  3722                           tblptru	equ	0xFF8
  3723                           tblptrh	equ	0xFF7
  3724                           tblptrl	equ	0xFF6
  3725                           tablat	equ	0xFF5
  3726                           intcon	equ	0xFF2
  3727                           intcon2	equ	0xFF1
  3728                           postinc0	equ	0xFEE
  3729                           wreg	equ	0xFE8
  3730                           postinc1	equ	0xFE6
  3731                           postdec1	equ	0xFE5
  3732                           fsr1h	equ	0xFE2
  3733                           fsr1l	equ	0xFE1
  3734                           postinc2	equ	0xFDE
  3735                           postdec2	equ	0xFDD
  3736                           fsr2h	equ	0xFDA
  3737                           fsr2l	equ	0xFD9
  3738                           status	equ	0xFD8
  3739                           
  3740 ;; *************** function _INTERRUPT_Initialize *****************
  3741 ;; Defined at:
  3742 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;		None
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;		None               void
  3749 ;; Registers used:
  3750 ;;		None
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3756 ;;      Params:         0       0       0       0       0       0       0
  3757 ;;      Locals:         0       0       0       0       0       0       0
  3758 ;;      Temps:          0       0       0       0       0       0       0
  3759 ;;      Totals:         0       0       0       0       0       0       0
  3760 ;;Total ram usage:        0 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    3
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_SYSTEM_Initialize
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text16
  3771  0031F4                     __ptext16:
  3772                           	opt stack 0
  3773  0031F4                     _INTERRUPT_Initialize:
  3774                           	opt stack 26
  3775                           
  3776                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3777                           
  3778                           ;incstack = 0
  3779  0031F4  9ED0               	bcf	4048,7,c	;volatile
  3780                           
  3781                           ;interrupt_manager.c: 60: IPR1bits.ADIP = 0;
  3782  0031F6  9C9F               	bcf	3999,6,c	;volatile
  3783                           
  3784                           ;interrupt_manager.c: 62: INTCON2bits.TMR0IP = 0;
  3785  0031F8  94F1               	bcf	intcon2,2,c	;volatile
  3786                           
  3787                           ;interrupt_manager.c: 64: IPR1bits.TX1IP = 0;
  3788  0031FA  989F               	bcf	3999,4,c	;volatile
  3789                           
  3790                           ;interrupt_manager.c: 66: IPR1bits.RC1IP = 0;
  3791  0031FC  9A9F               	bcf	3999,5,c	;volatile
  3792  0031FE  0012               	return		;funcret
  3793  003200                     __end_of_INTERRUPT_Initialize:
  3794                           	opt stack 0
  3795                           tblptru	equ	0xFF8
  3796                           tblptrh	equ	0xFF7
  3797                           tblptrl	equ	0xFF6
  3798                           tablat	equ	0xFF5
  3799                           intcon	equ	0xFF2
  3800                           intcon2	equ	0xFF1
  3801                           postinc0	equ	0xFEE
  3802                           wreg	equ	0xFE8
  3803                           postinc1	equ	0xFE6
  3804                           postdec1	equ	0xFE5
  3805                           fsr1h	equ	0xFE2
  3806                           fsr1l	equ	0xFE1
  3807                           postinc2	equ	0xFDE
  3808                           postdec2	equ	0xFDD
  3809                           fsr2h	equ	0xFDA
  3810                           fsr2l	equ	0xFD9
  3811                           status	equ	0xFD8
  3812                           
  3813 ;; *************** function _EUSART1_Initialize *****************
  3814 ;; Defined at:
  3815 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;		None               void
  3822 ;; Registers used:
  3823 ;;		wreg, status,2
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3829 ;;      Params:         0       0       0       0       0       0       0
  3830 ;;      Locals:         0       0       0       0       0       0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0
  3832 ;;      Totals:         0       0       0       0       0       0       0
  3833 ;;Total ram usage:        0 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    3
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_SYSTEM_Initialize
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text17
  3844  002F78                     __ptext17:
  3845                           	opt stack 0
  3846  002F78                     _EUSART1_Initialize:
  3847                           	opt stack 26
  3848                           
  3849                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
  3850                           
  3851                           ;incstack = 0
  3852  002F78  9A9D               	bcf	3997,5,c	;volatile
  3853                           
  3854                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
  3855  002F7A  989D               	bcf	3997,4,c	;volatile
  3856                           
  3857                           ;eusart1.c: 85: BAUDCON1 = 0x08;
  3858  002F7C  0E08               	movlw	8
  3859  002F7E  6EB8               	movwf	4024,c	;volatile
  3860                           
  3861                           ;eusart1.c: 88: RCSTA1 = 0x90;
  3862  002F80  0E90               	movlw	144
  3863  002F82  6EAB               	movwf	4011,c	;volatile
  3864                           
  3865                           ;eusart1.c: 91: TXSTA1 = 0x24;
  3866  002F84  0E24               	movlw	36
  3867  002F86  6EAC               	movwf	4012,c	;volatile
  3868                           
  3869                           ;eusart1.c: 94: SPBRG1 = 0x67;
  3870  002F88  0E67               	movlw	103
  3871  002F8A  6EAF               	movwf	4015,c	;volatile
  3872                           
  3873                           ;eusart1.c: 97: SPBRGH1 = 0x00;
  3874  002F8C  0E00               	movlw	0
  3875  002F8E  6EB0               	movwf	4016,c	;volatile
  3876                           
  3877                           ;eusart1.c: 101: eusart1TxHead = 0;
  3878  002F90  0E00               	movlw	0
  3879  002F92  6E4B               	movwf	_eusart1TxHead,c
  3880                           
  3881                           ;eusart1.c: 102: eusart1TxTail = 0;
  3882  002F94  0E00               	movlw	0
  3883  002F96  6E4C               	movwf	_eusart1TxTail,c
  3884                           
  3885                           ;eusart1.c: 103: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  3886  002F98  0E08               	movlw	8
  3887  002F9A  0100               	movlb	0	; () banked
  3888  002F9C  6FFF               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3889                           
  3890                           ;eusart1.c: 105: eusart1RxHead = 0;
  3891  002F9E  0E00               	movlw	0
  3892  002FA0  6E49               	movwf	_eusart1RxHead,c
  3893                           
  3894                           ;eusart1.c: 106: eusart1RxTail = 0;
  3895  002FA2  0E00               	movlw	0
  3896  002FA4  6E4A               	movwf	_eusart1RxTail,c
  3897                           
  3898                           ;eusart1.c: 107: eusart1RxCount = 0;
  3899  002FA6  0E00               	movlw	0
  3900  002FA8  0100               	movlb	0	; () banked
  3901  002FAA  6FAA               	movwf	_eusart1RxCount& (0+255),b	;volatile
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;eusart1.c: 110: PIE1bits.RC1IE = 1;
  3905  002FAC  8A9D               	bsf	3997,5,c	;volatile
  3906                           
  3907                           ; BSR set to: 0
  3908  002FAE  0012               	return		;funcret
  3909  002FB0                     __end_of_EUSART1_Initialize:
  3910                           	opt stack 0
  3911                           tblptru	equ	0xFF8
  3912                           tblptrh	equ	0xFF7
  3913                           tblptrl	equ	0xFF6
  3914                           tablat	equ	0xFF5
  3915                           intcon	equ	0xFF2
  3916                           intcon2	equ	0xFF1
  3917                           postinc0	equ	0xFEE
  3918                           wreg	equ	0xFE8
  3919                           postinc1	equ	0xFE6
  3920                           postdec1	equ	0xFE5
  3921                           fsr1h	equ	0xFE2
  3922                           fsr1l	equ	0xFE1
  3923                           postinc2	equ	0xFDE
  3924                           postdec2	equ	0xFDD
  3925                           fsr2h	equ	0xFDA
  3926                           fsr2l	equ	0xFD9
  3927                           status	equ	0xFD8
  3928                           
  3929 ;; *************** function _ADC_Initialize *****************
  3930 ;; Defined at:
  3931 ;;		line 59 in file "mcc_generated_files/adc.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;		None
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;		None
  3936 ;; Return value:  Size  Location     Type
  3937 ;;		None               void
  3938 ;; Registers used:
  3939 ;;		wreg, status,2
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3945 ;;      Params:         0       0       0       0       0       0       0
  3946 ;;      Locals:         0       0       0       0       0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0
  3948 ;;      Totals:         0       0       0       0       0       0       0
  3949 ;;Total ram usage:        0 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    3
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_SYSTEM_Initialize
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text18
  3960  003178                     __ptext18:
  3961                           	opt stack 0
  3962  003178                     _ADC_Initialize:
  3963                           	opt stack 26
  3964                           
  3965                           ;adc.c: 64: ADCON0 = 0x01;
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;incstack = 0
  3969  003178  0E01               	movlw	1
  3970  00317A  6EC2               	movwf	4034,c	;volatile
  3971                           
  3972                           ;adc.c: 67: ADCON1 = 0x00;
  3973  00317C  0E00               	movlw	0
  3974  00317E  6EC1               	movwf	4033,c	;volatile
  3975                           
  3976                           ;adc.c: 70: ADCON2 = 0x02;
  3977  003180  0E02               	movlw	2
  3978  003182  6EC0               	movwf	4032,c	;volatile
  3979                           
  3980                           ;adc.c: 73: ADRESL = 0x00;
  3981  003184  0E00               	movlw	0
  3982  003186  6EC3               	movwf	4035,c	;volatile
  3983                           
  3984                           ;adc.c: 76: ADRESH = 0x00;
  3985  003188  0E00               	movlw	0
  3986  00318A  6EC4               	movwf	4036,c	;volatile
  3987                           
  3988                           ;adc.c: 79: PIE1bits.ADIE = 1;
  3989  00318C  8C9D               	bsf	3997,6,c	;volatile
  3990  00318E  0012               	return		;funcret
  3991  003190                     __end_of_ADC_Initialize:
  3992                           	opt stack 0
  3993                           tblptru	equ	0xFF8
  3994                           tblptrh	equ	0xFF7
  3995                           tblptrl	equ	0xFF6
  3996                           tablat	equ	0xFF5
  3997                           intcon	equ	0xFF2
  3998                           intcon2	equ	0xFF1
  3999                           postinc0	equ	0xFEE
  4000                           wreg	equ	0xFE8
  4001                           postinc1	equ	0xFE6
  4002                           postdec1	equ	0xFE5
  4003                           fsr1h	equ	0xFE2
  4004                           fsr1l	equ	0xFE1
  4005                           postinc2	equ	0xFDE
  4006                           postdec2	equ	0xFDD
  4007                           fsr2h	equ	0xFDA
  4008                           fsr2l	equ	0xFD9
  4009                           status	equ	0xFD8
  4010                           
  4011 ;; *************** function _Run_Mode *****************
  4012 ;; Defined at:
  4013 ;;		line 44 in file "BatteryManagment.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;		None
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  k               2    3[BANK1 ] int 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  2  368[None  ] int 
  4020 ;; Registers used:
  4021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4027 ;;      Params:         0       0       0       0       0       0       0
  4028 ;;      Locals:         0       0       5       0       0       0       0
  4029 ;;      Temps:          0       0       0       0       0       0       0
  4030 ;;      Totals:         0       0       5       0       0       0       0
  4031 ;;Total ram usage:        5 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:    8
  4034 ;; This function calls:
  4035 ;;		_Read_Battery
  4036 ;;		___awtoft
  4037 ;;		___ftmul
  4038 ;;		_printf
  4039 ;; This function is called by:
  4040 ;;		_main
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text19
  4045  0025A0                     __ptext19:
  4046                           	opt stack 0
  4047  0025A0                     _Run_Mode:
  4048                           	opt stack 22
  4049                           
  4050                           ;BatteryManagment.c: 46: Read_Battery(0,cell_codes_Bank);
  4051                           
  4052                           ;incstack = 0
  4053  0025A0  0E00               	movlw	0
  4054  0025A2  0100               	movlb	0	; () banked
  4055  0025A4  6FF2               	movwf	(Read_Battery@BatteryPlacement+1)& (0+255),b
  4056  0025A6  0E00               	movlw	0
  4057  0025A8  6FF1               	movwf	Read_Battery@BatteryPlacement& (0+255),b
  4058  0025AA  0E96               	movlw	low _cell_codes_Bank
  4059  0025AC  0100               	movlb	0	; () banked
  4060  0025AE  6FF3               	movwf	Read_Battery@cell_codes& (0+255),b
  4061  0025B0  0E02               	movlw	high _cell_codes_Bank
  4062  0025B2  0100               	movlb	0	; () banked
  4063  0025B4  6FF4               	movwf	(Read_Battery@cell_codes+1)& (0+255),b
  4064  0025B6  EC6C  F00A         	call	_Read_Battery	;wreg free
  4065                           
  4066                           ;BatteryManagment.c: 49: int k = 0;
  4067  0025BA  0E00               	movlw	0
  4068  0025BC  0101               	movlb	1	; () banked
  4069  0025BE  6F04               	movwf	(Run_Mode@k+1)& (0+255),b
  4070  0025C0  0E00               	movlw	0
  4071  0025C2  6F03               	movwf	Run_Mode@k& (0+255),b
  4072  0025C4                     l8155:
  4073                           
  4074                           ; BSR set to: 1
  4075  0025C4  0101               	movlb	1	; () banked
  4076  0025C6  BF04               	btfsc	(Run_Mode@k+1)& (0+255),7,b
  4077  0025C8  D008               	goto	l8159
  4078  0025CA  0101               	movlb	1	; () banked
  4079  0025CC  5104               	movf	(Run_Mode@k+1)& (0+255),w,b
  4080  0025CE  E140               	bnz	l509
  4081  0025D0  0E0C               	movlw	12
  4082  0025D2  0101               	movlb	1	; () banked
  4083  0025D4  5D03               	subwf	Run_Mode@k& (0+255),w,b
  4084  0025D6  B0D8               	btfsc	status,0,c
  4085  0025D8  0012               	return	
  4086  0025DA                     l8159:
  4087                           
  4088                           ; BSR set to: 1
  4089                           ;BatteryManagment.c: 51: printf(" Cell %d Voltage: %1.2f \n",k, cell_codes_Bank[0][k]*0.
      +                          00001);
  4090  0025DA  90D8               	bcf	status,0,c
  4091  0025DC  0101               	movlb	1	; () banked
  4092  0025DE  3503               	rlcf	Run_Mode@k& (0+255),w,b
  4093  0025E0  6ED9               	movwf	fsr2l,c
  4094  0025E2  0101               	movlb	1	; () banked
  4095  0025E4  3504               	rlcf	(Run_Mode@k+1)& (0+255),w,b
  4096  0025E6  6EDA               	movwf	fsr2h,c
  4097  0025E8  0E96               	movlw	low _cell_codes_Bank
  4098  0025EA  26D9               	addwf	fsr2l,f,c
  4099  0025EC  0E02               	movlw	high _cell_codes_Bank
  4100  0025EE  22DA               	addwfc	fsr2h,f,c
  4101  0025F0  CFDE F017          	movff	postinc2,___awtoft@c
  4102  0025F4  CFDD F018          	movff	postdec2,___awtoft@c+1
  4103  0025F8  ECD8  F017         	call	___awtoft	;wreg free
  4104  0025FC  C017  F023         	movff	?___awtoft,___ftmul@f1
  4105  002600  C018  F024         	movff	?___awtoft+1,___ftmul@f1+1
  4106  002604  C019  F025         	movff	?___awtoft+2,___ftmul@f1+2
  4107  002608  0EC6               	movlw	198
  4108  00260A  6E26               	movwf	___ftmul@f2,c
  4109  00260C  0E27               	movlw	39
  4110  00260E  6E27               	movwf	___ftmul@f2+1,c
  4111  002610  0E37               	movlw	55
  4112  002612  6E28               	movwf	___ftmul@f2+2,c
  4113  002614  ECE8  F011         	call	___ftmul	;wreg free
  4114  002618  C023  F100         	movff	?___ftmul,_Run_Mode$2826
  4115  00261C  C024  F101         	movff	?___ftmul+1,_Run_Mode$2826+1
  4116  002620  C025  F102         	movff	?___ftmul+2,_Run_Mode$2826+2
  4117                           
  4118                           ;BatteryManagment.c: 51: printf(" Cell %d Voltage: %1.2f \n",k, cell_codes_Bank[0][k]*0.
      +                          00001);
  4119  002624  0EE0               	movlw	low STR_2
  4120  002626  0100               	movlb	0	; () banked
  4121  002628  6FC5               	movwf	printf@f& (0+255),b
  4122  00262A  0E7F               	movlw	high STR_2
  4123  00262C  0100               	movlb	0	; () banked
  4124  00262E  6FC6               	movwf	(printf@f+1)& (0+255),b
  4125  002630  C103  F0C7         	movff	Run_Mode@k,?_printf+2
  4126  002634  C104  F0C8         	movff	Run_Mode@k+1,?_printf+3
  4127  002638  C100  F0C9         	movff	_Run_Mode$2826,?_printf+4
  4128  00263C  C101  F0CA         	movff	_Run_Mode$2826+1,?_printf+5
  4129  002640  C102  F0CB         	movff	_Run_Mode$2826+2,?_printf+6
  4130  002644  EC58  F000         	call	_printf	;wreg free
  4131  002648  0101               	movlb	1	; () banked
  4132  00264A  4B03               	infsnz	Run_Mode@k& (0+255),f,b
  4133  00264C  2B04               	incf	(Run_Mode@k+1)& (0+255),f,b
  4134  00264E  D7BA               	goto	l8155
  4135  002650                     l509:
  4136                           
  4137                           ; BSR set to: 1
  4138  002650  0012               	return		;funcret
  4139  002652                     __end_of_Run_Mode:
  4140                           	opt stack 0
  4141                           tblptru	equ	0xFF8
  4142                           tblptrh	equ	0xFF7
  4143                           tblptrl	equ	0xFF6
  4144                           tablat	equ	0xFF5
  4145                           intcon	equ	0xFF2
  4146                           intcon2	equ	0xFF1
  4147                           postinc0	equ	0xFEE
  4148                           wreg	equ	0xFE8
  4149                           postinc1	equ	0xFE6
  4150                           postdec1	equ	0xFE5
  4151                           fsr1h	equ	0xFE2
  4152                           fsr1l	equ	0xFE1
  4153                           postinc2	equ	0xFDE
  4154                           postdec2	equ	0xFDD
  4155                           fsr2h	equ	0xFDA
  4156                           fsr2l	equ	0xFD9
  4157                           status	equ	0xFD8
  4158                           
  4159 ;; *************** function _printf *****************
  4160 ;; Defined at:
  4161 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  f               2   12[BANK0 ] PTR const unsigned char 
  4164 ;;		 -> STR_2(26), STR_1(5), 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  val             4   38[BANK0 ] unsigned long 
  4167 ;;  tmpval          4   34[BANK0 ] struct .
  4168 ;;  fval            3   44[BANK0 ] struct .
  4169 ;;  cp              3    0        PTR const unsigned char 
  4170 ;;  prec            2   47[BANK0 ] int 
  4171 ;;  exp             2   42[BANK0 ] int 
  4172 ;;  width           2   32[BANK0 ] int 
  4173 ;;  flag            2   30[BANK0 ] unsigned short 
  4174 ;;  ap              2   28[BANK0 ] PTR void [1]
  4175 ;;		 -> ?_printf(2), 
  4176 ;;  len             2    0        unsigned int 
  4177 ;;  c               1   49[BANK0 ] char 
  4178 ;;  d               1    0        unsigned char 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  2   12[BANK0 ] int 
  4181 ;; Registers used:
  4182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4188 ;;      Params:         0       7       0       0       0       0       0
  4189 ;;      Locals:         0      25       0       0       0       0       0
  4190 ;;      Temps:          0       6       0       0       0       0       0
  4191 ;;      Totals:         0      38       0       0       0       0       0
  4192 ;;Total ram usage:       38 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; Hardware stack levels required when called:    6
  4195 ;; This function calls:
  4196 ;;		___awdiv
  4197 ;;		___ftadd
  4198 ;;		___ftge
  4199 ;;		___ftmul
  4200 ;;		___ftneg
  4201 ;;		___ftsub
  4202 ;;		___fttol
  4203 ;;		___lldiv
  4204 ;;		___llmod
  4205 ;;		___lltoft
  4206 ;;		___wmul
  4207 ;;		__div_to_l_
  4208 ;;		__tdiv_to_l_
  4209 ;;		_fround
  4210 ;;		_isdigit
  4211 ;;		_putch
  4212 ;;		_scale
  4213 ;; This function is called by:
  4214 ;;		_main
  4215 ;;		_Run_Mode
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text20
  4220  0000B0                     __ptext20:
  4221                           	opt stack 0
  4222  0000B0                     _printf:
  4223                           	opt stack 24
  4224                           
  4225                           ;doprnt.c: 466: va_list ap;
  4226                           ;doprnt.c: 499: signed char c;
  4227                           ;doprnt.c: 501: int width;
  4228                           ;doprnt.c: 504: int prec;
  4229                           ;doprnt.c: 508: unsigned short flag;
  4230                           ;doprnt.c: 515: char d;
  4231                           ;doprnt.c: 516: double fval;
  4232                           ;doprnt.c: 517: int exp;
  4233                           ;doprnt.c: 523: union {
  4234                           ;doprnt.c: 524: unsigned long vd;
  4235                           ;doprnt.c: 525: double integ;
  4236                           ;doprnt.c: 526: } tmpval;
  4237                           ;doprnt.c: 528: unsigned long val;
  4238                           ;doprnt.c: 529: unsigned len;
  4239                           ;doprnt.c: 530: const char * cp;
  4240                           ;doprnt.c: 533: *ap = __va_start();
  4241                           
  4242                           ; BSR set to: 1
  4243                           ;incstack = 0
  4244  0000B0  0EC7               	movlw	low (?_printf+2)
  4245  0000B2  0100               	movlb	0	; () banked
  4246  0000B4  6FD5               	movwf	printf@ap& (0+255),b
  4247  0000B6  0E00               	movlw	high (?_printf+2)
  4248  0000B8  0100               	movlb	0	; () banked
  4249  0000BA  6FD6               	movwf	(printf@ap+1)& (0+255),b
  4250                           
  4251                           ;doprnt.c: 536: while(c = *f++) {
  4252  0000BC  EFB9  F005         	goto	l8015
  4253  0000C0                     l7751:
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;doprnt.c: 538: if(c != '%')
  4257  0000C0  0E25               	movlw	37
  4258  0000C2  0100               	movlb	0	; () banked
  4259  0000C4  19EA               	xorwf	printf@c& (0+255),w,b
  4260  0000C6  B4D8               	btfsc	status,2,c
  4261  0000C8  D006               	goto	l7755
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;doprnt.c: 540: {
  4265                           ;doprnt.c: 541: (putch(c) );
  4266  0000CA  0100               	movlb	0	; () banked
  4267  0000CC  51EA               	movf	printf@c& (0+255),w,b
  4268  0000CE  EC00  F019         	call	_putch
  4269                           
  4270                           ;doprnt.c: 542: continue;
  4271  0000D2  EFB9  F005         	goto	l8015
  4272  0000D6                     l7755:
  4273                           
  4274                           ;doprnt.c: 543: }
  4275                           ;doprnt.c: 546: width = 0;
  4276  0000D6  0E00               	movlw	0
  4277  0000D8  0100               	movlb	0	; () banked
  4278  0000DA  6FDA               	movwf	(printf@width+1)& (0+255),b
  4279  0000DC  0E00               	movlw	0
  4280  0000DE  6FD9               	movwf	printf@width& (0+255),b
  4281                           
  4282                           ;doprnt.c: 548: flag = 0;
  4283  0000E0  0E00               	movlw	0
  4284  0000E2  0100               	movlb	0	; () banked
  4285  0000E4  6FD8               	movwf	(printf@flag+1)& (0+255),b
  4286  0000E6  0E00               	movlw	0
  4287  0000E8  6FD7               	movwf	printf@flag& (0+255),b
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4291  0000EA  C0C5  FFF6         	movff	printf@f,tblptrl
  4292  0000EE  C0C6  FFF7         	movff	printf@f+1,tblptrh
  4293  0000F2                     	if	0	;tblptru may be non-zero
  4294  0000F2                     	endif
  4295  0000F2                     	if	0	;tblptru may be non-zero
  4296  0000F2                     	endif
  4297  0000F2  0008               	tblrd		*
  4298  0000F4  50F5               	movf	tablat,w,c
  4299  0000F6  EC9F  F018         	call	_isdigit
  4300  0000FA  A0D8               	btfss	status,0,c
  4301  0000FC  D03F               	goto	l7769
  4302                           
  4303                           ;doprnt.c: 598: width = 0;
  4304  0000FE  0E00               	movlw	0
  4305  000100  0100               	movlb	0	; () banked
  4306  000102  6FDA               	movwf	(printf@width+1)& (0+255),b
  4307  000104  0E00               	movlw	0
  4308  000106  6FD9               	movwf	printf@width& (0+255),b
  4309  000108                     l7761:
  4310                           
  4311                           ;doprnt.c: 600: width *= 10;
  4312  000108  C0D9  F01D         	movff	printf@width,___wmul@multiplier
  4313  00010C  C0DA  F01E         	movff	printf@width+1,___wmul@multiplier+1
  4314  000110  0E00               	movlw	0
  4315  000112  6E20               	movwf	___wmul@multiplicand+1,c
  4316  000114  0E0A               	movlw	10
  4317  000116  6E1F               	movwf	___wmul@multiplicand,c
  4318  000118  EC68  F018         	call	___wmul	;wreg free
  4319  00011C  C01D  F0D9         	movff	?___wmul,printf@width
  4320  000120  C01E  F0DA         	movff	?___wmul+1,printf@width+1
  4321                           
  4322                           ;doprnt.c: 601: width += *f++ - '0';
  4323  000124  0ED0               	movlw	208
  4324  000126  0100               	movlb	0	; () banked
  4325  000128  6FCC               	movwf	??_printf& (0+255),b
  4326  00012A  0EFF               	movlw	255
  4327  00012C  0100               	movlb	0	; () banked
  4328  00012E  6FCD               	movwf	(??_printf+1)& (0+255),b
  4329  000130  C0C5  FFF6         	movff	printf@f,tblptrl
  4330  000134  C0C6  FFF7         	movff	printf@f+1,tblptrh
  4331  000138                     	if	0	;tblptru may be non-zero
  4332  000138                     	endif
  4333  000138                     	if	0	;tblptru may be non-zero
  4334  000138                     	endif
  4335  000138  0008               	tblrd		*
  4336  00013A  50F5               	movf	tablat,w,c
  4337  00013C  0100               	movlb	0	; () banked
  4338  00013E  6FCE               	movwf	(??_printf+2)& (0+255),b
  4339  000140  6BCF               	clrf	(??_printf+3)& (0+255),b
  4340  000142  0100               	movlb	0	; () banked
  4341  000144  51CC               	movf	??_printf& (0+255),w,b
  4342  000146  0100               	movlb	0	; () banked
  4343  000148  27CE               	addwf	(??_printf+2)& (0+255),f,b
  4344  00014A  0100               	movlb	0	; () banked
  4345  00014C  51CD               	movf	(??_printf+1)& (0+255),w,b
  4346  00014E  0100               	movlb	0	; () banked
  4347  000150  23CF               	addwfc	(??_printf+3)& (0+255),f,b
  4348  000152  0100               	movlb	0	; () banked
  4349  000154  51CE               	movf	(??_printf+2)& (0+255),w,b
  4350  000156  0100               	movlb	0	; () banked
  4351  000158  27D9               	addwf	printf@width& (0+255),f,b
  4352  00015A  0100               	movlb	0	; () banked
  4353  00015C  51CF               	movf	(??_printf+3)& (0+255),w,b
  4354  00015E  0100               	movlb	0	; () banked
  4355  000160  23DA               	addwfc	(printf@width+1)& (0+255),f,b
  4356                           
  4357                           ; BSR set to: 0
  4358  000162  0100               	movlb	0	; () banked
  4359  000164  4BC5               	infsnz	printf@f& (0+255),f,b
  4360  000166  2BC6               	incf	(printf@f+1)& (0+255),f,b
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4364  000168  C0C5  FFF6         	movff	printf@f,tblptrl
  4365  00016C  C0C6  FFF7         	movff	printf@f+1,tblptrh
  4366  000170                     	if	0	;tblptru may be non-zero
  4367  000170                     	endif
  4368  000170                     	if	0	;tblptru may be non-zero
  4369  000170                     	endif
  4370  000170  0008               	tblrd		*
  4371  000172  50F5               	movf	tablat,w,c
  4372  000174  EC9F  F018         	call	_isdigit
  4373  000178  B0D8               	btfsc	status,0,c
  4374  00017A  D7C6               	goto	l7761
  4375  00017C                     l7769:
  4376                           
  4377                           ;doprnt.c: 608: }
  4378                           ;doprnt.c: 611: if(*f == '.') {
  4379  00017C  C0C5  FFF6         	movff	printf@f,tblptrl
  4380  000180  C0C6  FFF7         	movff	printf@f+1,tblptrh
  4381  000184                     	if	0	;tblptru may be non-zero
  4382  000184                     	endif
  4383  000184                     	if	0	;tblptru may be non-zero
  4384  000184                     	endif
  4385  000184  0008               	tblrd		*
  4386  000186  50F5               	movf	tablat,w,c
  4387  000188  0A2E               	xorlw	46
  4388  00018A  A4D8               	btfss	status,2,c
  4389  00018C  D034               	goto	l7781
  4390                           
  4391                           ;doprnt.c: 612: flag |= 0x4000;
  4392  00018E  0100               	movlb	0	; () banked
  4393  000190  8DD8               	bsf	(printf@flag+1)& (0+255),6,b
  4394                           
  4395                           ;doprnt.c: 613: f++;
  4396  000192  0100               	movlb	0	; () banked
  4397  000194  4BC5               	infsnz	printf@f& (0+255),f,b
  4398  000196  2BC6               	incf	(printf@f+1)& (0+255),f,b
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;doprnt.c: 620: {
  4402                           ;doprnt.c: 621: prec = 0;
  4403  000198  0E00               	movlw	0
  4404  00019A  0100               	movlb	0	; () banked
  4405  00019C  6FE9               	movwf	(printf@prec+1)& (0+255),b
  4406  00019E  0E00               	movlw	0
  4407  0001A0  6FE8               	movwf	printf@prec& (0+255),b
  4408                           
  4409                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  4410  0001A2  D01E               	goto	l7779
  4411  0001A4                     l7775:
  4412                           
  4413                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  4414  0001A4  C0E8  F01D         	movff	printf@prec,___wmul@multiplier
  4415  0001A8  C0E9  F01E         	movff	printf@prec+1,___wmul@multiplier+1
  4416  0001AC  0E00               	movlw	0
  4417  0001AE  6E20               	movwf	___wmul@multiplicand+1,c
  4418  0001B0  0E0A               	movlw	10
  4419  0001B2  6E1F               	movwf	___wmul@multiplicand,c
  4420  0001B4  EC68  F018         	call	___wmul	;wreg free
  4421  0001B8  C0C5  FFF6         	movff	printf@f,tblptrl
  4422  0001BC  C0C6  FFF7         	movff	printf@f+1,tblptrh
  4423  0001C0                     	if	0	;tblptru may be non-zero
  4424  0001C0                     	endif
  4425  0001C0                     	if	0	;tblptru may be non-zero
  4426  0001C0                     	endif
  4427  0001C0  0008               	tblrd		*
  4428  0001C2  50F5               	movf	tablat,w,c
  4429  0001C4  261D               	addwf	?___wmul,f,c
  4430  0001C6  0E00               	movlw	0
  4431  0001C8  221E               	addwfc	?___wmul+1,f,c
  4432  0001CA  0ED0               	movlw	208
  4433  0001CC  241D               	addwf	?___wmul,w,c
  4434  0001CE  0100               	movlb	0	; () banked
  4435  0001D0  6FE8               	movwf	printf@prec& (0+255),b
  4436  0001D2  0EFF               	movlw	255
  4437  0001D4  201E               	addwfc	?___wmul+1,w,c
  4438  0001D6  0100               	movlb	0	; () banked
  4439  0001D8  6FE9               	movwf	(printf@prec+1)& (0+255),b
  4440                           
  4441                           ; BSR set to: 0
  4442  0001DA  0100               	movlb	0	; () banked
  4443  0001DC  4BC5               	infsnz	printf@f& (0+255),f,b
  4444  0001DE  2BC6               	incf	(printf@f+1)& (0+255),f,b
  4445  0001E0                     l7779:
  4446                           
  4447                           ; BSR set to: 0
  4448  0001E0  C0C5  FFF6         	movff	printf@f,tblptrl
  4449  0001E4  C0C6  FFF7         	movff	printf@f+1,tblptrh
  4450  0001E8                     	if	0	;tblptru may be non-zero
  4451  0001E8                     	endif
  4452  0001E8                     	if	0	;tblptru may be non-zero
  4453  0001E8                     	endif
  4454  0001E8  0008               	tblrd		*
  4455  0001EA  50F5               	movf	tablat,w,c
  4456  0001EC  EC9F  F018         	call	_isdigit
  4457  0001F0  A0D8               	btfss	status,0,c
  4458  0001F2  D00C               	goto	l7789
  4459  0001F4  D7D7               	goto	l7775
  4460  0001F6                     l7781:
  4461                           
  4462                           ;doprnt.c: 626: prec = 0;
  4463  0001F6  0E00               	movlw	0
  4464  0001F8  0100               	movlb	0	; () banked
  4465  0001FA  6FE9               	movwf	(printf@prec+1)& (0+255),b
  4466  0001FC  0E00               	movlw	0
  4467  0001FE  6FE8               	movwf	printf@prec& (0+255),b
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;doprnt.c: 628: flag |= 0x1000;
  4471  000200  0100               	movlb	0	; () banked
  4472  000202  89D8               	bsf	(printf@flag+1)& (0+255),4,b
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;doprnt.c: 630: }
  4476                           ;doprnt.c: 635: switch(c = *f++) {
  4477  000204  D003               	goto	l7789
  4478  000206                     l7785:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;doprnt.c: 663: flag |= 0x400;
  4482  000206  0100               	movlb	0	; () banked
  4483  000208  85D8               	bsf	(printf@flag+1)& (0+255),2,b
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;doprnt.c: 698: case 'i':
  4487                           ;doprnt.c: 699: break;
  4488                           
  4489                           ; BSR set to: 0
  4490                           
  4491                           ;doprnt.c: 697: case 'd':
  4492                           
  4493                           ;doprnt.c: 664: break;
  4494  00020A  D019               	goto	l7791
  4495  00020C                     l7789:
  4496  00020C  C0C5  FFF6         	movff	printf@f,tblptrl
  4497  000210  C0C6  FFF7         	movff	printf@f+1,tblptrh
  4498  000214  0100               	movlb	0	; () banked
  4499  000216  4BC5               	infsnz	printf@f& (0+255),f,b
  4500  000218  2BC6               	incf	(printf@f+1)& (0+255),f,b
  4501  00021A                     	if	0	;tblptru may be non-zero
  4502  00021A                     	endif
  4503  00021A                     	if	0	;tblptru may be non-zero
  4504  00021A                     	endif
  4505  00021A  0008               	tblrd		*
  4506  00021C  CFF5 F0EA          	movff	tablat,printf@c
  4507  000220  0100               	movlb	0	; () banked
  4508  000222  51EA               	movf	printf@c& (0+255),w,b
  4509                           
  4510                           ; Switch size 1, requested type "space"
  4511                           ; Number of cases is 4, Range of values is 0 to 105
  4512                           ; switch strategies available:
  4513                           ; Name         Instructions Cycles
  4514                           ; simple_byte           13     7 (average)
  4515                           ;	Chosen strategy is simple_byte
  4516  000224  0A00               	xorlw	0	; case 0
  4517  000226  B4D8               	btfsc	status,2,c
  4518  000228  0012               	return	
  4519  00022A  0A64               	xorlw	100	; case 100
  4520  00022C  B4D8               	btfsc	status,2,c
  4521  00022E  D007               	goto	l7791
  4522  000230  0A02               	xorlw	2	; case 102
  4523  000232  B4D8               	btfsc	status,2,c
  4524  000234  D7E8               	goto	l7785
  4525  000236  0A0F               	xorlw	15	; case 105
  4526  000238  A4D8               	btfss	status,2,c
  4527  00023A  EFB9  F005         	goto	l8015
  4528  00023E                     l7791:
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;doprnt.c: 825: if(flag & (0x700)) {
  4532  00023E  0E07               	movlw	7
  4533  000240  0100               	movlb	0	; () banked
  4534  000242  15D8               	andwf	(printf@flag+1)& (0+255),w,b
  4535  000244  B4D8               	btfsc	status,2,c
  4536  000246  D33D               	goto	l7941
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;doprnt.c: 827: if(flag & 0x1000)
  4540  000248  0100               	movlb	0	; () banked
  4541  00024A  A9D8               	btfss	(printf@flag+1)& (0+255),4,b
  4542  00024C  D005               	goto	l7797
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;doprnt.c: 829: prec = 6;
  4546  00024E  0E00               	movlw	0
  4547  000250  0100               	movlb	0	; () banked
  4548  000252  6FE9               	movwf	(printf@prec+1)& (0+255),b
  4549  000254  0E06               	movlw	6
  4550  000256  6FE8               	movwf	printf@prec& (0+255),b
  4551  000258                     l7797:
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4555  000258  C0D5  FFD9         	movff	printf@ap,fsr2l
  4556  00025C  C0D6  FFDA         	movff	printf@ap+1,fsr2h
  4557  000260  CFDE F0E5          	movff	postinc2,printf@fval
  4558  000264  CFDE F0E6          	movff	postinc2,printf@fval+1
  4559  000268  CFDD F0E7          	movff	postdec2,printf@fval+2
  4560                           
  4561                           ; BSR set to: 0
  4562  00026C  0E03               	movlw	3
  4563  00026E  0100               	movlb	0	; () banked
  4564  000270  27D5               	addwf	printf@ap& (0+255),f,b
  4565  000272  0E00               	movlw	0
  4566  000274  23D6               	addwfc	(printf@ap+1)& (0+255),f,b
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;doprnt.c: 831: if(fval < 0.0) {
  4570  000276  0100               	movlb	0	; () banked
  4571  000278  AFE7               	btfss	(printf@fval+2)& (0+255),7,b
  4572  00027A  D011               	goto	l7807
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;doprnt.c: 832: fval = -fval;
  4576  00027C  C0E5  F00F         	movff	printf@fval,___ftneg@f1
  4577  000280  C0E6  F010         	movff	printf@fval+1,___ftneg@f1+1
  4578  000284  C0E7  F011         	movff	printf@fval+2,___ftneg@f1+2
  4579  000288  EC8D  F018         	call	___ftneg	;wreg free
  4580  00028C  C00F  F0E5         	movff	?___ftneg,printf@fval
  4581  000290  C010  F0E6         	movff	?___ftneg+1,printf@fval+1
  4582  000294  C011  F0E7         	movff	?___ftneg+2,printf@fval+2
  4583                           
  4584                           ;doprnt.c: 833: flag |= 0x03;
  4585  000298  0E03               	movlw	3
  4586  00029A  0100               	movlb	0	; () banked
  4587  00029C  13D7               	iorwf	printf@flag& (0+255),f,b
  4588  00029E                     l7807:
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;doprnt.c: 834: }
  4592                           ;doprnt.c: 835: exp = 0;
  4593  00029E  0E00               	movlw	0
  4594  0002A0  0100               	movlb	0	; () banked
  4595  0002A2  6FE4               	movwf	(printf@exp+1)& (0+255),b
  4596  0002A4  0E00               	movlw	0
  4597  0002A6  6FE3               	movwf	printf@exp& (0+255),b
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;doprnt.c: 836: if( fval!=0) {
  4601  0002A8  0100               	movlb	0	; () banked
  4602  0002AA  51E5               	movf	printf@fval& (0+255),w,b
  4603  0002AC  0100               	movlb	0	; () banked
  4604  0002AE  11E6               	iorwf	(printf@fval+1)& (0+255),w,b
  4605  0002B0  0100               	movlb	0	; () banked
  4606  0002B2  11E7               	iorwf	(printf@fval+2)& (0+255),w,b
  4607  0002B4  B4D8               	btfsc	status,2,c
  4608  0002B6  D091               	goto	l7835
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  4612  0002B8  0E82               	movlw	130
  4613  0002BA  0100               	movlb	0	; () banked
  4614  0002BC  6FCC               	movwf	??_printf& (0+255),b
  4615  0002BE  0EFF               	movlw	255
  4616  0002C0  0100               	movlb	0	; () banked
  4617  0002C2  6FCD               	movwf	(??_printf+1)& (0+255),b
  4618  0002C4  C0E5  F0CE         	movff	printf@fval,??_printf+2
  4619  0002C8  C0E6  F0CF         	movff	printf@fval+1,??_printf+3
  4620  0002CC  C0E7  F0D0         	movff	printf@fval+2,??_printf+4
  4621  0002D0  C0E8  F0D1         	movff	printf@fval+3,??_printf+5
  4622  0002D4  0E10               	movlw	16
  4623  0002D6  D006               	goto	u8050
  4624  0002D8                     u8055:
  4625  0002D8  0100               	movlb	0	; () banked
  4626  0002DA  90D8               	bcf	status,0,c
  4627  0002DC  33D1               	rrcf	(??_printf+5)& (0+255),f,b
  4628  0002DE  33D0               	rrcf	(??_printf+4)& (0+255),f,b
  4629  0002E0  33CF               	rrcf	(??_printf+3)& (0+255),f,b
  4630  0002E2  33CE               	rrcf	(??_printf+2)& (0+255),f,b
  4631  0002E4                     u8050:
  4632  0002E4  2EE8               	decfsz	wreg,f,c
  4633  0002E6  D7F8               	goto	u8055
  4634  0002E8  0100               	movlb	0	; () banked
  4635  0002EA  51CE               	movf	(??_printf+2)& (0+255),w,b
  4636  0002EC  0100               	movlb	0	; () banked
  4637  0002EE  25CC               	addwf	??_printf& (0+255),w,b
  4638  0002F0  0100               	movlb	0	; () banked
  4639  0002F2  6FE3               	movwf	printf@exp& (0+255),b
  4640  0002F4  0E00               	movlw	0
  4641  0002F6  0100               	movlb	0	; () banked
  4642  0002F8  21CD               	addwfc	(??_printf+1)& (0+255),w,b
  4643  0002FA  0100               	movlb	0	; () banked
  4644  0002FC  6FE4               	movwf	(printf@exp+1)& (0+255),b
  4645                           
  4646                           ; BSR set to: 0
  4647                           ;doprnt.c: 838: exp--;
  4648  0002FE  0100               	movlb	0	; () banked
  4649  000300  07E3               	decf	printf@exp& (0+255),f,b
  4650  000302  A0D8               	btfss	status,0,c
  4651  000304  07E4               	decf	(printf@exp+1)& (0+255),f,b
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;doprnt.c: 839: exp *= 3;
  4655  000306  C0E3  F01D         	movff	printf@exp,___wmul@multiplier
  4656  00030A  C0E4  F01E         	movff	printf@exp+1,___wmul@multiplier+1
  4657  00030E  0E00               	movlw	0
  4658  000310  6E20               	movwf	___wmul@multiplicand+1,c
  4659  000312  0E03               	movlw	3
  4660  000314  6E1F               	movwf	___wmul@multiplicand,c
  4661  000316  EC68  F018         	call	___wmul	;wreg free
  4662  00031A  C01D  F0E3         	movff	?___wmul,printf@exp
  4663  00031E  C01E  F0E4         	movff	?___wmul+1,printf@exp+1
  4664                           
  4665                           ;doprnt.c: 840: exp /= 10;
  4666  000322  C0E3  F015         	movff	printf@exp,___awdiv@dividend
  4667  000326  C0E4  F016         	movff	printf@exp+1,___awdiv@dividend+1
  4668  00032A  0E00               	movlw	0
  4669  00032C  6E18               	movwf	___awdiv@divisor+1,c
  4670  00032E  0E0A               	movlw	10
  4671  000330  6E17               	movwf	___awdiv@divisor,c
  4672  000332  EC5E  F014         	call	___awdiv	;wreg free
  4673  000336  C015  F0E3         	movff	?___awdiv,printf@exp
  4674  00033A  C016  F0E4         	movff	?___awdiv+1,printf@exp+1
  4675                           
  4676                           ;doprnt.c: 841: if(exp < 0)
  4677  00033E  0100               	movlb	0	; () banked
  4678  000340  AFE4               	btfss	(printf@exp+1)& (0+255),7,b
  4679  000342  D004               	goto	l7823
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;doprnt.c: 842: exp--;
  4683  000344  0100               	movlb	0	; () banked
  4684  000346  07E3               	decf	printf@exp& (0+255),f,b
  4685  000348  A0D8               	btfss	status,0,c
  4686  00034A  07E4               	decf	(printf@exp+1)& (0+255),f,b
  4687  00034C                     l7823:
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  4691  00034C  0100               	movlb	0	; () banked
  4692  00034E  51E3               	movf	printf@exp& (0+255),w,b
  4693  000350  0800               	sublw	0
  4694  000352  EC74  F008         	call	_scale
  4695  000356  C032  F0DB         	movff	?_scale,printf@tmpval
  4696  00035A  C033  F0DC         	movff	?_scale+1,printf@tmpval+1
  4697  00035E  C034  F0DD         	movff	?_scale+2,printf@tmpval+2
  4698                           
  4699                           ;doprnt.c: 847: tmpval.integ *= fval;
  4700  000362  C0DB  F023         	movff	printf@tmpval,___ftmul@f1
  4701  000366  C0DC  F024         	movff	printf@tmpval+1,___ftmul@f1+1
  4702  00036A  C0DD  F025         	movff	printf@tmpval+2,___ftmul@f1+2
  4703  00036E  C0E5  F026         	movff	printf@fval,___ftmul@f2
  4704  000372  C0E6  F027         	movff	printf@fval+1,___ftmul@f2+1
  4705  000376  C0E7  F028         	movff	printf@fval+2,___ftmul@f2+2
  4706  00037A  ECE8  F011         	call	___ftmul	;wreg free
  4707  00037E  C023  F0DB         	movff	?___ftmul,printf@tmpval
  4708  000382  C024  F0DC         	movff	?___ftmul+1,printf@tmpval+1
  4709  000386  C025  F0DD         	movff	?___ftmul+2,printf@tmpval+2
  4710                           
  4711                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  4712  00038A  C0DB  F00F         	movff	printf@tmpval,___ftge@ff1
  4713  00038E  C0DC  F010         	movff	printf@tmpval+1,___ftge@ff1+1
  4714  000392  C0DD  F011         	movff	printf@tmpval+2,___ftge@ff1+2
  4715  000396  0E00               	movlw	0
  4716  000398  6E12               	movwf	___ftge@ff2,c
  4717  00039A  0E80               	movlw	128
  4718  00039C  6E13               	movwf	___ftge@ff2+1,c
  4719  00039E  0E3F               	movlw	63
  4720  0003A0  6E14               	movwf	___ftge@ff2+2,c
  4721  0003A2  ECD2  F013         	call	___ftge	;wreg free
  4722  0003A6  B0D8               	btfsc	status,0,c
  4723  0003A8  D005               	goto	l7831
  4724                           
  4725                           ;doprnt.c: 849: exp--;
  4726  0003AA  0100               	movlb	0	; () banked
  4727  0003AC  07E3               	decf	printf@exp& (0+255),f,b
  4728  0003AE  A0D8               	btfss	status,0,c
  4729  0003B0  07E4               	decf	(printf@exp+1)& (0+255),f,b
  4730  0003B2  D013               	goto	l7835
  4731  0003B4                     l7831:
  4732                           
  4733                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  4734  0003B4  C0DB  F00F         	movff	printf@tmpval,___ftge@ff1
  4735  0003B8  C0DC  F010         	movff	printf@tmpval+1,___ftge@ff1+1
  4736  0003BC  C0DD  F011         	movff	printf@tmpval+2,___ftge@ff1+2
  4737  0003C0  0E00               	movlw	0
  4738  0003C2  6E12               	movwf	___ftge@ff2,c
  4739  0003C4  0E20               	movlw	32
  4740  0003C6  6E13               	movwf	___ftge@ff2+1,c
  4741  0003C8  0E41               	movlw	65
  4742  0003CA  6E14               	movwf	___ftge@ff2+2,c
  4743  0003CC  ECD2  F013         	call	___ftge	;wreg free
  4744  0003D0  A0D8               	btfss	status,0,c
  4745  0003D2  D003               	goto	l7835
  4746                           
  4747                           ;doprnt.c: 851: exp++;
  4748  0003D4  0100               	movlb	0	; () banked
  4749  0003D6  4BE3               	infsnz	printf@exp& (0+255),f,b
  4750  0003D8  2BE4               	incf	(printf@exp+1)& (0+255),f,b
  4751  0003DA                     l7835:
  4752                           
  4753                           ;doprnt.c: 852: }
  4754                           ;doprnt.c: 1112: if(prec <= 12)
  4755  0003DA  0100               	movlb	0	; () banked
  4756  0003DC  BFE9               	btfsc	(printf@prec+1)& (0+255),7,b
  4757  0003DE  D008               	goto	l7837
  4758  0003E0  0100               	movlb	0	; () banked
  4759  0003E2  51E9               	movf	(printf@prec+1)& (0+255),w,b
  4760  0003E4  E11D               	bnz	l7839
  4761  0003E6  0E0D               	movlw	13
  4762  0003E8  0100               	movlb	0	; () banked
  4763  0003EA  5DE8               	subwf	printf@prec& (0+255),w,b
  4764  0003EC  B0D8               	btfsc	status,0,c
  4765  0003EE  D018               	goto	l7839
  4766  0003F0                     l7837:
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;doprnt.c: 1113: fval += fround(prec);
  4770  0003F0  C0E5  F03C         	movff	printf@fval,___ftadd@f1
  4771  0003F4  C0E6  F03D         	movff	printf@fval+1,___ftadd@f1+1
  4772  0003F8  C0E7  F03E         	movff	printf@fval+2,___ftadd@f1+2
  4773  0003FC  0100               	movlb	0	; () banked
  4774  0003FE  51E8               	movf	printf@prec& (0+255),w,b
  4775  000400  EC6F  F00D         	call	_fround
  4776  000404  C032  F03F         	movff	?_fround,___ftadd@f2
  4777  000408  C033  F040         	movff	?_fround+1,___ftadd@f2+1
  4778  00040C  C034  F041         	movff	?_fround+2,___ftadd@f2+2
  4779  000410  EC92  F00E         	call	___ftadd	;wreg free
  4780  000414  C03C  F0E5         	movff	?___ftadd,printf@fval
  4781  000418  C03D  F0E6         	movff	?___ftadd+1,printf@fval+1
  4782  00041C  C03E  F0E7         	movff	?___ftadd+2,printf@fval+2
  4783  000420                     l7839:
  4784                           
  4785                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  4786  000420  0100               	movlb	0	; () banked
  4787  000422  BFE4               	btfsc	(printf@exp+1)& (0+255),7,b
  4788  000424  D008               	goto	l7841
  4789  000426  0100               	movlb	0	; () banked
  4790  000428  51E4               	movf	(printf@exp+1)& (0+255),w,b
  4791  00042A  E126               	bnz	l7847
  4792  00042C  0E0A               	movlw	10
  4793  00042E  0100               	movlb	0	; () banked
  4794  000430  5DE3               	subwf	printf@exp& (0+255),w,b
  4795  000432  B0D8               	btfsc	status,0,c
  4796  000434  D021               	goto	l7847
  4797  000436                     l7841:
  4798                           
  4799                           ; BSR set to: 0
  4800  000436  0100               	movlb	0	; () banked
  4801  000438  51E5               	movf	printf@fval& (0+255),w,b
  4802  00043A  0100               	movlb	0	; () banked
  4803  00043C  11E6               	iorwf	(printf@fval+1)& (0+255),w,b
  4804  00043E  0100               	movlb	0	; () banked
  4805  000440  11E7               	iorwf	(printf@fval+2)& (0+255),w,b
  4806  000442  B4D8               	btfsc	status,2,c
  4807  000444  D05B               	goto	l7861
  4808                           
  4809                           ; BSR set to: 0
  4810  000446  C0E5  F039         	movff	printf@fval,___fttol@f1
  4811  00044A  C0E6  F03A         	movff	printf@fval+1,___fttol@f1+1
  4812  00044E  C0E7  F03B         	movff	printf@fval+2,___fttol@f1+2
  4813  000452  EC5A  F011         	call	___fttol	;wreg free
  4814  000456  5039               	movf	?___fttol,w,c
  4815  000458  103A               	iorwf	?___fttol+1,w,c
  4816  00045A  103B               	iorwf	?___fttol+2,w,c
  4817  00045C  103C               	iorwf	?___fttol+3,w,c
  4818  00045E  A4D8               	btfss	status,2,c
  4819  000460  D04D               	goto	l7861
  4820  000462  0100               	movlb	0	; () banked
  4821  000464  BFE4               	btfsc	(printf@exp+1)& (0+255),7,b
  4822  000466  D04A               	goto	l7861
  4823  000468  0100               	movlb	0	; () banked
  4824  00046A  51E4               	movf	(printf@exp+1)& (0+255),w,b
  4825  00046C  E105               	bnz	l7847
  4826  00046E  0E02               	movlw	2
  4827  000470  0100               	movlb	0	; () banked
  4828  000472  5DE3               	subwf	printf@exp& (0+255),w,b
  4829  000474  A0D8               	btfss	status,0,c
  4830  000476  D042               	goto	l7861
  4831  000478                     l7847:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  4835  000478  C0DB  F00F         	movff	printf@tmpval,___ftge@ff1
  4836  00047C  C0DC  F010         	movff	printf@tmpval+1,___ftge@ff1+1
  4837  000480  C0DD  F011         	movff	printf@tmpval+2,___ftge@ff1+2
  4838  000484  0E70               	movlw	112
  4839  000486  6E12               	movwf	___ftge@ff2,c
  4840  000488  0E89               	movlw	137
  4841  00048A  6E13               	movwf	___ftge@ff2+1,c
  4842  00048C  0E40               	movlw	64
  4843  00048E  6E14               	movwf	___ftge@ff2+2,c
  4844  000490  ECD2  F013         	call	___ftge	;wreg free
  4845  000494  B0D8               	btfsc	status,0,c
  4846  000496  D003               	goto	l7851
  4847                           
  4848                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  4849  000498  0100               	movlb	0	; () banked
  4850  00049A  0EF7               	movlw	247
  4851  00049C  D002               	goto	L4
  4852  00049E                     l7851:
  4853                           
  4854                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4855  00049E  0100               	movlb	0	; () banked
  4856  0004A0  0EF8               	movlw	248
  4857  0004A2                     L4:
  4858  0004A2  27E3               	addwf	printf@exp& (0+255),f,b
  4859  0004A4  0EFF               	movlw	255
  4860  0004A6  23E4               	addwfc	(printf@exp+1)& (0+255),f,b
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;doprnt.c: 1124: }
  4864                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  4865                           
  4866                           ; BSR set to: 0
  4867  0004A8  0100               	movlb	0	; () banked
  4868  0004AA  51E3               	movf	printf@exp& (0+255),w,b
  4869  0004AC  EC74  F008         	call	_scale
  4870  0004B0  C032  F0DB         	movff	?_scale,printf@tmpval
  4871  0004B4  C033  F0DC         	movff	?_scale+1,printf@tmpval+1
  4872  0004B8  C034  F0DD         	movff	?_scale+2,printf@tmpval+2
  4873                           
  4874                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4875  0004BC  C0E5  F00F         	movff	printf@fval,__tdiv_to_l_@f1
  4876  0004C0  C0E6  F010         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  4877  0004C4  C0E7  F011         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  4878  0004C8  C0DB  F012         	movff	printf@tmpval,__tdiv_to_l_@f2
  4879  0004CC  C0DC  F013         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  4880  0004D0  C0DD  F014         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  4881  0004D4  EC9D  F00F         	call	__tdiv_to_l_	;wreg free
  4882  0004D8  C00F  F0DF         	movff	?__tdiv_to_l_,printf@val
  4883  0004DC  C010  F0E0         	movff	?__tdiv_to_l_+1,printf@val+1
  4884  0004E0  C011  F0E1         	movff	?__tdiv_to_l_+2,printf@val+2
  4885  0004E4  C012  F0E2         	movff	?__tdiv_to_l_+3,printf@val+3
  4886                           
  4887                           ;doprnt.c: 1129: fval = 0.0;
  4888  0004E8  0E00               	movlw	0
  4889  0004EA  0100               	movlb	0	; () banked
  4890  0004EC  6FE5               	movwf	printf@fval& (0+255),b
  4891  0004EE  0E00               	movlw	0
  4892  0004F0  0100               	movlb	0	; () banked
  4893  0004F2  6FE6               	movwf	(printf@fval+1)& (0+255),b
  4894  0004F4  0E00               	movlw	0
  4895  0004F6  0100               	movlb	0	; () banked
  4896  0004F8  6FE7               	movwf	(printf@fval+2)& (0+255),b
  4897                           
  4898                           ;doprnt.c: 1130: } else {
  4899  0004FA  D033               	goto	l7865
  4900  0004FC                     l7861:
  4901                           
  4902                           ;doprnt.c: 1131: val = (unsigned long)fval;
  4903  0004FC  C0E5  F039         	movff	printf@fval,___fttol@f1
  4904  000500  C0E6  F03A         	movff	printf@fval+1,___fttol@f1+1
  4905  000504  C0E7  F03B         	movff	printf@fval+2,___fttol@f1+2
  4906  000508  EC5A  F011         	call	___fttol	;wreg free
  4907  00050C  C039  F0DF         	movff	?___fttol,printf@val
  4908  000510  C03A  F0E0         	movff	?___fttol+1,printf@val+1
  4909  000514  C03B  F0E1         	movff	?___fttol+2,printf@val+2
  4910  000518  C03C  F0E2         	movff	?___fttol+3,printf@val+3
  4911                           
  4912                           ;doprnt.c: 1132: fval -= (double)val;
  4913  00051C  C0E5  F0BF         	movff	printf@fval,___ftsub@f1
  4914  000520  C0E6  F0C0         	movff	printf@fval+1,___ftsub@f1+1
  4915  000524  C0E7  F0C1         	movff	printf@fval+2,___ftsub@f1+2
  4916  000528  C0DF  F017         	movff	printf@val,___lltoft@c
  4917  00052C  C0E0  F018         	movff	printf@val+1,___lltoft@c+1
  4918  000530  C0E1  F019         	movff	printf@val+2,___lltoft@c+2
  4919  000534  C0E2  F01A         	movff	printf@val+3,___lltoft@c+3
  4920  000538  EC79  F016         	call	___lltoft	;wreg free
  4921  00053C  C017  F0C2         	movff	?___lltoft,___ftsub@f2
  4922  000540  C018  F0C3         	movff	?___lltoft+1,___ftsub@f2+1
  4923  000544  C019  F0C4         	movff	?___lltoft+2,___ftsub@f2+2
  4924  000548  ECA7  F016         	call	___ftsub	;wreg free
  4925  00054C  C0BF  F0E5         	movff	?___ftsub,printf@fval
  4926  000550  C0C0  F0E6         	movff	?___ftsub+1,printf@fval+1
  4927  000554  C0C1  F0E7         	movff	?___ftsub+2,printf@fval+2
  4928                           
  4929                           ;doprnt.c: 1133: exp = 0;
  4930  000558  0E00               	movlw	0
  4931  00055A  0100               	movlb	0	; () banked
  4932  00055C  6FE4               	movwf	(printf@exp+1)& (0+255),b
  4933  00055E  0E00               	movlw	0
  4934  000560  6FE3               	movwf	printf@exp& (0+255),b
  4935  000562                     l7865:
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;doprnt.c: 1134: }
  4939                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  4940  000562  0E01               	movlw	1
  4941  000564  0100               	movlb	0	; () banked
  4942  000566  6FEA               	movwf	printf@c& (0+255),b
  4943  000568                     l7867:
  4944                           
  4945                           ; BSR set to: 0
  4946  000568  0E0A               	movlw	10
  4947  00056A  0100               	movlb	0	; () banked
  4948  00056C  19EA               	xorwf	printf@c& (0+255),w,b
  4949  00056E  B4D8               	btfsc	status,2,c
  4950  000570  D01E               	goto	l7879
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;doprnt.c: 1137: if(val < dpowers[c])
  4954                           
  4955                           ; BSR set to: 0
  4956                           
  4957                           ; BSR set to: 0
  4958  000572  0100               	movlb	0	; () banked
  4959  000574  51EA               	movf	printf@c& (0+255),w,b
  4960  000576  0D04               	mullw	4
  4961  000578  0E31               	movlw	low _dpowers
  4962  00057A  24F3               	addwf	prodl,w,c
  4963  00057C  6EF6               	movwf	tblptrl,c
  4964  00057E  0E7F               	movlw	high _dpowers
  4965  000580  20F4               	addwfc	prodh,w,c
  4966  000582  6EF7               	movwf	tblptrh,c
  4967  000584                     	if	0	;There are less than 3 active tblptr bytes
  4968  000584                     	endif
  4969  000584  0009               	tblrd		*+
  4970  000586  50F5               	movf	tablat,w,c
  4971  000588  0100               	movlb	0	; () banked
  4972  00058A  5DDF               	subwf	printf@val& (0+255),w,b
  4973  00058C  0009               	tblrd		*+
  4974  00058E  50F5               	movf	tablat,w,c
  4975  000590  0100               	movlb	0	; () banked
  4976  000592  59E0               	subwfb	(printf@val+1)& (0+255),w,b
  4977  000594  0009               	tblrd		*+
  4978  000596  50F5               	movf	tablat,w,c
  4979  000598  0100               	movlb	0	; () banked
  4980  00059A  59E1               	subwfb	(printf@val+2)& (0+255),w,b
  4981  00059C  0009               	tblrd		*+
  4982  00059E  50F5               	movf	tablat,w,c
  4983  0005A0  0100               	movlb	0	; () banked
  4984  0005A2  59E2               	subwfb	(printf@val+3)& (0+255),w,b
  4985  0005A4  A0D8               	btfss	status,0,c
  4986  0005A6  D003               	goto	l7879
  4987                           
  4988                           ; BSR set to: 0
  4989                           
  4990                           ; BSR set to: 0
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;doprnt.c: 1138: break;
  4994  0005A8  0100               	movlb	0	; () banked
  4995  0005AA  2BEA               	incf	printf@c& (0+255),f,b
  4996  0005AC  D7DD               	goto	l7867
  4997  0005AE                     l7879:
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;doprnt.c: 1142: width -= prec + c + exp;
  5001  0005AE  C0EA  F0CC         	movff	printf@c,??_printf
  5002  0005B2  0100               	movlb	0	; () banked
  5003  0005B4  6BCD               	clrf	(??_printf+1)& (0+255),b
  5004  0005B6  BFCC               	btfsc	??_printf& (0+255),7,b
  5005  0005B8  07CD               	decf	(??_printf+1)& (0+255),f,b
  5006  0005BA  0100               	movlb	0	; () banked
  5007  0005BC  51E8               	movf	printf@prec& (0+255),w,b
  5008  0005BE  0100               	movlb	0	; () banked
  5009  0005C0  27CC               	addwf	??_printf& (0+255),f,b
  5010  0005C2  0100               	movlb	0	; () banked
  5011  0005C4  51E9               	movf	(printf@prec+1)& (0+255),w,b
  5012  0005C6  0100               	movlb	0	; () banked
  5013  0005C8  23CD               	addwfc	(??_printf+1)& (0+255),f,b
  5014  0005CA  0100               	movlb	0	; () banked
  5015  0005CC  51E3               	movf	printf@exp& (0+255),w,b
  5016  0005CE  0100               	movlb	0	; () banked
  5017  0005D0  27CC               	addwf	??_printf& (0+255),f,b
  5018  0005D2  0100               	movlb	0	; () banked
  5019  0005D4  51E4               	movf	(printf@exp+1)& (0+255),w,b
  5020  0005D6  0100               	movlb	0	; () banked
  5021  0005D8  23CD               	addwfc	(??_printf+1)& (0+255),f,b
  5022  0005DA  0100               	movlb	0	; () banked
  5023  0005DC  51CC               	movf	??_printf& (0+255),w,b
  5024  0005DE  0100               	movlb	0	; () banked
  5025  0005E0  5FD9               	subwf	printf@width& (0+255),f,b
  5026  0005E2  0100               	movlb	0	; () banked
  5027  0005E4  51CD               	movf	(??_printf+1)& (0+255),w,b
  5028  0005E6  0100               	movlb	0	; () banked
  5029  0005E8  5BDA               	subwfb	(printf@width+1)& (0+255),f,b
  5030                           
  5031                           ;doprnt.c: 1143: if(
  5032                           ;doprnt.c: 1147: prec)
  5033  0005EA  0100               	movlb	0	; () banked
  5034  0005EC  51E8               	movf	printf@prec& (0+255),w,b
  5035  0005EE  0100               	movlb	0	; () banked
  5036  0005F0  11E9               	iorwf	(printf@prec+1)& (0+255),w,b
  5037  0005F2  B4D8               	btfsc	status,2,c
  5038  0005F4  D004               	goto	l7883
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;doprnt.c: 1148: width--;
  5042  0005F6  0100               	movlb	0	; () banked
  5043  0005F8  07D9               	decf	printf@width& (0+255),f,b
  5044  0005FA  A0D8               	btfss	status,0,c
  5045  0005FC  07DA               	decf	(printf@width+1)& (0+255),f,b
  5046  0005FE                     l7883:
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;doprnt.c: 1149: if(flag & 0x03)
  5050  0005FE  0E03               	movlw	3
  5051  000600  0100               	movlb	0	; () banked
  5052  000602  15D7               	andwf	printf@flag& (0+255),w,b
  5053  000604  0100               	movlb	0	; () banked
  5054  000606  6FCC               	movwf	??_printf& (0+255),b
  5055  000608  0E00               	movlw	0
  5056  00060A  0100               	movlb	0	; () banked
  5057  00060C  15D8               	andwf	(printf@flag+1)& (0+255),w,b
  5058  00060E  0100               	movlb	0	; () banked
  5059  000610  6FCD               	movwf	(??_printf+1)& (0+255),b
  5060  000612  0100               	movlb	0	; () banked
  5061  000614  51CC               	movf	??_printf& (0+255),w,b
  5062  000616  0100               	movlb	0	; () banked
  5063  000618  11CD               	iorwf	(??_printf+1)& (0+255),w,b
  5064  00061A  B4D8               	btfsc	status,2,c
  5065  00061C  D008               	goto	l7891
  5066  00061E  D003               	goto	l7889
  5067  000620                     l7887:
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;doprnt.c: 1181: (putch(' ') );
  5071  000620  0E20               	movlw	32
  5072  000622  EC00  F019         	call	_putch
  5073  000626                     l7889:
  5074                           
  5075                           ;doprnt.c: 1182: width--;
  5076  000626  0100               	movlb	0	; () banked
  5077  000628  07D9               	decf	printf@width& (0+255),f,b
  5078  00062A  A0D8               	btfss	status,0,c
  5079  00062C  07DA               	decf	(printf@width+1)& (0+255),f,b
  5080  00062E                     l7891:
  5081                           
  5082                           ; BSR set to: 0
  5083  00062E  0100               	movlb	0	; () banked
  5084  000630  BFDA               	btfsc	(printf@width+1)& (0+255),7,b
  5085  000632  D007               	goto	l7893
  5086  000634  0100               	movlb	0	; () banked
  5087  000636  51DA               	movf	(printf@width+1)& (0+255),w,b
  5088  000638  E1F3               	bnz	l7887
  5089  00063A  0100               	movlb	0	; () banked
  5090  00063C  05D9               	decf	printf@width& (0+255),w,b
  5091  00063E  B0D8               	btfsc	status,0,c
  5092  000640  D7EF               	goto	l7887
  5093  000642                     l7893:
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;doprnt.c: 1183: }
  5097                           ;doprnt.c: 1188: if(flag & 0x03)
  5098  000642  0E03               	movlw	3
  5099  000644  0100               	movlb	0	; () banked
  5100  000646  15D7               	andwf	printf@flag& (0+255),w,b
  5101  000648  0100               	movlb	0	; () banked
  5102  00064A  6FCC               	movwf	??_printf& (0+255),b
  5103  00064C  0E00               	movlw	0
  5104  00064E  0100               	movlb	0	; () banked
  5105  000650  15D8               	andwf	(printf@flag+1)& (0+255),w,b
  5106  000652  0100               	movlb	0	; () banked
  5107  000654  6FCD               	movwf	(??_printf+1)& (0+255),b
  5108  000656  0100               	movlb	0	; () banked
  5109  000658  51CC               	movf	??_printf& (0+255),w,b
  5110  00065A  0100               	movlb	0	; () banked
  5111  00065C  11CD               	iorwf	(??_printf+1)& (0+255),w,b
  5112  00065E  B4D8               	btfsc	status,2,c
  5113  000660  D04A               	goto	l7903
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;doprnt.c: 1190: (putch('-') );
  5117  000662  0E2D               	movlw	45
  5118  000664  EC00  F019         	call	_putch
  5119                           
  5120                           ;doprnt.c: 1195: }
  5121                           ;doprnt.c: 1196: while(c--) {
  5122  000668  D046               	goto	l7903
  5123  00066A                     l7897:
  5124                           
  5125                           ;doprnt.c: 1200: {
  5126                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  5127  00066A  C0DF  F00F         	movff	printf@val,___lldiv@dividend
  5128  00066E  C0E0  F010         	movff	printf@val+1,___lldiv@dividend+1
  5129  000672  C0E1  F011         	movff	printf@val+2,___lldiv@dividend+2
  5130  000676  C0E2  F012         	movff	printf@val+3,___lldiv@dividend+3
  5131  00067A  0100               	movlb	0	; () banked
  5132  00067C  51EA               	movf	printf@c& (0+255),w,b
  5133  00067E  0D04               	mullw	4
  5134  000680  0E31               	movlw	low _dpowers
  5135  000682  24F3               	addwf	prodl,w,c
  5136  000684  6EF6               	movwf	tblptrl,c
  5137  000686  0E7F               	movlw	high _dpowers
  5138  000688  20F4               	addwfc	prodh,w,c
  5139  00068A  6EF7               	movwf	tblptrh,c
  5140  00068C                     	if	0	;There are less than 3 active tblptr bytes
  5141  00068C                     	endif
  5142  00068C  0009               	tblrd		*+
  5143  00068E  CFF5 F013          	movff	tablat,___lldiv@divisor
  5144  000692  0009               	tblrd		*+
  5145  000694  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  5146  000698  0009               	tblrd		*+
  5147  00069A  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  5148  00069E  000A               	tblrd		*-
  5149  0006A0  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  5150  0006A4  ECA0  F014         	call	___lldiv	;wreg free
  5151  0006A8  C00F  F0DB         	movff	?___lldiv,printf@tmpval
  5152  0006AC  C010  F0DC         	movff	?___lldiv+1,printf@tmpval+1
  5153  0006B0  C011  F0DD         	movff	?___lldiv+2,printf@tmpval+2
  5154  0006B4  C012  F0DE         	movff	?___lldiv+3,printf@tmpval+3
  5155                           
  5156                           ;doprnt.c: 1202: tmpval.vd %= 10;
  5157  0006B8  C0DB  F01C         	movff	printf@tmpval,___llmod@dividend
  5158  0006BC  C0DC  F01D         	movff	printf@tmpval+1,___llmod@dividend+1
  5159  0006C0  C0DD  F01E         	movff	printf@tmpval+2,___llmod@dividend+2
  5160  0006C4  C0DE  F01F         	movff	printf@tmpval+3,___llmod@dividend+3
  5161  0006C8  0E0A               	movlw	10
  5162  0006CA  6E20               	movwf	___llmod@divisor,c
  5163  0006CC  0E00               	movlw	0
  5164  0006CE  6E21               	movwf	___llmod@divisor+1,c
  5165  0006D0  0E00               	movlw	0
  5166  0006D2  6E22               	movwf	___llmod@divisor+2,c
  5167  0006D4  0E00               	movlw	0
  5168  0006D6  6E23               	movwf	___llmod@divisor+3,c
  5169  0006D8  EC46  F016         	call	___llmod	;wreg free
  5170  0006DC  C01C  F0DB         	movff	?___llmod,printf@tmpval
  5171  0006E0  C01D  F0DC         	movff	?___llmod+1,printf@tmpval+1
  5172  0006E4  C01E  F0DD         	movff	?___llmod+2,printf@tmpval+2
  5173  0006E8  C01F  F0DE         	movff	?___llmod+3,printf@tmpval+3
  5174                           
  5175                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  5176  0006EC  0100               	movlb	0	; () banked
  5177  0006EE  51DB               	movf	printf@tmpval& (0+255),w,b
  5178  0006F0  0F30               	addlw	48
  5179  0006F2  EC00  F019         	call	_putch
  5180  0006F6                     l7903:
  5181  0006F6  0100               	movlb	0	; () banked
  5182  0006F8  07EA               	decf	printf@c& (0+255),f,b
  5183  0006FA  0100               	movlb	0	; () banked
  5184  0006FC  29EA               	incf	printf@c& (0+255),w,b
  5185  0006FE  B4D8               	btfsc	status,2,c
  5186  000700  D008               	goto	l7909
  5187  000702  D7B3               	goto	l7897
  5188  000704                     l7905:
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;doprnt.c: 1208: (putch('0') );
  5192  000704  0E30               	movlw	48
  5193  000706  EC00  F019         	call	_putch
  5194                           
  5195                           ;doprnt.c: 1209: exp--;
  5196  00070A  0100               	movlb	0	; () banked
  5197  00070C  07E3               	decf	printf@exp& (0+255),f,b
  5198  00070E  A0D8               	btfss	status,0,c
  5199  000710  07E4               	decf	(printf@exp+1)& (0+255),f,b
  5200  000712                     l7909:
  5201                           
  5202                           ; BSR set to: 0
  5203  000712  0100               	movlb	0	; () banked
  5204  000714  BFE4               	btfsc	(printf@exp+1)& (0+255),7,b
  5205  000716  D007               	goto	l7911
  5206  000718  0100               	movlb	0	; () banked
  5207  00071A  51E4               	movf	(printf@exp+1)& (0+255),w,b
  5208  00071C  E1F3               	bnz	l7905
  5209  00071E  0100               	movlb	0	; () banked
  5210  000720  05E3               	decf	printf@exp& (0+255),w,b
  5211  000722  B0D8               	btfsc	status,0,c
  5212  000724  D7EF               	goto	l7905
  5213  000726                     l7911:
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;doprnt.c: 1210: }
  5217                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  5218  000726  0100               	movlb	0	; () banked
  5219  000728  BFE9               	btfsc	(printf@prec+1)& (0+255),7,b
  5220  00072A  D00C               	goto	l1060
  5221  00072C  0100               	movlb	0	; () banked
  5222  00072E  51E9               	movf	(printf@prec+1)& (0+255),w,b
  5223  000730  E105               	bnz	u8240
  5224  000732  0E09               	movlw	9
  5225  000734  0100               	movlb	0	; () banked
  5226  000736  5DE8               	subwf	printf@prec& (0+255),w,b
  5227  000738  A0D8               	btfss	status,0,c
  5228  00073A  D004               	goto	l1060
  5229  00073C                     u8240:
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5233  00073C  0E08               	movlw	8
  5234  00073E  0100               	movlb	0	; () banked
  5235  000740  6FEA               	movwf	printf@c& (0+255),b
  5236  000742  D002               	goto	l7915
  5237  000744                     l1060:
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;doprnt.c: 1213: else
  5241                           ;doprnt.c: 1214: c = prec;
  5242  000744  C0E8  F0EA         	movff	printf@prec,printf@c
  5243  000748                     l7915:
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;doprnt.c: 1215: prec -= c;
  5247  000748  0100               	movlb	0	; () banked
  5248  00074A  51EA               	movf	printf@c& (0+255),w,b
  5249  00074C  0100               	movlb	0	; () banked
  5250  00074E  5FE8               	subwf	printf@prec& (0+255),f,b
  5251  000750  0E00               	movlw	0
  5252  000752  0100               	movlb	0	; () banked
  5253  000754  BFEA               	btfsc	printf@c& (0+255),7,b
  5254  000756  0EFF               	movlw	255
  5255  000758  0100               	movlb	0	; () banked
  5256  00075A  5BE9               	subwfb	(printf@prec+1)& (0+255),f,b
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;doprnt.c: 1219: if(c)
  5260  00075C  0100               	movlb	0	; () banked
  5261  00075E  51EA               	movf	printf@c& (0+255),w,b
  5262  000760  0100               	movlb	0	; () banked
  5263  000762  B4D8               	btfsc	status,2,c
  5264  000764  D003               	goto	l7921
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;doprnt.c: 1221: (putch('.') );
  5268  000766  0E2E               	movlw	46
  5269  000768  EC00  F019         	call	_putch
  5270  00076C                     l7921:
  5271                           
  5272                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5273  00076C  0100               	movlb	0	; () banked
  5274  00076E  51EA               	movf	printf@c& (0+255),w,b
  5275  000770  EC74  F008         	call	_scale
  5276  000774  C032  F0D2         	movff	?_scale,_printf$2837
  5277  000778  C033  F0D3         	movff	?_scale+1,_printf$2837+1
  5278  00077C  C034  F0D4         	movff	?_scale+2,_printf$2837+2
  5279                           
  5280                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5281  000780  C0E5  F026         	movff	printf@fval,___ftmul@f2
  5282  000784  C0E6  F027         	movff	printf@fval+1,___ftmul@f2+1
  5283  000788  C0E7  F028         	movff	printf@fval+2,___ftmul@f2+2
  5284  00078C  C0D2  F023         	movff	_printf$2837,___ftmul@f1
  5285  000790  C0D3  F024         	movff	_printf$2837+1,___ftmul@f1+1
  5286  000794  C0D4  F025         	movff	_printf$2837+2,___ftmul@f1+2
  5287  000798  ECE8  F011         	call	___ftmul	;wreg free
  5288  00079C  C023  F039         	movff	?___ftmul,___fttol@f1
  5289  0007A0  C024  F03A         	movff	?___ftmul+1,___fttol@f1+1
  5290  0007A4  C025  F03B         	movff	?___ftmul+2,___fttol@f1+2
  5291  0007A8  EC5A  F011         	call	___fttol	;wreg free
  5292  0007AC  C039  F0DF         	movff	?___fttol,printf@val
  5293  0007B0  C03A  F0E0         	movff	?___fttol+1,printf@val+1
  5294  0007B4  C03B  F0E1         	movff	?___fttol+2,printf@val+2
  5295  0007B8  C03C  F0E2         	movff	?___fttol+3,printf@val+3
  5296                           
  5297                           ;doprnt.c: 1228: while(c--) {
  5298  0007BC  D06D               	goto	l7933
  5299  0007BE                     l7925:
  5300                           
  5301                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  5302  0007BE  C0DF  F00F         	movff	printf@val,___lldiv@dividend
  5303  0007C2  C0E0  F010         	movff	printf@val+1,___lldiv@dividend+1
  5304  0007C6  C0E1  F011         	movff	printf@val+2,___lldiv@dividend+2
  5305  0007CA  C0E2  F012         	movff	printf@val+3,___lldiv@dividend+3
  5306  0007CE  0100               	movlb	0	; () banked
  5307  0007D0  51EA               	movf	printf@c& (0+255),w,b
  5308  0007D2  0D04               	mullw	4
  5309  0007D4  0E31               	movlw	low _dpowers
  5310  0007D6  24F3               	addwf	prodl,w,c
  5311  0007D8  6EF6               	movwf	tblptrl,c
  5312  0007DA  0E7F               	movlw	high _dpowers
  5313  0007DC  20F4               	addwfc	prodh,w,c
  5314  0007DE  6EF7               	movwf	tblptrh,c
  5315  0007E0                     	if	0	;There are less than 3 active tblptr bytes
  5316  0007E0                     	endif
  5317  0007E0  0009               	tblrd		*+
  5318  0007E2  CFF5 F013          	movff	tablat,___lldiv@divisor
  5319  0007E6  0009               	tblrd		*+
  5320  0007E8  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  5321  0007EC  0009               	tblrd		*+
  5322  0007EE  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  5323  0007F2  000A               	tblrd		*-
  5324  0007F4  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  5325  0007F8  ECA0  F014         	call	___lldiv	;wreg free
  5326  0007FC  C00F  F0DB         	movff	?___lldiv,printf@tmpval
  5327  000800  C010  F0DC         	movff	?___lldiv+1,printf@tmpval+1
  5328  000804  C011  F0DD         	movff	?___lldiv+2,printf@tmpval+2
  5329  000808  C012  F0DE         	movff	?___lldiv+3,printf@tmpval+3
  5330                           
  5331                           ;doprnt.c: 1230: tmpval.vd %= 10;
  5332  00080C  C0DB  F01C         	movff	printf@tmpval,___llmod@dividend
  5333  000810  C0DC  F01D         	movff	printf@tmpval+1,___llmod@dividend+1
  5334  000814  C0DD  F01E         	movff	printf@tmpval+2,___llmod@dividend+2
  5335  000818  C0DE  F01F         	movff	printf@tmpval+3,___llmod@dividend+3
  5336  00081C  0E0A               	movlw	10
  5337  00081E  6E20               	movwf	___llmod@divisor,c
  5338  000820  0E00               	movlw	0
  5339  000822  6E21               	movwf	___llmod@divisor+1,c
  5340  000824  0E00               	movlw	0
  5341  000826  6E22               	movwf	___llmod@divisor+2,c
  5342  000828  0E00               	movlw	0
  5343  00082A  6E23               	movwf	___llmod@divisor+3,c
  5344  00082C  EC46  F016         	call	___llmod	;wreg free
  5345  000830  C01C  F0DB         	movff	?___llmod,printf@tmpval
  5346  000834  C01D  F0DC         	movff	?___llmod+1,printf@tmpval+1
  5347  000838  C01E  F0DD         	movff	?___llmod+2,printf@tmpval+2
  5348  00083C  C01F  F0DE         	movff	?___llmod+3,printf@tmpval+3
  5349                           
  5350                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  5351  000840  0100               	movlb	0	; () banked
  5352  000842  51DB               	movf	printf@tmpval& (0+255),w,b
  5353  000844  0F30               	addlw	48
  5354  000846  EC00  F019         	call	_putch
  5355                           
  5356                           ;doprnt.c: 1232: val %= dpowers[c];
  5357  00084A  C0DF  F01C         	movff	printf@val,___llmod@dividend
  5358  00084E  C0E0  F01D         	movff	printf@val+1,___llmod@dividend+1
  5359  000852  C0E1  F01E         	movff	printf@val+2,___llmod@dividend+2
  5360  000856  C0E2  F01F         	movff	printf@val+3,___llmod@dividend+3
  5361  00085A  0100               	movlb	0	; () banked
  5362  00085C  51EA               	movf	printf@c& (0+255),w,b
  5363  00085E  0D04               	mullw	4
  5364  000860  0E31               	movlw	low _dpowers
  5365  000862  24F3               	addwf	prodl,w,c
  5366  000864  6EF6               	movwf	tblptrl,c
  5367  000866  0E7F               	movlw	high _dpowers
  5368  000868  20F4               	addwfc	prodh,w,c
  5369  00086A  6EF7               	movwf	tblptrh,c
  5370  00086C                     	if	0	;There are less than 3 active tblptr bytes
  5371  00086C                     	endif
  5372  00086C  0009               	tblrd		*+
  5373  00086E  CFF5 F020          	movff	tablat,___llmod@divisor
  5374  000872  0009               	tblrd		*+
  5375  000874  CFF5 F021          	movff	tablat,___llmod@divisor+1
  5376  000878  0009               	tblrd		*+
  5377  00087A  CFF5 F022          	movff	tablat,___llmod@divisor+2
  5378  00087E  000A               	tblrd		*-
  5379  000880  CFF5 F023          	movff	tablat,___llmod@divisor+3
  5380  000884  EC46  F016         	call	___llmod	;wreg free
  5381  000888  C01C  F0DF         	movff	?___llmod,printf@val
  5382  00088C  C01D  F0E0         	movff	?___llmod+1,printf@val+1
  5383  000890  C01E  F0E1         	movff	?___llmod+2,printf@val+2
  5384  000894  C01F  F0E2         	movff	?___llmod+3,printf@val+3
  5385  000898                     l7933:
  5386  000898  0100               	movlb	0	; () banked
  5387  00089A  07EA               	decf	printf@c& (0+255),f,b
  5388  00089C  0100               	movlb	0	; () banked
  5389  00089E  29EA               	incf	printf@c& (0+255),w,b
  5390  0008A0  B4D8               	btfsc	status,2,c
  5391  0008A2  D008               	goto	l7939
  5392  0008A4  D78C               	goto	l7925
  5393  0008A6                     l7935:
  5394                           
  5395                           ; BSR set to: 0
  5396                           ;doprnt.c: 1236: (putch('0') );
  5397  0008A6  0E30               	movlw	48
  5398  0008A8  EC00  F019         	call	_putch
  5399                           
  5400                           ;doprnt.c: 1237: prec--;
  5401  0008AC  0100               	movlb	0	; () banked
  5402  0008AE  07E8               	decf	printf@prec& (0+255),f,b
  5403  0008B0  A0D8               	btfss	status,0,c
  5404  0008B2  07E9               	decf	(printf@prec+1)& (0+255),f,b
  5405  0008B4                     l7939:
  5406                           
  5407                           ; BSR set to: 0
  5408  0008B4  0100               	movlb	0	; () banked
  5409  0008B6  51E8               	movf	printf@prec& (0+255),w,b
  5410  0008B8  0100               	movlb	0	; () banked
  5411  0008BA  11E9               	iorwf	(printf@prec+1)& (0+255),w,b
  5412  0008BC  B4D8               	btfsc	status,2,c
  5413  0008BE  D159               	goto	l8015
  5414  0008C0  D7F2               	goto	l7935
  5415  0008C2                     l7941:
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;doprnt.c: 1246: }
  5419                           ;doprnt.c: 1253: {
  5420                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  5421  0008C2  C0D5  FFD9         	movff	printf@ap,fsr2l
  5422  0008C6  C0D6  FFDA         	movff	printf@ap+1,fsr2h
  5423  0008CA  CFDE F0DF          	movff	postinc2,printf@val
  5424  0008CE  CFDD F0E0          	movff	postdec2,printf@val+1
  5425  0008D2  0100               	movlb	0	; () banked
  5426  0008D4  0E00               	movlw	0
  5427  0008D6  BFE0               	btfsc	(printf@val+1)& (0+255),7,b
  5428  0008D8  0EFF               	movlw	-1
  5429  0008DA  6FE1               	movwf	(printf@val+2)& (0+255),b
  5430  0008DC  6FE2               	movwf	(printf@val+3)& (0+255),b
  5431                           
  5432                           ; BSR set to: 0
  5433  0008DE  0E02               	movlw	2
  5434  0008E0  0100               	movlb	0	; () banked
  5435  0008E2  27D5               	addwf	printf@ap& (0+255),f,b
  5436  0008E4  0E00               	movlw	0
  5437  0008E6  23D6               	addwfc	(printf@ap+1)& (0+255),f,b
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;doprnt.c: 1261: if((long)val < 0) {
  5441  0008E8  0100               	movlb	0	; () banked
  5442  0008EA  AFE2               	btfss	(printf@val+3)& (0+255),7,b
  5443  0008EC  D00C               	goto	l7951
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;doprnt.c: 1262: flag |= 0x03;
  5447  0008EE  0E03               	movlw	3
  5448  0008F0  0100               	movlb	0	; () banked
  5449  0008F2  13D7               	iorwf	printf@flag& (0+255),f,b
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;doprnt.c: 1263: val = -val;
  5453  0008F4  0100               	movlb	0	; () banked
  5454  0008F6  1FE2               	comf	(printf@val+3)& (0+255),f,b
  5455  0008F8  1FE1               	comf	(printf@val+2)& (0+255),f,b
  5456  0008FA  1FE0               	comf	(printf@val+1)& (0+255),f,b
  5457  0008FC  6DDF               	negf	printf@val& (0+255),b
  5458  0008FE  0E00               	movlw	0
  5459  000900  23E0               	addwfc	(printf@val+1)& (0+255),f,b
  5460  000902  23E1               	addwfc	(printf@val+2)& (0+255),f,b
  5461  000904  23E2               	addwfc	(printf@val+3)& (0+255),f,b
  5462  000906                     l7951:
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;doprnt.c: 1264: }
  5466                           ;doprnt.c: 1266: }
  5467                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  5468  000906  0100               	movlb	0	; () banked
  5469  000908  51E8               	movf	printf@prec& (0+255),w,b
  5470  00090A  0100               	movlb	0	; () banked
  5471  00090C  11E9               	iorwf	(printf@prec+1)& (0+255),w,b
  5472  00090E  A4D8               	btfss	status,2,c
  5473  000910  D00D               	goto	l7957
  5474                           
  5475                           ; BSR set to: 0
  5476  000912  0100               	movlb	0	; () banked
  5477  000914  51DF               	movf	printf@val& (0+255),w,b
  5478  000916  0100               	movlb	0	; () banked
  5479  000918  11E0               	iorwf	(printf@val+1)& (0+255),w,b
  5480  00091A  0100               	movlb	0	; () banked
  5481  00091C  11E1               	iorwf	(printf@val+2)& (0+255),w,b
  5482  00091E  0100               	movlb	0	; () banked
  5483  000920  11E2               	iorwf	(printf@val+3)& (0+255),w,b
  5484  000922  A4D8               	btfss	status,2,c
  5485  000924  D003               	goto	l7957
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;doprnt.c: 1291: prec++;
  5489  000926  0100               	movlb	0	; () banked
  5490  000928  4BE8               	infsnz	printf@prec& (0+255),f,b
  5491  00092A  2BE9               	incf	(printf@prec+1)& (0+255),f,b
  5492  00092C                     l7957:
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5496  00092C  0E01               	movlw	1
  5497  00092E  0100               	movlb	0	; () banked
  5498  000930  6FEA               	movwf	printf@c& (0+255),b
  5499  000932                     l7959:
  5500                           
  5501                           ; BSR set to: 0
  5502  000932  0E0A               	movlw	10
  5503  000934  0100               	movlb	0	; () banked
  5504  000936  19EA               	xorwf	printf@c& (0+255),w,b
  5505  000938  B4D8               	btfsc	status,2,c
  5506  00093A  D01E               	goto	l7971
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;doprnt.c: 1306: if(val < dpowers[c])
  5510                           
  5511                           ; BSR set to: 0
  5512                           
  5513                           ; BSR set to: 0
  5514  00093C  0100               	movlb	0	; () banked
  5515  00093E  51EA               	movf	printf@c& (0+255),w,b
  5516  000940  0D04               	mullw	4
  5517  000942  0E31               	movlw	low _dpowers
  5518  000944  24F3               	addwf	prodl,w,c
  5519  000946  6EF6               	movwf	tblptrl,c
  5520  000948  0E7F               	movlw	high _dpowers
  5521  00094A  20F4               	addwfc	prodh,w,c
  5522  00094C  6EF7               	movwf	tblptrh,c
  5523  00094E                     	if	0	;There are less than 3 active tblptr bytes
  5524  00094E                     	endif
  5525  00094E  0009               	tblrd		*+
  5526  000950  50F5               	movf	tablat,w,c
  5527  000952  0100               	movlb	0	; () banked
  5528  000954  5DDF               	subwf	printf@val& (0+255),w,b
  5529  000956  0009               	tblrd		*+
  5530  000958  50F5               	movf	tablat,w,c
  5531  00095A  0100               	movlb	0	; () banked
  5532  00095C  59E0               	subwfb	(printf@val+1)& (0+255),w,b
  5533  00095E  0009               	tblrd		*+
  5534  000960  50F5               	movf	tablat,w,c
  5535  000962  0100               	movlb	0	; () banked
  5536  000964  59E1               	subwfb	(printf@val+2)& (0+255),w,b
  5537  000966  0009               	tblrd		*+
  5538  000968  50F5               	movf	tablat,w,c
  5539  00096A  0100               	movlb	0	; () banked
  5540  00096C  59E2               	subwfb	(printf@val+3)& (0+255),w,b
  5541  00096E  A0D8               	btfss	status,0,c
  5542  000970  D003               	goto	l7971
  5543                           
  5544                           ; BSR set to: 0
  5545                           
  5546                           ; BSR set to: 0
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;doprnt.c: 1307: break;
  5550  000972  0100               	movlb	0	; () banked
  5551  000974  2BEA               	incf	printf@c& (0+255),f,b
  5552  000976  D7DD               	goto	l7959
  5553  000978                     l7971:
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;doprnt.c: 1339: if(c < prec)
  5557  000978  0E80               	movlw	128
  5558  00097A  0100               	movlb	0	; () banked
  5559  00097C  BFEA               	btfsc	printf@c& (0+255),7,b
  5560  00097E  0E7F               	movlw	127
  5561  000980  0100               	movlb	0	; () banked
  5562  000982  6FCC               	movwf	??_printf& (0+255),b
  5563  000984  0100               	movlb	0	; () banked
  5564  000986  51E8               	movf	printf@prec& (0+255),w,b
  5565  000988  0100               	movlb	0	; () banked
  5566  00098A  5DEA               	subwf	printf@c& (0+255),w,b
  5567  00098C  0100               	movlb	0	; () banked
  5568  00098E  51E9               	movf	(printf@prec+1)& (0+255),w,b
  5569  000990  0A80               	xorlw	128
  5570  000992  0100               	movlb	0	; () banked
  5571  000994  59CC               	subwfb	??_printf& (0+255),w,b
  5572  000996  B0D8               	btfsc	status,0,c
  5573  000998  D003               	goto	l7975
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;doprnt.c: 1340: c = prec;
  5577  00099A  C0E8  F0EA         	movff	printf@prec,printf@c
  5578  00099E  D018               	goto	l7979
  5579  0009A0                     l7975:
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;doprnt.c: 1341: else if(prec < c)
  5583  0009A0  0100               	movlb	0	; () banked
  5584  0009A2  51E9               	movf	(printf@prec+1)& (0+255),w,b
  5585  0009A4  0A80               	xorlw	128
  5586  0009A6  0100               	movlb	0	; () banked
  5587  0009A8  6FCC               	movwf	??_printf& (0+255),b
  5588  0009AA  0100               	movlb	0	; () banked
  5589  0009AC  51EA               	movf	printf@c& (0+255),w,b
  5590  0009AE  0100               	movlb	0	; () banked
  5591  0009B0  5DE8               	subwf	printf@prec& (0+255),w,b
  5592  0009B2  0E80               	movlw	128
  5593  0009B4  0100               	movlb	0	; () banked
  5594  0009B6  BFEA               	btfsc	printf@c& (0+255),7,b
  5595  0009B8  0E7F               	movlw	127
  5596  0009BA  0100               	movlb	0	; () banked
  5597  0009BC  59CC               	subwfb	??_printf& (0+255),w,b
  5598  0009BE  B0D8               	btfsc	status,0,c
  5599  0009C0  D007               	goto	l7979
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;doprnt.c: 1342: prec = c;
  5603  0009C2  0100               	movlb	0	; () banked
  5604  0009C4  51EA               	movf	printf@c& (0+255),w,b
  5605  0009C6  0100               	movlb	0	; () banked
  5606  0009C8  6FE8               	movwf	printf@prec& (0+255),b
  5607  0009CA  6BE9               	clrf	(printf@prec+1)& (0+255),b
  5608  0009CC  BFE8               	btfsc	printf@prec& (0+255),7,b
  5609  0009CE  07E9               	decf	(printf@prec+1)& (0+255),f,b
  5610  0009D0                     l7979:
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5614  0009D0  0100               	movlb	0	; () banked
  5615  0009D2  51D9               	movf	printf@width& (0+255),w,b
  5616  0009D4  0100               	movlb	0	; () banked
  5617  0009D6  11DA               	iorwf	(printf@width+1)& (0+255),w,b
  5618  0009D8  B4D8               	btfsc	status,2,c
  5619  0009DA  D014               	goto	l7985
  5620                           
  5621                           ; BSR set to: 0
  5622  0009DC  0E03               	movlw	3
  5623  0009DE  0100               	movlb	0	; () banked
  5624  0009E0  15D7               	andwf	printf@flag& (0+255),w,b
  5625  0009E2  0100               	movlb	0	; () banked
  5626  0009E4  6FCC               	movwf	??_printf& (0+255),b
  5627  0009E6  0E00               	movlw	0
  5628  0009E8  0100               	movlb	0	; () banked
  5629  0009EA  15D8               	andwf	(printf@flag+1)& (0+255),w,b
  5630  0009EC  0100               	movlb	0	; () banked
  5631  0009EE  6FCD               	movwf	(??_printf+1)& (0+255),b
  5632  0009F0  0100               	movlb	0	; () banked
  5633  0009F2  51CC               	movf	??_printf& (0+255),w,b
  5634  0009F4  0100               	movlb	0	; () banked
  5635  0009F6  11CD               	iorwf	(??_printf+1)& (0+255),w,b
  5636  0009F8  B4D8               	btfsc	status,2,c
  5637  0009FA  D004               	goto	l7985
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;doprnt.c: 1346: width--;
  5641  0009FC  0100               	movlb	0	; () banked
  5642  0009FE  07D9               	decf	printf@width& (0+255),f,b
  5643  000A00  A0D8               	btfss	status,0,c
  5644  000A02  07DA               	decf	(printf@width+1)& (0+255),f,b
  5645  000A04                     l7985:
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;doprnt.c: 1348: if(flag & 0x4000) {
  5649  000A04  0100               	movlb	0	; () banked
  5650  000A06  ADD8               	btfss	(printf@flag+1)& (0+255),6,b
  5651  000A08  D01E               	goto	l7993
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;doprnt.c: 1349: if(width > prec)
  5655  000A0A  0100               	movlb	0	; () banked
  5656  000A0C  51D9               	movf	printf@width& (0+255),w,b
  5657  000A0E  0100               	movlb	0	; () banked
  5658  000A10  5DE8               	subwf	printf@prec& (0+255),w,b
  5659  000A12  0100               	movlb	0	; () banked
  5660  000A14  51E9               	movf	(printf@prec+1)& (0+255),w,b
  5661  000A16  0A80               	xorlw	128
  5662  000A18  0100               	movlb	0	; () banked
  5663  000A1A  6FCC               	movwf	??_printf& (0+255),b
  5664  000A1C  0100               	movlb	0	; () banked
  5665  000A1E  51DA               	movf	(printf@width+1)& (0+255),w,b
  5666  000A20  0A80               	xorlw	128
  5667  000A22  0100               	movlb	0	; () banked
  5668  000A24  59CC               	subwfb	??_printf& (0+255),w,b
  5669  000A26  B0D8               	btfsc	status,0,c
  5670  000A28  D009               	goto	l7991
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;doprnt.c: 1350: width -= prec;
  5674  000A2A  0100               	movlb	0	; () banked
  5675  000A2C  51E8               	movf	printf@prec& (0+255),w,b
  5676  000A2E  0100               	movlb	0	; () banked
  5677  000A30  5FD9               	subwf	printf@width& (0+255),f,b
  5678  000A32  0100               	movlb	0	; () banked
  5679  000A34  51E9               	movf	(printf@prec+1)& (0+255),w,b
  5680  000A36  0100               	movlb	0	; () banked
  5681  000A38  5BDA               	subwfb	(printf@width+1)& (0+255),f,b
  5682  000A3A  D005               	goto	l7993
  5683  000A3C                     l7991:
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;doprnt.c: 1351: else
  5687                           ;doprnt.c: 1352: width = 0;
  5688  000A3C  0E00               	movlw	0
  5689  000A3E  0100               	movlb	0	; () banked
  5690  000A40  6FDA               	movwf	(printf@width+1)& (0+255),b
  5691  000A42  0E00               	movlw	0
  5692  000A44  6FD9               	movwf	printf@width& (0+255),b
  5693  000A46                     l7993:
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;doprnt.c: 1353: }
  5697                           ;doprnt.c: 1381: if(width > c)
  5698  000A46  0E80               	movlw	128
  5699  000A48  0100               	movlb	0	; () banked
  5700  000A4A  BFEA               	btfsc	printf@c& (0+255),7,b
  5701  000A4C  0E7F               	movlw	127
  5702  000A4E  0100               	movlb	0	; () banked
  5703  000A50  6FCC               	movwf	??_printf& (0+255),b
  5704  000A52  0100               	movlb	0	; () banked
  5705  000A54  51D9               	movf	printf@width& (0+255),w,b
  5706  000A56  0100               	movlb	0	; () banked
  5707  000A58  5DEA               	subwf	printf@c& (0+255),w,b
  5708  000A5A  0100               	movlb	0	; () banked
  5709  000A5C  51DA               	movf	(printf@width+1)& (0+255),w,b
  5710  000A5E  0A80               	xorlw	128
  5711  000A60  0100               	movlb	0	; () banked
  5712  000A62  59CC               	subwfb	??_printf& (0+255),w,b
  5713  000A64  B0D8               	btfsc	status,0,c
  5714  000A66  D00B               	goto	l7997
  5715                           
  5716                           ; BSR set to: 0
  5717                           ;doprnt.c: 1382: width -= c;
  5718  000A68  0100               	movlb	0	; () banked
  5719  000A6A  51EA               	movf	printf@c& (0+255),w,b
  5720  000A6C  0100               	movlb	0	; () banked
  5721  000A6E  5FD9               	subwf	printf@width& (0+255),f,b
  5722  000A70  0E00               	movlw	0
  5723  000A72  0100               	movlb	0	; () banked
  5724  000A74  BFEA               	btfsc	printf@c& (0+255),7,b
  5725  000A76  0EFF               	movlw	255
  5726  000A78  0100               	movlb	0	; () banked
  5727  000A7A  5BDA               	subwfb	(printf@width+1)& (0+255),f,b
  5728  000A7C  D005               	goto	l7999
  5729  000A7E                     l7997:
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;doprnt.c: 1383: else
  5733                           ;doprnt.c: 1384: width = 0;
  5734  000A7E  0E00               	movlw	0
  5735  000A80  0100               	movlb	0	; () banked
  5736  000A82  6FDA               	movwf	(printf@width+1)& (0+255),b
  5737  000A84  0E00               	movlw	0
  5738  000A86  6FD9               	movwf	printf@width& (0+255),b
  5739  000A88                     l7999:
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;doprnt.c: 1422: {
  5743                           ;doprnt.c: 1424: if(width
  5744                           ;doprnt.c: 1428: )
  5745  000A88  0100               	movlb	0	; () banked
  5746  000A8A  51D9               	movf	printf@width& (0+255),w,b
  5747  000A8C  0100               	movlb	0	; () banked
  5748  000A8E  11DA               	iorwf	(printf@width+1)& (0+255),w,b
  5749  000A90  B4D8               	btfsc	status,2,c
  5750  000A92  D00D               	goto	l8005
  5751  000A94                     l8001:
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;doprnt.c: 1430: (putch(' ') );
  5755  000A94  0E20               	movlw	32
  5756  000A96  EC00  F019         	call	_putch
  5757                           
  5758                           ;doprnt.c: 1431: while(--width);
  5759  000A9A  0100               	movlb	0	; () banked
  5760  000A9C  07D9               	decf	printf@width& (0+255),f,b
  5761  000A9E  A0D8               	btfss	status,0,c
  5762  000AA0  07DA               	decf	(printf@width+1)& (0+255),f,b
  5763  000AA2  0100               	movlb	0	; () banked
  5764  000AA4  51D9               	movf	printf@width& (0+255),w,b
  5765  000AA6  0100               	movlb	0	; () banked
  5766  000AA8  11DA               	iorwf	(printf@width+1)& (0+255),w,b
  5767  000AAA  A4D8               	btfss	status,2,c
  5768  000AAC  D7F3               	goto	l8001
  5769  000AAE                     l8005:
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;doprnt.c: 1438: if(flag & 0x03)
  5773  000AAE  0E03               	movlw	3
  5774  000AB0  0100               	movlb	0	; () banked
  5775  000AB2  15D7               	andwf	printf@flag& (0+255),w,b
  5776  000AB4  0100               	movlb	0	; () banked
  5777  000AB6  6FCC               	movwf	??_printf& (0+255),b
  5778  000AB8  0E00               	movlw	0
  5779  000ABA  0100               	movlb	0	; () banked
  5780  000ABC  15D8               	andwf	(printf@flag+1)& (0+255),w,b
  5781  000ABE  0100               	movlb	0	; () banked
  5782  000AC0  6FCD               	movwf	(??_printf+1)& (0+255),b
  5783  000AC2  0100               	movlb	0	; () banked
  5784  000AC4  51CC               	movf	??_printf& (0+255),w,b
  5785  000AC6  0100               	movlb	0	; () banked
  5786  000AC8  11CD               	iorwf	(??_printf+1)& (0+255),w,b
  5787  000ACA  B4D8               	btfsc	status,2,c
  5788  000ACC  D047               	goto	l8013
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;doprnt.c: 1439: (putch('-') );
  5792  000ACE  0E2D               	movlw	45
  5793  000AD0  EC00  F019         	call	_putch
  5794                           
  5795                           ;doprnt.c: 1469: }
  5796                           ;doprnt.c: 1474: while(prec--) {
  5797  000AD4  D043               	goto	l8013
  5798  000AD6                     l8009:
  5799                           
  5800                           ;doprnt.c: 1478: {
  5801                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5802  000AD6  C0E8  F0CC         	movff	printf@prec,??_printf
  5803  000ADA  C0E9  F0CD         	movff	printf@prec+1,??_printf+1
  5804  000ADE  0100               	movlb	0	; () banked
  5805  000AE0  90D8               	bcf	status,0,c
  5806  000AE2  37CC               	rlcf	??_printf& (0+255),f,b
  5807  000AE4  37CD               	rlcf	(??_printf+1)& (0+255),f,b
  5808  000AE6  0100               	movlb	0	; () banked
  5809  000AE8  90D8               	bcf	status,0,c
  5810  000AEA  37CC               	rlcf	??_printf& (0+255),f,b
  5811  000AEC  37CD               	rlcf	(??_printf+1)& (0+255),f,b
  5812  000AEE  0E31               	movlw	low _dpowers
  5813  000AF0  0100               	movlb	0	; () banked
  5814  000AF2  25CC               	addwf	??_printf& (0+255),w,b
  5815  000AF4  6EF6               	movwf	tblptrl,c
  5816  000AF6  0E7F               	movlw	high _dpowers
  5817  000AF8  21CD               	addwfc	(??_printf+1)& (0+255),w,b
  5818  000AFA  6EF7               	movwf	tblptrh,c
  5819  000AFC                     	if	0	;There are less than 3 active tblptr bytes
  5820  000AFC                     	endif
  5821  000AFC  0009               	tblrd		*+
  5822  000AFE  CFF5 F013          	movff	tablat,___lldiv@divisor
  5823  000B02  0009               	tblrd		*+
  5824  000B04  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  5825  000B08  0009               	tblrd		*+
  5826  000B0A  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  5827  000B0E  000A               	tblrd		*-
  5828  000B10  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  5829  000B14  C0DF  F00F         	movff	printf@val,___lldiv@dividend
  5830  000B18  C0E0  F010         	movff	printf@val+1,___lldiv@dividend+1
  5831  000B1C  C0E1  F011         	movff	printf@val+2,___lldiv@dividend+2
  5832  000B20  C0E2  F012         	movff	printf@val+3,___lldiv@dividend+3
  5833  000B24  ECA0  F014         	call	___lldiv	;wreg free
  5834  000B28  C00F  F01C         	movff	?___lldiv,___llmod@dividend
  5835  000B2C  C010  F01D         	movff	?___lldiv+1,___llmod@dividend+1
  5836  000B30  C011  F01E         	movff	?___lldiv+2,___llmod@dividend+2
  5837  000B34  C012  F01F         	movff	?___lldiv+3,___llmod@dividend+3
  5838  000B38  0E0A               	movlw	10
  5839  000B3A  6E20               	movwf	___llmod@divisor,c
  5840  000B3C  0E00               	movlw	0
  5841  000B3E  6E21               	movwf	___llmod@divisor+1,c
  5842  000B40  0E00               	movlw	0
  5843  000B42  6E22               	movwf	___llmod@divisor+2,c
  5844  000B44  0E00               	movlw	0
  5845  000B46  6E23               	movwf	___llmod@divisor+3,c
  5846  000B48  EC46  F016         	call	___llmod	;wreg free
  5847  000B4C  501C               	movf	?___llmod,w,c
  5848  000B4E  0F30               	addlw	48
  5849  000B50  0100               	movlb	0	; () banked
  5850  000B52  6FEA               	movwf	printf@c& (0+255),b
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;doprnt.c: 1523: }
  5854                           ;doprnt.c: 1524: (putch(c) );
  5855  000B54  0100               	movlb	0	; () banked
  5856  000B56  51EA               	movf	printf@c& (0+255),w,b
  5857  000B58  EC00  F019         	call	_putch
  5858  000B5C                     l8013:
  5859  000B5C  0100               	movlb	0	; () banked
  5860  000B5E  07E8               	decf	printf@prec& (0+255),f,b
  5861  000B60  A0D8               	btfss	status,0,c
  5862  000B62  07E9               	decf	(printf@prec+1)& (0+255),f,b
  5863  000B64  0100               	movlb	0	; () banked
  5864  000B66  29E8               	incf	printf@prec& (0+255),w,b
  5865  000B68  E1B6               	bnz	l8009
  5866  000B6A  0100               	movlb	0	; () banked
  5867  000B6C  29E9               	incf	(printf@prec+1)& (0+255),w,b
  5868  000B6E  A4D8               	btfss	status,2,c
  5869  000B70  D7B2               	goto	l8009
  5870  000B72                     l8015:
  5871  000B72  C0C5  FFF6         	movff	printf@f,tblptrl
  5872  000B76  C0C6  FFF7         	movff	printf@f+1,tblptrh
  5873  000B7A  0100               	movlb	0	; () banked
  5874  000B7C  4BC5               	infsnz	printf@f& (0+255),f,b
  5875  000B7E  2BC6               	incf	(printf@f+1)& (0+255),f,b
  5876  000B80                     	if	0	;tblptru may be non-zero
  5877  000B80                     	endif
  5878  000B80                     	if	0	;tblptru may be non-zero
  5879  000B80                     	endif
  5880  000B80  0008               	tblrd		*
  5881  000B82  CFF5 F0EA          	movff	tablat,printf@c
  5882  000B86  0100               	movlb	0	; () banked
  5883  000B88  51EA               	movf	printf@c& (0+255),w,b
  5884  000B8A  B4D8               	btfsc	status,2,c
  5885  000B8C  0012               	return	
  5886  000B8E  EF60  F000         	goto	l7751
  5887  000B92                     __end_of_printf:
  5888                           	opt stack 0
  5889                           tblptru	equ	0xFF8
  5890                           tblptrh	equ	0xFF7
  5891                           tblptrl	equ	0xFF6
  5892                           tablat	equ	0xFF5
  5893                           prodh	equ	0xFF4
  5894                           prodl	equ	0xFF3
  5895                           intcon	equ	0xFF2
  5896                           intcon2	equ	0xFF1
  5897                           postinc0	equ	0xFEE
  5898                           wreg	equ	0xFE8
  5899                           postinc1	equ	0xFE6
  5900                           postdec1	equ	0xFE5
  5901                           fsr1h	equ	0xFE2
  5902                           fsr1l	equ	0xFE1
  5903                           postinc2	equ	0xFDE
  5904                           postdec2	equ	0xFDD
  5905                           fsr2h	equ	0xFDA
  5906                           fsr2l	equ	0xFD9
  5907                           status	equ	0xFD8
  5908                           
  5909 ;; *************** function _scale *****************
  5910 ;; Defined at:
  5911 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;  scl             1    wreg     char 
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;  scl             1   55[COMRAM] char 
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  3   49[COMRAM] char 
  5918 ;; Registers used:
  5919 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5925 ;;      Params:         3       0       0       0       0       0       0
  5926 ;;      Locals:         4       0       0       0       0       0       0
  5927 ;;      Temps:          0       0       0       0       0       0       0
  5928 ;;      Totals:         7       0       0       0       0       0       0
  5929 ;;Total ram usage:        7 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:    5
  5932 ;; This function calls:
  5933 ;;		___awdiv
  5934 ;;		___awmod
  5935 ;;		___ftmul
  5936 ;;		___wmul
  5937 ;; This function is called by:
  5938 ;;		_printf
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text21
  5943  0010E8                     __ptext21:
  5944                           	opt stack 0
  5945  0010E8                     _scale:
  5946                           	opt stack 24
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;incstack = 0
  5950                           ;scale@scl stored from wreg
  5951  0010E8  6E38               	movwf	scale@scl,c
  5952                           
  5953                           ;doprnt.c: 428: if(scl < 0) {
  5954  0010EA  AE38               	btfss	scale@scl,7,c
  5955  0010EC  D0FB               	goto	l7479
  5956                           
  5957                           ;doprnt.c: 429: scl = -scl;
  5958  0010EE  6C38               	negf	scale@scl,c
  5959                           
  5960                           ;doprnt.c: 430: if(scl>=110)
  5961  0010F0  5038               	movf	scale@scl,w,c
  5962  0010F2  0A80               	xorlw	128
  5963  0010F4  0F12               	addlw	-238
  5964  0010F6  A0D8               	btfss	status,0,c
  5965  0010F8  D091               	goto	l7469
  5966                           
  5967                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5968  0010FA  0E00               	movlw	0
  5969  0010FC  6E20               	movwf	___wmul@multiplicand+1,c
  5970  0010FE  0E03               	movlw	3
  5971  001100  6E1F               	movwf	___wmul@multiplicand,c
  5972  001102  0E00               	movlw	0
  5973  001104  6E18               	movwf	___awdiv@divisor+1,c
  5974  001106  0E0A               	movlw	10
  5975  001108  6E17               	movwf	___awdiv@divisor,c
  5976  00110A  0E00               	movlw	0
  5977  00110C  6E12               	movwf	___awmod@divisor+1,c
  5978  00110E  0E64               	movlw	100
  5979  001110  6E11               	movwf	___awmod@divisor,c
  5980  001112  5038               	movf	scale@scl,w,c
  5981  001114  6E0F               	movwf	___awmod@dividend,c
  5982  001116  6A10               	clrf	___awmod@dividend+1,c
  5983  001118  BE0F               	btfsc	___awmod@dividend,7,c
  5984  00111A  0610               	decf	___awmod@dividend+1,f,c
  5985  00111C  ECD9  F015         	call	___awmod	;wreg free
  5986  001120  C00F  F015         	movff	?___awmod,___awdiv@dividend
  5987  001124  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  5988  001128  EC5E  F014         	call	___awdiv	;wreg free
  5989  00112C  0E09               	movlw	9
  5990  00112E  2415               	addwf	?___awdiv,w,c
  5991  001130  6E1D               	movwf	___wmul@multiplier,c
  5992  001132  0E00               	movlw	0
  5993  001134  2016               	addwfc	?___awdiv+1,w,c
  5994  001136  6E1E               	movwf	___wmul@multiplier+1,c
  5995  001138  EC68  F018         	call	___wmul	;wreg free
  5996  00113C  0E59               	movlw	low __npowers_
  5997  00113E  241D               	addwf	?___wmul,w,c
  5998  001140  6EF6               	movwf	tblptrl,c
  5999  001142  0E7F               	movlw	high __npowers_
  6000  001144  201E               	addwfc	?___wmul+1,w,c
  6001  001146  6EF7               	movwf	tblptrh,c
  6002  001148                     	if	0	;There are less than 3 active tblptr bytes
  6003  001148                     	endif
  6004  001148  0009               	tblrd		*+
  6005  00114A  CFF5 F026          	movff	tablat,___ftmul@f2
  6006  00114E  0009               	tblrd		*+
  6007  001150  CFF5 F027          	movff	tablat,___ftmul@f2+1
  6008  001154  000A               	tblrd		*-
  6009  001156  CFF5 F028          	movff	tablat,___ftmul@f2+2
  6010  00115A  0E00               	movlw	0
  6011  00115C  6E18               	movwf	___awdiv@divisor+1,c
  6012  00115E  0E64               	movlw	100
  6013  001160  6E17               	movwf	___awdiv@divisor,c
  6014  001162  5038               	movf	scale@scl,w,c
  6015  001164  6E15               	movwf	___awdiv@dividend,c
  6016  001166  6A16               	clrf	___awdiv@dividend+1,c
  6017  001168  BE15               	btfsc	___awdiv@dividend,7,c
  6018  00116A  0616               	decf	___awdiv@dividend+1,f,c
  6019  00116C  EC5E  F014         	call	___awdiv	;wreg free
  6020  001170  0E12               	movlw	18
  6021  001172  2415               	addwf	?___awdiv,w,c
  6022  001174  6E1D               	movwf	___wmul@multiplier,c
  6023  001176  0E00               	movlw	0
  6024  001178  2016               	addwfc	?___awdiv+1,w,c
  6025  00117A  6E1E               	movwf	___wmul@multiplier+1,c
  6026  00117C  0E00               	movlw	0
  6027  00117E  6E20               	movwf	___wmul@multiplicand+1,c
  6028  001180  0E03               	movlw	3
  6029  001182  6E1F               	movwf	___wmul@multiplicand,c
  6030  001184  EC68  F018         	call	___wmul	;wreg free
  6031  001188  0E59               	movlw	low __npowers_
  6032  00118A  241D               	addwf	?___wmul,w,c
  6033  00118C  6EF6               	movwf	tblptrl,c
  6034  00118E  0E7F               	movlw	high __npowers_
  6035  001190  201E               	addwfc	?___wmul+1,w,c
  6036  001192  6EF7               	movwf	tblptrh,c
  6037  001194                     	if	0	;There are less than 3 active tblptr bytes
  6038  001194                     	endif
  6039  001194  0009               	tblrd		*+
  6040  001196  CFF5 F023          	movff	tablat,___ftmul@f1
  6041  00119A  0009               	tblrd		*+
  6042  00119C  CFF5 F024          	movff	tablat,___ftmul@f1+1
  6043  0011A0  000A               	tblrd		*-
  6044  0011A2  CFF5 F025          	movff	tablat,___ftmul@f1+2
  6045  0011A6  ECE8  F011         	call	___ftmul	;wreg free
  6046  0011AA  C023  F035         	movff	?___ftmul,_scale$2836
  6047  0011AE  C024  F036         	movff	?___ftmul+1,_scale$2836+1
  6048  0011B2  C025  F037         	movff	?___ftmul+2,_scale$2836+2
  6049                           
  6050                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6051  0011B6  C035  F023         	movff	_scale$2836,___ftmul@f1
  6052  0011BA  C036  F024         	movff	_scale$2836+1,___ftmul@f1+1
  6053  0011BE  C037  F025         	movff	_scale$2836+2,___ftmul@f1+2
  6054  0011C2  0E00               	movlw	0
  6055  0011C4  6E20               	movwf	___wmul@multiplicand+1,c
  6056  0011C6  0E03               	movlw	3
  6057  0011C8  6E1F               	movwf	___wmul@multiplicand,c
  6058  0011CA  0E00               	movlw	0
  6059  0011CC  6E12               	movwf	___awmod@divisor+1,c
  6060  0011CE  0E0A               	movlw	10
  6061  0011D0  6E11               	movwf	___awmod@divisor,c
  6062  0011D2  5038               	movf	scale@scl,w,c
  6063  0011D4  6E0F               	movwf	___awmod@dividend,c
  6064  0011D6  6A10               	clrf	___awmod@dividend+1,c
  6065  0011D8  BE0F               	btfsc	___awmod@dividend,7,c
  6066  0011DA  0610               	decf	___awmod@dividend+1,f,c
  6067  0011DC  ECD9  F015         	call	___awmod	;wreg free
  6068  0011E0  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  6069  0011E4  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  6070  0011E8  EC68  F018         	call	___wmul	;wreg free
  6071  0011EC  0E59               	movlw	low __npowers_
  6072  0011EE  241D               	addwf	?___wmul,w,c
  6073  0011F0  6EF6               	movwf	tblptrl,c
  6074  0011F2  0E7F               	movlw	high __npowers_
  6075  0011F4  201E               	addwfc	?___wmul+1,w,c
  6076  0011F6  6EF7               	movwf	tblptrh,c
  6077  0011F8                     	if	0	;There are less than 3 active tblptr bytes
  6078  0011F8                     	endif
  6079  0011F8  0009               	tblrd		*+
  6080  0011FA  CFF5 F026          	movff	tablat,___ftmul@f2
  6081  0011FE  0009               	tblrd		*+
  6082  001200  CFF5 F027          	movff	tablat,___ftmul@f2+1
  6083  001204  000A               	tblrd		*-
  6084  001206  CFF5 F028          	movff	tablat,___ftmul@f2+2
  6085  00120A  ECE8  F011         	call	___ftmul	;wreg free
  6086  00120E  C023  F032         	movff	?___ftmul,?_scale
  6087  001212  C024  F033         	movff	?___ftmul+1,?_scale+1
  6088  001216  C025  F034         	movff	?___ftmul+2,?_scale+2
  6089  00121A  0012               	return	
  6090  00121C                     l7469:
  6091                           
  6092                           ;doprnt.c: 432: else if(scl > 10)
  6093  00121C  5038               	movf	scale@scl,w,c
  6094  00121E  0A80               	xorlw	128
  6095  001220  0F75               	addlw	-139
  6096  001222  A0D8               	btfss	status,0,c
  6097  001224  D04D               	goto	l7475
  6098                           
  6099                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6100  001226  0E00               	movlw	0
  6101  001228  6E18               	movwf	___awdiv@divisor+1,c
  6102  00122A  0E0A               	movlw	10
  6103  00122C  6E17               	movwf	___awdiv@divisor,c
  6104  00122E  5038               	movf	scale@scl,w,c
  6105  001230  6E15               	movwf	___awdiv@dividend,c
  6106  001232  6A16               	clrf	___awdiv@dividend+1,c
  6107  001234  BE15               	btfsc	___awdiv@dividend,7,c
  6108  001236  0616               	decf	___awdiv@dividend+1,f,c
  6109  001238  EC5E  F014         	call	___awdiv	;wreg free
  6110  00123C  0E09               	movlw	9
  6111  00123E  2415               	addwf	?___awdiv,w,c
  6112  001240  6E1D               	movwf	___wmul@multiplier,c
  6113  001242  0E00               	movlw	0
  6114  001244  2016               	addwfc	?___awdiv+1,w,c
  6115  001246  6E1E               	movwf	___wmul@multiplier+1,c
  6116  001248  0E00               	movlw	0
  6117  00124A  6E20               	movwf	___wmul@multiplicand+1,c
  6118  00124C  0E03               	movlw	3
  6119  00124E  6E1F               	movwf	___wmul@multiplicand,c
  6120  001250  EC68  F018         	call	___wmul	;wreg free
  6121  001254  0E59               	movlw	low __npowers_
  6122  001256  241D               	addwf	?___wmul,w,c
  6123  001258  6EF6               	movwf	tblptrl,c
  6124  00125A  0E7F               	movlw	high __npowers_
  6125  00125C  201E               	addwfc	?___wmul+1,w,c
  6126  00125E  6EF7               	movwf	tblptrh,c
  6127  001260                     	if	0	;There are less than 3 active tblptr bytes
  6128  001260                     	endif
  6129  001260  0009               	tblrd		*+
  6130  001262  CFF5 F023          	movff	tablat,___ftmul@f1
  6131  001266  0009               	tblrd		*+
  6132  001268  CFF5 F024          	movff	tablat,___ftmul@f1+1
  6133  00126C  000A               	tblrd		*-
  6134  00126E  CFF5 F025          	movff	tablat,___ftmul@f1+2
  6135  001272  0E00               	movlw	0
  6136  001274  6E20               	movwf	___wmul@multiplicand+1,c
  6137  001276  0E03               	movlw	3
  6138  001278  6E1F               	movwf	___wmul@multiplicand,c
  6139  00127A  0E00               	movlw	0
  6140  00127C  6E12               	movwf	___awmod@divisor+1,c
  6141  00127E  0E0A               	movlw	10
  6142  001280  6E11               	movwf	___awmod@divisor,c
  6143  001282  5038               	movf	scale@scl,w,c
  6144  001284  6E0F               	movwf	___awmod@dividend,c
  6145  001286  6A10               	clrf	___awmod@dividend+1,c
  6146  001288  BE0F               	btfsc	___awmod@dividend,7,c
  6147  00128A  0610               	decf	___awmod@dividend+1,f,c
  6148  00128C  ECD9  F015         	call	___awmod	;wreg free
  6149  001290  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  6150  001294  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  6151  001298  EC68  F018         	call	___wmul	;wreg free
  6152  00129C  0E59               	movlw	low __npowers_
  6153  00129E  241D               	addwf	?___wmul,w,c
  6154  0012A0  6EF6               	movwf	tblptrl,c
  6155  0012A2  0E7F               	movlw	high __npowers_
  6156  0012A4  201E               	addwfc	?___wmul+1,w,c
  6157  0012A6  6EF7               	movwf	tblptrh,c
  6158  0012A8                     	if	0	;There are less than 3 active tblptr bytes
  6159  0012A8                     	endif
  6160  0012A8  0009               	tblrd		*+
  6161  0012AA  CFF5 F026          	movff	tablat,___ftmul@f2
  6162  0012AE  0009               	tblrd		*+
  6163  0012B0  CFF5 F027          	movff	tablat,___ftmul@f2+1
  6164  0012B4  000A               	tblrd		*-
  6165  0012B6  CFF5 F028          	movff	tablat,___ftmul@f2+2
  6166  0012BA  ECE8  F011         	call	___ftmul	;wreg free
  6167  0012BE  D7A7               	goto	L5
  6168  0012C0                     l7475:
  6169                           
  6170                           ;doprnt.c: 434: return _npowers_[scl];
  6171  0012C0  5038               	movf	scale@scl,w,c
  6172  0012C2  0D03               	mullw	3
  6173  0012C4  0E59               	movlw	low __npowers_
  6174  0012C6  24F3               	addwf	prodl,w,c
  6175  0012C8  6EF6               	movwf	tblptrl,c
  6176  0012CA  0E7F               	movlw	high __npowers_
  6177  0012CC  20F4               	addwfc	prodh,w,c
  6178  0012CE  6EF7               	movwf	tblptrh,c
  6179  0012D0                     	if	0	;There are less than 3 active tblptr bytes
  6180  0012D0                     	endif
  6181  0012D0  0009               	tblrd		*+
  6182  0012D2  CFF5 F032          	movff	tablat,?_scale
  6183  0012D6  0009               	tblrd		*+
  6184  0012D8  CFF5 F033          	movff	tablat,?_scale+1
  6185  0012DC  000A               	tblrd		*-
  6186  0012DE  CFF5 F034          	movff	tablat,?_scale+2
  6187  0012E2  0012               	return	
  6188  0012E4                     l7479:
  6189                           
  6190                           ;doprnt.c: 435: }
  6191                           ;doprnt.c: 436: if(scl>=110)
  6192  0012E4  5038               	movf	scale@scl,w,c
  6193  0012E6  0A80               	xorlw	128
  6194  0012E8  0F12               	addlw	-238
  6195  0012EA  A0D8               	btfss	status,0,c
  6196  0012EC  D091               	goto	l7487
  6197                           
  6198                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6199  0012EE  0E00               	movlw	0
  6200  0012F0  6E20               	movwf	___wmul@multiplicand+1,c
  6201  0012F2  0E03               	movlw	3
  6202  0012F4  6E1F               	movwf	___wmul@multiplicand,c
  6203  0012F6  0E00               	movlw	0
  6204  0012F8  6E18               	movwf	___awdiv@divisor+1,c
  6205  0012FA  0E0A               	movlw	10
  6206  0012FC  6E17               	movwf	___awdiv@divisor,c
  6207  0012FE  0E00               	movlw	0
  6208  001300  6E12               	movwf	___awmod@divisor+1,c
  6209  001302  0E64               	movlw	100
  6210  001304  6E11               	movwf	___awmod@divisor,c
  6211  001306  5038               	movf	scale@scl,w,c
  6212  001308  6E0F               	movwf	___awmod@dividend,c
  6213  00130A  6A10               	clrf	___awmod@dividend+1,c
  6214  00130C  BE0F               	btfsc	___awmod@dividend,7,c
  6215  00130E  0610               	decf	___awmod@dividend+1,f,c
  6216  001310  ECD9  F015         	call	___awmod	;wreg free
  6217  001314  C00F  F015         	movff	?___awmod,___awdiv@dividend
  6218  001318  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  6219  00131C  EC5E  F014         	call	___awdiv	;wreg free
  6220  001320  0E09               	movlw	9
  6221  001322  2415               	addwf	?___awdiv,w,c
  6222  001324  6E1D               	movwf	___wmul@multiplier,c
  6223  001326  0E00               	movlw	0
  6224  001328  2016               	addwfc	?___awdiv+1,w,c
  6225  00132A  6E1E               	movwf	___wmul@multiplier+1,c
  6226  00132C  EC68  F018         	call	___wmul	;wreg free
  6227  001330  0E80               	movlw	low __powers_
  6228  001332  241D               	addwf	?___wmul,w,c
  6229  001334  6EF6               	movwf	tblptrl,c
  6230  001336  0E7F               	movlw	high __powers_
  6231  001338  201E               	addwfc	?___wmul+1,w,c
  6232  00133A  6EF7               	movwf	tblptrh,c
  6233  00133C                     	if	0	;There are less than 3 active tblptr bytes
  6234  00133C                     	endif
  6235  00133C  0009               	tblrd		*+
  6236  00133E  CFF5 F026          	movff	tablat,___ftmul@f2
  6237  001342  0009               	tblrd		*+
  6238  001344  CFF5 F027          	movff	tablat,___ftmul@f2+1
  6239  001348  000A               	tblrd		*-
  6240  00134A  CFF5 F028          	movff	tablat,___ftmul@f2+2
  6241  00134E  0E00               	movlw	0
  6242  001350  6E18               	movwf	___awdiv@divisor+1,c
  6243  001352  0E64               	movlw	100
  6244  001354  6E17               	movwf	___awdiv@divisor,c
  6245  001356  5038               	movf	scale@scl,w,c
  6246  001358  6E15               	movwf	___awdiv@dividend,c
  6247  00135A  6A16               	clrf	___awdiv@dividend+1,c
  6248  00135C  BE15               	btfsc	___awdiv@dividend,7,c
  6249  00135E  0616               	decf	___awdiv@dividend+1,f,c
  6250  001360  EC5E  F014         	call	___awdiv	;wreg free
  6251  001364  0E12               	movlw	18
  6252  001366  2415               	addwf	?___awdiv,w,c
  6253  001368  6E1D               	movwf	___wmul@multiplier,c
  6254  00136A  0E00               	movlw	0
  6255  00136C  2016               	addwfc	?___awdiv+1,w,c
  6256  00136E  6E1E               	movwf	___wmul@multiplier+1,c
  6257  001370  0E00               	movlw	0
  6258  001372  6E20               	movwf	___wmul@multiplicand+1,c
  6259  001374  0E03               	movlw	3
  6260  001376  6E1F               	movwf	___wmul@multiplicand,c
  6261  001378  EC68  F018         	call	___wmul	;wreg free
  6262  00137C  0E80               	movlw	low __powers_
  6263  00137E  241D               	addwf	?___wmul,w,c
  6264  001380  6EF6               	movwf	tblptrl,c
  6265  001382  0E7F               	movlw	high __powers_
  6266  001384  201E               	addwfc	?___wmul+1,w,c
  6267  001386  6EF7               	movwf	tblptrh,c
  6268  001388                     	if	0	;There are less than 3 active tblptr bytes
  6269  001388                     	endif
  6270  001388  0009               	tblrd		*+
  6271  00138A  CFF5 F023          	movff	tablat,___ftmul@f1
  6272  00138E  0009               	tblrd		*+
  6273  001390  CFF5 F024          	movff	tablat,___ftmul@f1+1
  6274  001394  000A               	tblrd		*-
  6275  001396  CFF5 F025          	movff	tablat,___ftmul@f1+2
  6276  00139A  ECE8  F011         	call	___ftmul	;wreg free
  6277  00139E  C023  F035         	movff	?___ftmul,_scale$2836
  6278  0013A2  C024  F036         	movff	?___ftmul+1,_scale$2836+1
  6279  0013A6  C025  F037         	movff	?___ftmul+2,_scale$2836+2
  6280                           
  6281                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6282  0013AA  C035  F023         	movff	_scale$2836,___ftmul@f1
  6283  0013AE  C036  F024         	movff	_scale$2836+1,___ftmul@f1+1
  6284  0013B2  C037  F025         	movff	_scale$2836+2,___ftmul@f1+2
  6285  0013B6  0E00               	movlw	0
  6286  0013B8  6E20               	movwf	___wmul@multiplicand+1,c
  6287  0013BA  0E03               	movlw	3
  6288  0013BC  6E1F               	movwf	___wmul@multiplicand,c
  6289  0013BE  0E00               	movlw	0
  6290  0013C0  6E12               	movwf	___awmod@divisor+1,c
  6291  0013C2  0E0A               	movlw	10
  6292  0013C4  6E11               	movwf	___awmod@divisor,c
  6293  0013C6  5038               	movf	scale@scl,w,c
  6294  0013C8  6E0F               	movwf	___awmod@dividend,c
  6295  0013CA  6A10               	clrf	___awmod@dividend+1,c
  6296  0013CC  BE0F               	btfsc	___awmod@dividend,7,c
  6297  0013CE  0610               	decf	___awmod@dividend+1,f,c
  6298  0013D0  ECD9  F015         	call	___awmod	;wreg free
  6299  0013D4  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  6300  0013D8  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  6301  0013DC  EC68  F018         	call	___wmul	;wreg free
  6302  0013E0  0E80               	movlw	low __powers_
  6303  0013E2  241D               	addwf	?___wmul,w,c
  6304  0013E4  6EF6               	movwf	tblptrl,c
  6305  0013E6  0E7F               	movlw	high __powers_
  6306  0013E8  201E               	addwfc	?___wmul+1,w,c
  6307  0013EA  6EF7               	movwf	tblptrh,c
  6308  0013EC                     	if	0	;There are less than 3 active tblptr bytes
  6309  0013EC                     	endif
  6310  0013EC  0009               	tblrd		*+
  6311  0013EE  CFF5 F026          	movff	tablat,___ftmul@f2
  6312  0013F2  0009               	tblrd		*+
  6313  0013F4  CFF5 F027          	movff	tablat,___ftmul@f2+1
  6314  0013F8  000A               	tblrd		*-
  6315  0013FA  CFF5 F028          	movff	tablat,___ftmul@f2+2
  6316  0013FE  ECE8  F011         	call	___ftmul	;wreg free
  6317  001402  C023  F032         	movff	?___ftmul,?_scale
  6318  001406  C024  F033         	movff	?___ftmul+1,?_scale+1
  6319  00140A  C025  F034         	movff	?___ftmul+2,?_scale+2
  6320  00140E  0012               	return	
  6321  001410                     l7487:
  6322                           
  6323                           ;doprnt.c: 438: else if(scl > 10)
  6324  001410  5038               	movf	scale@scl,w,c
  6325  001412  0A80               	xorlw	128
  6326  001414  0F75               	addlw	-139
  6327  001416  A0D8               	btfss	status,0,c
  6328  001418  D04D               	goto	l7493
  6329                           
  6330                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  6331  00141A  0E00               	movlw	0
  6332  00141C  6E18               	movwf	___awdiv@divisor+1,c
  6333  00141E  0E0A               	movlw	10
  6334  001420  6E17               	movwf	___awdiv@divisor,c
  6335  001422  5038               	movf	scale@scl,w,c
  6336  001424  6E15               	movwf	___awdiv@dividend,c
  6337  001426  6A16               	clrf	___awdiv@dividend+1,c
  6338  001428  BE15               	btfsc	___awdiv@dividend,7,c
  6339  00142A  0616               	decf	___awdiv@dividend+1,f,c
  6340  00142C  EC5E  F014         	call	___awdiv	;wreg free
  6341  001430  0E09               	movlw	9
  6342  001432  2415               	addwf	?___awdiv,w,c
  6343  001434  6E1D               	movwf	___wmul@multiplier,c
  6344  001436  0E00               	movlw	0
  6345  001438  2016               	addwfc	?___awdiv+1,w,c
  6346  00143A  6E1E               	movwf	___wmul@multiplier+1,c
  6347  00143C  0E00               	movlw	0
  6348  00143E  6E20               	movwf	___wmul@multiplicand+1,c
  6349  001440  0E03               	movlw	3
  6350  001442  6E1F               	movwf	___wmul@multiplicand,c
  6351  001444  EC68  F018         	call	___wmul	;wreg free
  6352  001448  0E80               	movlw	low __powers_
  6353  00144A  241D               	addwf	?___wmul,w,c
  6354  00144C  6EF6               	movwf	tblptrl,c
  6355  00144E  0E7F               	movlw	high __powers_
  6356  001450  201E               	addwfc	?___wmul+1,w,c
  6357  001452  6EF7               	movwf	tblptrh,c
  6358  001454                     	if	0	;There are less than 3 active tblptr bytes
  6359  001454                     	endif
  6360  001454  0009               	tblrd		*+
  6361  001456  CFF5 F023          	movff	tablat,___ftmul@f1
  6362  00145A  0009               	tblrd		*+
  6363  00145C  CFF5 F024          	movff	tablat,___ftmul@f1+1
  6364  001460  000A               	tblrd		*-
  6365  001462  CFF5 F025          	movff	tablat,___ftmul@f1+2
  6366  001466  0E00               	movlw	0
  6367  001468  6E20               	movwf	___wmul@multiplicand+1,c
  6368  00146A  0E03               	movlw	3
  6369  00146C  6E1F               	movwf	___wmul@multiplicand,c
  6370  00146E  0E00               	movlw	0
  6371  001470  6E12               	movwf	___awmod@divisor+1,c
  6372  001472  0E0A               	movlw	10
  6373  001474  6E11               	movwf	___awmod@divisor,c
  6374  001476  5038               	movf	scale@scl,w,c
  6375  001478  6E0F               	movwf	___awmod@dividend,c
  6376  00147A  6A10               	clrf	___awmod@dividend+1,c
  6377  00147C  BE0F               	btfsc	___awmod@dividend,7,c
  6378  00147E  0610               	decf	___awmod@dividend+1,f,c
  6379  001480  ECD9  F015         	call	___awmod	;wreg free
  6380  001484  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  6381  001488  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  6382  00148C  EC68  F018         	call	___wmul	;wreg free
  6383  001490  0E80               	movlw	low __powers_
  6384  001492  241D               	addwf	?___wmul,w,c
  6385  001494  6EF6               	movwf	tblptrl,c
  6386  001496  0E7F               	movlw	high __powers_
  6387  001498  201E               	addwfc	?___wmul+1,w,c
  6388  00149A  6EF7               	movwf	tblptrh,c
  6389  00149C                     	if	0	;There are less than 3 active tblptr bytes
  6390  00149C                     	endif
  6391  00149C  0009               	tblrd		*+
  6392  00149E  CFF5 F026          	movff	tablat,___ftmul@f2
  6393  0014A2  0009               	tblrd		*+
  6394  0014A4  CFF5 F027          	movff	tablat,___ftmul@f2+1
  6395  0014A8  000A               	tblrd		*-
  6396  0014AA  CFF5 F028          	movff	tablat,___ftmul@f2+2
  6397  0014AE  ECE8  F011         	call	___ftmul	;wreg free
  6398  0014B2  D7A7               	goto	L6
  6399  0014B4                     l7493:
  6400                           
  6401                           ;doprnt.c: 440: return _powers_[scl];
  6402  0014B4  5038               	movf	scale@scl,w,c
  6403  0014B6  0D03               	mullw	3
  6404  0014B8  0E80               	movlw	low __powers_
  6405  0014BA  24F3               	addwf	prodl,w,c
  6406  0014BC  6EF6               	movwf	tblptrl,c
  6407  0014BE  0E7F               	movlw	high __powers_
  6408  0014C0  20F4               	addwfc	prodh,w,c
  6409  0014C2  6EF7               	movwf	tblptrh,c
  6410  0014C4                     	if	0	;There are less than 3 active tblptr bytes
  6411  0014C4                     	endif
  6412  0014C4  0009               	tblrd		*+
  6413  0014C6  CFF5 F032          	movff	tablat,?_scale
  6414  0014CA  0009               	tblrd		*+
  6415  0014CC  CFF5 F033          	movff	tablat,?_scale+1
  6416  0014D0  000A               	tblrd		*-
  6417  0014D2  CFF5 F034          	movff	tablat,?_scale+2
  6418  0014D6  0012               	return	
  6419  0014D8                     __end_of_scale:
  6420                           	opt stack 0
  6421                           tblptru	equ	0xFF8
  6422                           tblptrh	equ	0xFF7
  6423                           tblptrl	equ	0xFF6
  6424                           tablat	equ	0xFF5
  6425                           prodh	equ	0xFF4
  6426                           prodl	equ	0xFF3
  6427                           intcon	equ	0xFF2
  6428                           intcon2	equ	0xFF1
  6429                           postinc0	equ	0xFEE
  6430                           wreg	equ	0xFE8
  6431                           postinc1	equ	0xFE6
  6432                           postdec1	equ	0xFE5
  6433                           fsr1h	equ	0xFE2
  6434                           fsr1l	equ	0xFE1
  6435                           postinc2	equ	0xFDE
  6436                           postdec2	equ	0xFDD
  6437                           fsr2h	equ	0xFDA
  6438                           fsr2l	equ	0xFD9
  6439                           status	equ	0xFD8
  6440                           
  6441 ;; *************** function _putch *****************
  6442 ;; Defined at:
  6443 ;;		line 162 in file "mcc_generated_files/eusart1.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  txData          1    wreg     unsigned char 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;  txData          1   15[COMRAM] unsigned char 
  6448 ;; Return value:  Size  Location     Type
  6449 ;;		None               void
  6450 ;; Registers used:
  6451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6457 ;;      Params:         0       0       0       0       0       0       0
  6458 ;;      Locals:         1       0       0       0       0       0       0
  6459 ;;      Temps:          0       0       0       0       0       0       0
  6460 ;;      Totals:         1       0       0       0       0       0       0
  6461 ;;Total ram usage:        1 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; Hardware stack levels required when called:    4
  6464 ;; This function calls:
  6465 ;;		_EUSART1_Write
  6466 ;; This function is called by:
  6467 ;;		_printf
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           	psect	text22
  6472  003200                     __ptext22:
  6473                           	opt stack 0
  6474  003200                     _putch:
  6475                           	opt stack 25
  6476                           
  6477                           ;incstack = 0
  6478                           ;putch@txData stored from wreg
  6479  003200  6E10               	movwf	putch@txData,c
  6480                           
  6481                           ;eusart1.c: 164: EUSART1_Write(txData);
  6482  003202  5010               	movf	putch@txData,w,c
  6483  003204  EC7F  F017         	call	_EUSART1_Write
  6484  003208  0012               	return		;funcret
  6485  00320A                     __end_of_putch:
  6486                           	opt stack 0
  6487                           tblptru	equ	0xFF8
  6488                           tblptrh	equ	0xFF7
  6489                           tblptrl	equ	0xFF6
  6490                           tablat	equ	0xFF5
  6491                           prodh	equ	0xFF4
  6492                           prodl	equ	0xFF3
  6493                           intcon	equ	0xFF2
  6494                           intcon2	equ	0xFF1
  6495                           postinc0	equ	0xFEE
  6496                           wreg	equ	0xFE8
  6497                           postinc1	equ	0xFE6
  6498                           postdec1	equ	0xFE5
  6499                           fsr1h	equ	0xFE2
  6500                           fsr1l	equ	0xFE1
  6501                           postinc2	equ	0xFDE
  6502                           postdec2	equ	0xFDD
  6503                           fsr2h	equ	0xFDA
  6504                           fsr2l	equ	0xFD9
  6505                           status	equ	0xFD8
  6506                           
  6507 ;; *************** function _EUSART1_Write *****************
  6508 ;; Defined at:
  6509 ;;		line 134 in file "mcc_generated_files/eusart1.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;  txData          1    wreg     unsigned char 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;  txData          1   14[COMRAM] unsigned char 
  6514 ;; Return value:  Size  Location     Type
  6515 ;;		None               void
  6516 ;; Registers used:
  6517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6523 ;;      Params:         0       0       0       0       0       0       0
  6524 ;;      Locals:         1       0       0       0       0       0       0
  6525 ;;      Temps:          0       0       0       0       0       0       0
  6526 ;;      Totals:         1       0       0       0       0       0       0
  6527 ;;Total ram usage:        1 bytes
  6528 ;; Hardware stack levels used:    1
  6529 ;; Hardware stack levels required when called:    3
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		_putch
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           	psect	text23
  6538  002EFE                     __ptext23:
  6539                           	opt stack 0
  6540  002EFE                     _EUSART1_Write:
  6541                           	opt stack 25
  6542                           
  6543                           ;incstack = 0
  6544                           ;EUSART1_Write@txData stored from wreg
  6545  002EFE  6E0F               	movwf	EUSART1_Write@txData,c
  6546  002F00                     l6951:
  6547  002F00  0100               	movlb	0	; () banked
  6548  002F02  51FF               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  6549  002F04  B4D8               	btfsc	status,2,c
  6550  002F06  D7FC               	goto	l6951
  6551                           
  6552                           ; BSR set to: 0
  6553                           ;eusart1.c: 138: }
  6554                           ;eusart1.c: 140: if(0 == PIE1bits.TX1IE)
  6555  002F08  B89D               	btfsc	3997,4,c	;volatile
  6556  002F0A  D003               	goto	l288
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;eusart1.c: 141: {
  6560                           ;eusart1.c: 142: TXREG1 = txData;
  6561  002F0C  C00F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  6562                           
  6563                           ;eusart1.c: 143: }
  6564  002F10  D013               	goto	l6965
  6565  002F12                     l288:
  6566                           
  6567                           ; BSR set to: 0
  6568                           ;eusart1.c: 144: else
  6569                           ;eusart1.c: 145: {
  6570                           ;eusart1.c: 146: PIE1bits.TX1IE = 0;
  6571  002F12  989D               	bcf	3997,4,c	;volatile
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;eusart1.c: 147: eusart1TxBuffer[eusart1TxHead++] = txData;
  6575  002F14  504B               	movf	_eusart1TxHead,w,c
  6576  002F16  0D01               	mullw	1
  6577  002F18  0E86               	movlw	low _eusart1TxBuffer
  6578  002F1A  24F3               	addwf	prodl,w,c
  6579  002F1C  6ED9               	movwf	fsr2l,c
  6580  002F1E  0E00               	movlw	high _eusart1TxBuffer
  6581  002F20  20F4               	addwfc	prodh,w,c
  6582  002F22  6EDA               	movwf	fsr2h,c
  6583  002F24  C00F  FFDF         	movff	EUSART1_Write@txData,indf2
  6584                           
  6585                           ; BSR set to: 0
  6586  002F28  2A4B               	incf	_eusart1TxHead,f,c
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;eusart1.c: 148: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  6590  002F2A  0E07               	movlw	7
  6591  002F2C  644B               	cpfsgt	_eusart1TxHead,c
  6592  002F2E  D002               	goto	l6963
  6593                           
  6594                           ; BSR set to: 0
  6595                           ;eusart1.c: 149: {
  6596                           ;eusart1.c: 150: eusart1TxHead = 0;
  6597  002F30  0E00               	movlw	0
  6598  002F32  6E4B               	movwf	_eusart1TxHead,c
  6599  002F34                     l6963:
  6600                           
  6601                           ; BSR set to: 0
  6602                           ;eusart1.c: 151: }
  6603                           ;eusart1.c: 152: eusart1TxBufferRemaining--;
  6604  002F34  0100               	movlb	0	; () banked
  6605  002F36  07FF               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  6606  002F38                     l6965:
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;eusart1.c: 153: }
  6610                           ;eusart1.c: 154: PIE1bits.TX1IE = 1;
  6611  002F38  889D               	bsf	3997,4,c	;volatile
  6612                           
  6613                           ; BSR set to: 0
  6614  002F3A  0012               	return		;funcret
  6615  002F3C                     __end_of_EUSART1_Write:
  6616                           	opt stack 0
  6617                           tblptru	equ	0xFF8
  6618                           tblptrh	equ	0xFF7
  6619                           tblptrl	equ	0xFF6
  6620                           tablat	equ	0xFF5
  6621                           prodh	equ	0xFF4
  6622                           prodl	equ	0xFF3
  6623                           intcon	equ	0xFF2
  6624                           intcon2	equ	0xFF1
  6625                           postinc0	equ	0xFEE
  6626                           wreg	equ	0xFE8
  6627                           postinc1	equ	0xFE6
  6628                           postdec1	equ	0xFE5
  6629                           fsr1h	equ	0xFE2
  6630                           fsr1l	equ	0xFE1
  6631                           indf2	equ	0xFDF
  6632                           postinc2	equ	0xFDE
  6633                           postdec2	equ	0xFDD
  6634                           fsr2h	equ	0xFDA
  6635                           fsr2l	equ	0xFD9
  6636                           status	equ	0xFD8
  6637                           
  6638 ;; *************** function _isdigit *****************
  6639 ;; Defined at:
  6640 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  c               1    wreg     unsigned char 
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;  c               1   16[COMRAM] unsigned char 
  6645 ;; Return value:  Size  Location     Type
  6646 ;;		None               void
  6647 ;; Registers used:
  6648 ;;		wreg, status,2, status,0
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6654 ;;      Params:         0       0       0       0       0       0       0
  6655 ;;      Locals:         2       0       0       0       0       0       0
  6656 ;;      Temps:          1       0       0       0       0       0       0
  6657 ;;      Totals:         3       0       0       0       0       0       0
  6658 ;;Total ram usage:        3 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:    3
  6661 ;; This function calls:
  6662 ;;		Nothing
  6663 ;; This function is called by:
  6664 ;;		_printf
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           	psect	text24
  6669  00313E                     __ptext24:
  6670                           	opt stack 0
  6671  00313E                     _isdigit:
  6672                           	opt stack 26
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;incstack = 0
  6676                           ;isdigit@c stored from wreg
  6677  00313E  6E11               	movwf	isdigit@c,c
  6678  003140  0E00               	movlw	0
  6679  003142  6E10               	movwf	_isdigit$2266,c
  6680  003144  0E3A               	movlw	58
  6681  003146  6011               	cpfslt	isdigit@c,c
  6682  003148  D005               	goto	l7505
  6683  00314A  0E2F               	movlw	47
  6684  00314C  6411               	cpfsgt	isdigit@c,c
  6685  00314E  D002               	goto	l7505
  6686  003150  0E01               	movlw	1
  6687  003152  6E10               	movwf	_isdigit$2266,c
  6688  003154                     l7505:
  6689  003154  C010  F00F         	movff	_isdigit$2266,??_isdigit
  6690  003158  300F               	rrcf	??_isdigit,w,c
  6691  00315A  0012               	return	
  6692  00315C                     __end_of_isdigit:
  6693                           	opt stack 0
  6694                           tblptru	equ	0xFF8
  6695                           tblptrh	equ	0xFF7
  6696                           tblptrl	equ	0xFF6
  6697                           tablat	equ	0xFF5
  6698                           prodh	equ	0xFF4
  6699                           prodl	equ	0xFF3
  6700                           intcon	equ	0xFF2
  6701                           intcon2	equ	0xFF1
  6702                           postinc0	equ	0xFEE
  6703                           wreg	equ	0xFE8
  6704                           postinc1	equ	0xFE6
  6705                           postdec1	equ	0xFE5
  6706                           fsr1h	equ	0xFE2
  6707                           fsr1l	equ	0xFE1
  6708                           indf2	equ	0xFDF
  6709                           postinc2	equ	0xFDE
  6710                           postdec2	equ	0xFDD
  6711                           fsr2h	equ	0xFDA
  6712                           fsr2l	equ	0xFD9
  6713                           status	equ	0xFD8
  6714                           
  6715 ;; *************** function _fround *****************
  6716 ;; Defined at:
  6717 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  prec            1    wreg     unsigned char 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;  prec            1   58[COMRAM] unsigned char 
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  3   49[COMRAM] unsigned char 
  6724 ;; Registers used:
  6725 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6731 ;;      Params:         3       0       0       0       0       0       0
  6732 ;;      Locals:         7       0       0       0       0       0       0
  6733 ;;      Temps:          0       0       0       0       0       0       0
  6734 ;;      Totals:        10       0       0       0       0       0       0
  6735 ;;Total ram usage:       10 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; Hardware stack levels required when called:    5
  6738 ;; This function calls:
  6739 ;;		___awdiv
  6740 ;;		___awmod
  6741 ;;		___ftmul
  6742 ;;		___wmul
  6743 ;; This function is called by:
  6744 ;;		_printf
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748                           	psect	text25
  6749  001ADE                     __ptext25:
  6750                           	opt stack 0
  6751  001ADE                     _fround:
  6752                           	opt stack 24
  6753                           
  6754                           ;incstack = 0
  6755                           ;fround@prec stored from wreg
  6756  001ADE  6E3B               	movwf	fround@prec,c
  6757                           
  6758                           ;doprnt.c: 413: if(prec>=110)
  6759  001AE0  0E6D               	movlw	109
  6760  001AE2  643B               	cpfsgt	fround@prec,c
  6761  001AE4  D09F               	goto	l7447
  6762                           
  6763                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6764  001AE6  0E00               	movlw	0
  6765  001AE8  6E20               	movwf	___wmul@multiplicand+1,c
  6766  001AEA  0E03               	movlw	3
  6767  001AEC  6E1F               	movwf	___wmul@multiplicand,c
  6768  001AEE  0E00               	movlw	0
  6769  001AF0  6E18               	movwf	___awdiv@divisor+1,c
  6770  001AF2  0E0A               	movlw	10
  6771  001AF4  6E17               	movwf	___awdiv@divisor,c
  6772  001AF6  0E00               	movlw	0
  6773  001AF8  6E12               	movwf	___awmod@divisor+1,c
  6774  001AFA  0E64               	movlw	100
  6775  001AFC  6E11               	movwf	___awmod@divisor,c
  6776  001AFE  C03B  F00F         	movff	fround@prec,___awmod@dividend
  6777  001B02  6A10               	clrf	___awmod@dividend+1,c
  6778  001B04  ECD9  F015         	call	___awmod	;wreg free
  6779  001B08  C00F  F015         	movff	?___awmod,___awdiv@dividend
  6780  001B0C  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  6781  001B10  EC5E  F014         	call	___awdiv	;wreg free
  6782  001B14  0E09               	movlw	9
  6783  001B16  2415               	addwf	?___awdiv,w,c
  6784  001B18  6E1D               	movwf	___wmul@multiplier,c
  6785  001B1A  0E00               	movlw	0
  6786  001B1C  2016               	addwfc	?___awdiv+1,w,c
  6787  001B1E  6E1E               	movwf	___wmul@multiplier+1,c
  6788  001B20  EC68  F018         	call	___wmul	;wreg free
  6789  001B24  0E59               	movlw	low __npowers_
  6790  001B26  241D               	addwf	?___wmul,w,c
  6791  001B28  6EF6               	movwf	tblptrl,c
  6792  001B2A  0E7F               	movlw	high __npowers_
  6793  001B2C  201E               	addwfc	?___wmul+1,w,c
  6794  001B2E  6EF7               	movwf	tblptrh,c
  6795  001B30                     	if	0	;There are less than 3 active tblptr bytes
  6796  001B30                     	endif
  6797  001B30  0009               	tblrd		*+
  6798  001B32  CFF5 F026          	movff	tablat,___ftmul@f2
  6799  001B36  0009               	tblrd		*+
  6800  001B38  CFF5 F027          	movff	tablat,___ftmul@f2+1
  6801  001B3C  000A               	tblrd		*-
  6802  001B3E  CFF5 F028          	movff	tablat,___ftmul@f2+2
  6803  001B42  0E00               	movlw	0
  6804  001B44  6E18               	movwf	___awdiv@divisor+1,c
  6805  001B46  0E64               	movlw	100
  6806  001B48  6E17               	movwf	___awdiv@divisor,c
  6807  001B4A  C03B  F015         	movff	fround@prec,___awdiv@dividend
  6808  001B4E  6A16               	clrf	___awdiv@dividend+1,c
  6809  001B50  EC5E  F014         	call	___awdiv	;wreg free
  6810  001B54  0E12               	movlw	18
  6811  001B56  2415               	addwf	?___awdiv,w,c
  6812  001B58  6E1D               	movwf	___wmul@multiplier,c
  6813  001B5A  0E00               	movlw	0
  6814  001B5C  2016               	addwfc	?___awdiv+1,w,c
  6815  001B5E  6E1E               	movwf	___wmul@multiplier+1,c
  6816  001B60  0E00               	movlw	0
  6817  001B62  6E20               	movwf	___wmul@multiplicand+1,c
  6818  001B64  0E03               	movlw	3
  6819  001B66  6E1F               	movwf	___wmul@multiplicand,c
  6820  001B68  EC68  F018         	call	___wmul	;wreg free
  6821  001B6C  0E59               	movlw	low __npowers_
  6822  001B6E  241D               	addwf	?___wmul,w,c
  6823  001B70  6EF6               	movwf	tblptrl,c
  6824  001B72  0E7F               	movlw	high __npowers_
  6825  001B74  201E               	addwfc	?___wmul+1,w,c
  6826  001B76  6EF7               	movwf	tblptrh,c
  6827  001B78                     	if	0	;There are less than 3 active tblptr bytes
  6828  001B78                     	endif
  6829  001B78  0009               	tblrd		*+
  6830  001B7A  CFF5 F023          	movff	tablat,___ftmul@f1
  6831  001B7E  0009               	tblrd		*+
  6832  001B80  CFF5 F024          	movff	tablat,___ftmul@f1+1
  6833  001B84  000A               	tblrd		*-
  6834  001B86  CFF5 F025          	movff	tablat,___ftmul@f1+2
  6835  001B8A  ECE8  F011         	call	___ftmul	;wreg free
  6836  001B8E  C023  F038         	movff	?___ftmul,_fround$2834
  6837  001B92  C024  F039         	movff	?___ftmul+1,_fround$2834+1
  6838  001B96  C025  F03A         	movff	?___ftmul+2,_fround$2834+2
  6839                           
  6840                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6841  001B9A  0E00               	movlw	0
  6842  001B9C  6E20               	movwf	___wmul@multiplicand+1,c
  6843  001B9E  0E03               	movlw	3
  6844  001BA0  6E1F               	movwf	___wmul@multiplicand,c
  6845  001BA2  0E00               	movlw	0
  6846  001BA4  6E12               	movwf	___awmod@divisor+1,c
  6847  001BA6  0E0A               	movlw	10
  6848  001BA8  6E11               	movwf	___awmod@divisor,c
  6849  001BAA  C03B  F00F         	movff	fround@prec,___awmod@dividend
  6850  001BAE  6A10               	clrf	___awmod@dividend+1,c
  6851  001BB0  ECD9  F015         	call	___awmod	;wreg free
  6852  001BB4  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  6853  001BB8  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  6854  001BBC  EC68  F018         	call	___wmul	;wreg free
  6855  001BC0  0E59               	movlw	low __npowers_
  6856  001BC2  241D               	addwf	?___wmul,w,c
  6857  001BC4  6EF6               	movwf	tblptrl,c
  6858  001BC6  0E7F               	movlw	high __npowers_
  6859  001BC8  201E               	addwfc	?___wmul+1,w,c
  6860  001BCA  6EF7               	movwf	tblptrh,c
  6861  001BCC                     	if	0	;There are less than 3 active tblptr bytes
  6862  001BCC                     	endif
  6863  001BCC  0009               	tblrd		*+
  6864  001BCE  CFF5 F026          	movff	tablat,___ftmul@f2
  6865  001BD2  0009               	tblrd		*+
  6866  001BD4  CFF5 F027          	movff	tablat,___ftmul@f2+1
  6867  001BD8  000A               	tblrd		*-
  6868  001BDA  CFF5 F028          	movff	tablat,___ftmul@f2+2
  6869  001BDE  C038  F023         	movff	_fround$2834,___ftmul@f1
  6870  001BE2  C039  F024         	movff	_fround$2834+1,___ftmul@f1+1
  6871  001BE6  C03A  F025         	movff	_fround$2834+2,___ftmul@f1+2
  6872  001BEA  ECE8  F011         	call	___ftmul	;wreg free
  6873  001BEE  C023  F035         	movff	?___ftmul,_fround$2835
  6874  001BF2  C024  F036         	movff	?___ftmul+1,_fround$2835+1
  6875  001BF6  C025  F037         	movff	?___ftmul+2,_fround$2835+2
  6876                           
  6877                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6878  001BFA  C035  F023         	movff	_fround$2835,___ftmul@f1
  6879  001BFE  C036  F024         	movff	_fround$2835+1,___ftmul@f1+1
  6880  001C02  C037  F025         	movff	_fround$2835+2,___ftmul@f1+2
  6881  001C06  0E00               	movlw	0
  6882  001C08  6E26               	movwf	___ftmul@f2,c
  6883  001C0A  0E00               	movlw	0
  6884  001C0C  6E27               	movwf	___ftmul@f2+1,c
  6885  001C0E  0E3F               	movlw	63
  6886  001C10  6E28               	movwf	___ftmul@f2+2,c
  6887  001C12  ECE8  F011         	call	___ftmul	;wreg free
  6888  001C16  C023  F032         	movff	?___ftmul,?_fround
  6889  001C1A  C024  F033         	movff	?___ftmul+1,?_fround+1
  6890  001C1E  C025  F034         	movff	?___ftmul+2,?_fround+2
  6891  001C22  0012               	return	
  6892  001C24                     l7447:
  6893                           
  6894                           ;doprnt.c: 415: else if(prec > 10)
  6895  001C24  0E0A               	movlw	10
  6896  001C26  643B               	cpfsgt	fround@prec,c
  6897  001C28  D05D               	goto	l7455
  6898                           
  6899                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6900  001C2A  0E00               	movlw	0
  6901  001C2C  6E20               	movwf	___wmul@multiplicand+1,c
  6902  001C2E  0E03               	movlw	3
  6903  001C30  6E1F               	movwf	___wmul@multiplicand,c
  6904  001C32  0E00               	movlw	0
  6905  001C34  6E12               	movwf	___awmod@divisor+1,c
  6906  001C36  0E0A               	movlw	10
  6907  001C38  6E11               	movwf	___awmod@divisor,c
  6908  001C3A  C03B  F00F         	movff	fround@prec,___awmod@dividend
  6909  001C3E  6A10               	clrf	___awmod@dividend+1,c
  6910  001C40  ECD9  F015         	call	___awmod	;wreg free
  6911  001C44  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  6912  001C48  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  6913  001C4C  EC68  F018         	call	___wmul	;wreg free
  6914  001C50  0E59               	movlw	low __npowers_
  6915  001C52  241D               	addwf	?___wmul,w,c
  6916  001C54  6EF6               	movwf	tblptrl,c
  6917  001C56  0E7F               	movlw	high __npowers_
  6918  001C58  201E               	addwfc	?___wmul+1,w,c
  6919  001C5A  6EF7               	movwf	tblptrh,c
  6920  001C5C                     	if	0	;There are less than 3 active tblptr bytes
  6921  001C5C                     	endif
  6922  001C5C  0009               	tblrd		*+
  6923  001C5E  CFF5 F026          	movff	tablat,___ftmul@f2
  6924  001C62  0009               	tblrd		*+
  6925  001C64  CFF5 F027          	movff	tablat,___ftmul@f2+1
  6926  001C68  000A               	tblrd		*-
  6927  001C6A  CFF5 F028          	movff	tablat,___ftmul@f2+2
  6928  001C6E  0E00               	movlw	0
  6929  001C70  6E18               	movwf	___awdiv@divisor+1,c
  6930  001C72  0E0A               	movlw	10
  6931  001C74  6E17               	movwf	___awdiv@divisor,c
  6932  001C76  C03B  F015         	movff	fround@prec,___awdiv@dividend
  6933  001C7A  6A16               	clrf	___awdiv@dividend+1,c
  6934  001C7C  EC5E  F014         	call	___awdiv	;wreg free
  6935  001C80  0E09               	movlw	9
  6936  001C82  2415               	addwf	?___awdiv,w,c
  6937  001C84  6E1D               	movwf	___wmul@multiplier,c
  6938  001C86  0E00               	movlw	0
  6939  001C88  2016               	addwfc	?___awdiv+1,w,c
  6940  001C8A  6E1E               	movwf	___wmul@multiplier+1,c
  6941  001C8C  0E00               	movlw	0
  6942  001C8E  6E20               	movwf	___wmul@multiplicand+1,c
  6943  001C90  0E03               	movlw	3
  6944  001C92  6E1F               	movwf	___wmul@multiplicand,c
  6945  001C94  EC68  F018         	call	___wmul	;wreg free
  6946  001C98  0E59               	movlw	low __npowers_
  6947  001C9A  241D               	addwf	?___wmul,w,c
  6948  001C9C  6EF6               	movwf	tblptrl,c
  6949  001C9E  0E7F               	movlw	high __npowers_
  6950  001CA0  201E               	addwfc	?___wmul+1,w,c
  6951  001CA2  6EF7               	movwf	tblptrh,c
  6952  001CA4                     	if	0	;There are less than 3 active tblptr bytes
  6953  001CA4                     	endif
  6954  001CA4  0009               	tblrd		*+
  6955  001CA6  CFF5 F023          	movff	tablat,___ftmul@f1
  6956  001CAA  0009               	tblrd		*+
  6957  001CAC  CFF5 F024          	movff	tablat,___ftmul@f1+1
  6958  001CB0  000A               	tblrd		*-
  6959  001CB2  CFF5 F025          	movff	tablat,___ftmul@f1+2
  6960  001CB6  ECE8  F011         	call	___ftmul	;wreg free
  6961  001CBA  C023  F038         	movff	?___ftmul,_fround$2834
  6962  001CBE  C024  F039         	movff	?___ftmul+1,_fround$2834+1
  6963  001CC2  C025  F03A         	movff	?___ftmul+2,_fround$2834+2
  6964                           
  6965                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6966  001CC6  C038  F023         	movff	_fround$2834,___ftmul@f1
  6967  001CCA  C039  F024         	movff	_fround$2834+1,___ftmul@f1+1
  6968  001CCE  C03A  F025         	movff	_fround$2834+2,___ftmul@f1+2
  6969  001CD2  0E00               	movlw	0
  6970  001CD4  6E26               	movwf	___ftmul@f2,c
  6971  001CD6  0E00               	movlw	0
  6972  001CD8  6E27               	movwf	___ftmul@f2+1,c
  6973  001CDA  0E3F               	movlw	63
  6974  001CDC  6E28               	movwf	___ftmul@f2+2,c
  6975  001CDE  ECE8  F011         	call	___ftmul	;wreg free
  6976  001CE2  D799               	goto	L7
  6977  001CE4                     l7455:
  6978                           
  6979                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  6980  001CE4  503B               	movf	fround@prec,w,c
  6981  001CE6  0D03               	mullw	3
  6982  001CE8  0E59               	movlw	low __npowers_
  6983  001CEA  24F3               	addwf	prodl,w,c
  6984  001CEC  6EF6               	movwf	tblptrl,c
  6985  001CEE  0E7F               	movlw	high __npowers_
  6986  001CF0  20F4               	addwfc	prodh,w,c
  6987  001CF2  6EF7               	movwf	tblptrh,c
  6988  001CF4                     	if	0	;There are less than 3 active tblptr bytes
  6989  001CF4                     	endif
  6990  001CF4  0009               	tblrd		*+
  6991  001CF6  CFF5 F023          	movff	tablat,___ftmul@f1
  6992  001CFA  0009               	tblrd		*+
  6993  001CFC  CFF5 F024          	movff	tablat,___ftmul@f1+1
  6994  001D00  000A               	tblrd		*-
  6995  001D02  CFF5 F025          	movff	tablat,___ftmul@f1+2
  6996  001D06  0E00               	movlw	0
  6997  001D08  6E26               	movwf	___ftmul@f2,c
  6998  001D0A  0E00               	movlw	0
  6999  001D0C  6E27               	movwf	___ftmul@f2+1,c
  7000  001D0E  0E3F               	movlw	63
  7001  001D10  6E28               	movwf	___ftmul@f2+2,c
  7002  001D12  ECE8  F011         	call	___ftmul	;wreg free
  7003  001D16  C023  F032         	movff	?___ftmul,?_fround
  7004  001D1A  C024  F033         	movff	?___ftmul+1,?_fround+1
  7005  001D1E  C025  F034         	movff	?___ftmul+2,?_fround+2
  7006  001D22  0012               	return	
  7007  001D24                     __end_of_fround:
  7008                           	opt stack 0
  7009                           tblptru	equ	0xFF8
  7010                           tblptrh	equ	0xFF7
  7011                           tblptrl	equ	0xFF6
  7012                           tablat	equ	0xFF5
  7013                           prodh	equ	0xFF4
  7014                           prodl	equ	0xFF3
  7015                           intcon	equ	0xFF2
  7016                           intcon2	equ	0xFF1
  7017                           postinc0	equ	0xFEE
  7018                           wreg	equ	0xFE8
  7019                           postinc1	equ	0xFE6
  7020                           postdec1	equ	0xFE5
  7021                           fsr1h	equ	0xFE2
  7022                           fsr1l	equ	0xFE1
  7023                           indf2	equ	0xFDF
  7024                           postinc2	equ	0xFDE
  7025                           postdec2	equ	0xFDD
  7026                           fsr2h	equ	0xFDA
  7027                           fsr2l	equ	0xFD9
  7028                           status	equ	0xFD8
  7029                           
  7030 ;; *************** function ___ftmul *****************
  7031 ;; Defined at:
  7032 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;  f1              3   34[COMRAM] float 
  7035 ;;  f2              3   37[COMRAM] float 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  f3_as_produc    3   44[COMRAM] unsigned um
  7038 ;;  sign            1   48[COMRAM] unsigned char 
  7039 ;;  cntr            1   47[COMRAM] unsigned char 
  7040 ;;  exp             1   43[COMRAM] unsigned char 
  7041 ;; Return value:  Size  Location     Type
  7042 ;;                  3   34[COMRAM] float 
  7043 ;; Registers used:
  7044 ;;		wreg, status,2, status,0, cstack
  7045 ;; Tracked objects:
  7046 ;;		On entry : 0/0
  7047 ;;		On exit  : 0/0
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7050 ;;      Params:         6       0       0       0       0       0       0
  7051 ;;      Locals:         6       0       0       0       0       0       0
  7052 ;;      Temps:          3       0       0       0       0       0       0
  7053 ;;      Totals:        15       0       0       0       0       0       0
  7054 ;;Total ram usage:       15 bytes
  7055 ;; Hardware stack levels used:    1
  7056 ;; Hardware stack levels required when called:    4
  7057 ;; This function calls:
  7058 ;;		___ftpack
  7059 ;; This function is called by:
  7060 ;;		_Run_Mode
  7061 ;;		_fround
  7062 ;;		_scale
  7063 ;;		_printf
  7064 ;;		_Temp_Filter
  7065 ;;		_Temp_Convert
  7066 ;;		_CheckTestReading
  7067 ;;		_log
  7068 ;;		_eval_poly
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072                           	psect	text26
  7073  0023D0                     __ptext26:
  7074                           	opt stack 0
  7075  0023D0                     ___ftmul:
  7076                           	opt stack 24
  7077                           
  7078                           ;incstack = 0
  7079  0023D0  C025  F029         	movff	___ftmul@f1+2,??___ftmul
  7080  0023D4  6A2A               	clrf	(??___ftmul+1)& (0+255),c
  7081  0023D6  6A2B               	clrf	(??___ftmul+2)& (0+255),c
  7082  0023D8  3424               	rlcf	___ftmul@f1+1,w,c
  7083  0023DA  3629               	rlcf	??___ftmul& (0+255),f,c
  7084  0023DC  E301               	bnc	u7161
  7085  0023DE  802A               	bsf	(??___ftmul+1)& (0+255),0,c
  7086  0023E0                     u7161:
  7087  0023E0  5029               	movf	??___ftmul,w,c
  7088  0023E2  6E2C               	movwf	___ftmul@exp,c
  7089  0023E4  502C               	movf	___ftmul@exp,w,c
  7090  0023E6  A4D8               	btfss	status,2,c
  7091  0023E8  D007               	goto	l7137
  7092  0023EA  0E00               	movlw	0
  7093  0023EC  6E23               	movwf	?___ftmul,c
  7094  0023EE  0E00               	movlw	0
  7095  0023F0  6E24               	movwf	?___ftmul+1,c
  7096  0023F2  0E00               	movlw	0
  7097  0023F4  6E25               	movwf	?___ftmul+2,c
  7098  0023F6  0012               	return	
  7099  0023F8                     l7137:
  7100  0023F8  C028  F029         	movff	___ftmul@f2+2,??___ftmul
  7101  0023FC  6A2A               	clrf	(??___ftmul+1)& (0+255),c
  7102  0023FE  6A2B               	clrf	(??___ftmul+2)& (0+255),c
  7103  002400  3427               	rlcf	___ftmul@f2+1,w,c
  7104  002402  3629               	rlcf	??___ftmul& (0+255),f,c
  7105  002404  E301               	bnc	u7181
  7106  002406  802A               	bsf	(??___ftmul+1)& (0+255),0,c
  7107  002408                     u7181:
  7108  002408  5029               	movf	??___ftmul,w,c
  7109  00240A  6E31               	movwf	___ftmul@sign,c
  7110  00240C  5031               	movf	___ftmul@sign,w,c
  7111  00240E  A4D8               	btfss	status,2,c
  7112  002410  D007               	goto	l7143
  7113  002412  0E00               	movlw	0
  7114  002414  6E23               	movwf	?___ftmul,c
  7115  002416  0E00               	movlw	0
  7116  002418  6E24               	movwf	?___ftmul+1,c
  7117  00241A  0E00               	movlw	0
  7118  00241C  6E25               	movwf	?___ftmul+2,c
  7119  00241E  0012               	return	
  7120  002420                     l7143:
  7121  002420  5031               	movf	___ftmul@sign,w,c
  7122  002422  0F7B               	addlw	123
  7123  002424  262C               	addwf	___ftmul@exp,f,c
  7124  002426  C025  F031         	movff	___ftmul@f1+2,___ftmul@sign
  7125  00242A  5028               	movf	___ftmul@f2+2,w,c
  7126  00242C  1A31               	xorwf	___ftmul@sign,f,c
  7127  00242E  0E80               	movlw	128
  7128  002430  1631               	andwf	___ftmul@sign,f,c
  7129  002432  8E24               	bsf	___ftmul@f1+1,7,c
  7130  002434  8E27               	bsf	___ftmul@f2+1,7,c
  7131  002436  0EFF               	movlw	255
  7132  002438  1626               	andwf	___ftmul@f2,f,c
  7133  00243A  0EFF               	movlw	255
  7134  00243C  1627               	andwf	___ftmul@f2+1,f,c
  7135  00243E  0E00               	movlw	0
  7136  002440  1628               	andwf	___ftmul@f2+2,f,c
  7137  002442  0E00               	movlw	0
  7138  002444  6E2D               	movwf	___ftmul@f3_as_product,c
  7139  002446  0E00               	movlw	0
  7140  002448  6E2E               	movwf	___ftmul@f3_as_product+1,c
  7141  00244A  0E00               	movlw	0
  7142  00244C  6E2F               	movwf	___ftmul@f3_as_product+2,c
  7143  00244E  0E07               	movlw	7
  7144  002450  6E30               	movwf	___ftmul@cntr,c
  7145  002452                     l7157:
  7146  002452  A023               	btfss	___ftmul@f1,0,c
  7147  002454  D006               	goto	l7161
  7148  002456  5026               	movf	___ftmul@f2,w,c
  7149  002458  262D               	addwf	___ftmul@f3_as_product,f,c
  7150  00245A  5027               	movf	___ftmul@f2+1,w,c
  7151  00245C  222E               	addwfc	___ftmul@f3_as_product+1,f,c
  7152  00245E  5028               	movf	___ftmul@f2+2,w,c
  7153  002460  222F               	addwfc	___ftmul@f3_as_product+2,f,c
  7154  002462                     l7161:
  7155  002462  90D8               	bcf	status,0,c
  7156  002464  3225               	rrcf	___ftmul@f1+2,f,c
  7157  002466  3224               	rrcf	___ftmul@f1+1,f,c
  7158  002468  3223               	rrcf	___ftmul@f1,f,c
  7159  00246A  90D8               	bcf	status,0,c
  7160  00246C  3626               	rlcf	___ftmul@f2,f,c
  7161  00246E  3627               	rlcf	___ftmul@f2+1,f,c
  7162  002470  3628               	rlcf	___ftmul@f2+2,f,c
  7163  002472  2E30               	decfsz	___ftmul@cntr,f,c
  7164  002474  D7EE               	goto	l7157
  7165  002476  0E09               	movlw	9
  7166  002478  6E30               	movwf	___ftmul@cntr,c
  7167  00247A                     l7167:
  7168  00247A  A023               	btfss	___ftmul@f1,0,c
  7169  00247C  D006               	goto	l7171
  7170  00247E  5026               	movf	___ftmul@f2,w,c
  7171  002480  262D               	addwf	___ftmul@f3_as_product,f,c
  7172  002482  5027               	movf	___ftmul@f2+1,w,c
  7173  002484  222E               	addwfc	___ftmul@f3_as_product+1,f,c
  7174  002486  5028               	movf	___ftmul@f2+2,w,c
  7175  002488  222F               	addwfc	___ftmul@f3_as_product+2,f,c
  7176  00248A                     l7171:
  7177  00248A  90D8               	bcf	status,0,c
  7178  00248C  3225               	rrcf	___ftmul@f1+2,f,c
  7179  00248E  3224               	rrcf	___ftmul@f1+1,f,c
  7180  002490  3223               	rrcf	___ftmul@f1,f,c
  7181  002492  90D8               	bcf	status,0,c
  7182  002494  322F               	rrcf	___ftmul@f3_as_product+2,f,c
  7183  002496  322E               	rrcf	___ftmul@f3_as_product+1,f,c
  7184  002498  322D               	rrcf	___ftmul@f3_as_product,f,c
  7185  00249A  2E30               	decfsz	___ftmul@cntr,f,c
  7186  00249C  D7EE               	goto	l7167
  7187  00249E  C02D  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  7188  0024A2  C02E  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7189  0024A6  C02F  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7190  0024AA  C02C  F012         	movff	___ftmul@exp,___ftpack@exp
  7191  0024AE  C031  F013         	movff	___ftmul@sign,___ftpack@sign
  7192  0024B2  EC29  F013         	call	___ftpack	;wreg free
  7193  0024B6  C00F  F023         	movff	?___ftpack,?___ftmul
  7194  0024BA  C010  F024         	movff	?___ftpack+1,?___ftmul+1
  7195  0024BE  C011  F025         	movff	?___ftpack+2,?___ftmul+2
  7196  0024C2  0012               	return	
  7197  0024C4                     __end_of___ftmul:
  7198                           	opt stack 0
  7199                           tblptru	equ	0xFF8
  7200                           tblptrh	equ	0xFF7
  7201                           tblptrl	equ	0xFF6
  7202                           tablat	equ	0xFF5
  7203                           prodh	equ	0xFF4
  7204                           prodl	equ	0xFF3
  7205                           intcon	equ	0xFF2
  7206                           intcon2	equ	0xFF1
  7207                           postinc0	equ	0xFEE
  7208                           wreg	equ	0xFE8
  7209                           postinc1	equ	0xFE6
  7210                           postdec1	equ	0xFE5
  7211                           fsr1h	equ	0xFE2
  7212                           fsr1l	equ	0xFE1
  7213                           indf2	equ	0xFDF
  7214                           postinc2	equ	0xFDE
  7215                           postdec2	equ	0xFDD
  7216                           fsr2h	equ	0xFDA
  7217                           fsr2l	equ	0xFD9
  7218                           status	equ	0xFD8
  7219                           
  7220 ;; *************** function ___awmod *****************
  7221 ;; Defined at:
  7222 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  dividend        2   14[COMRAM] int 
  7225 ;;  divisor         2   16[COMRAM] int 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;  sign            1   19[COMRAM] unsigned char 
  7228 ;;  counter         1   18[COMRAM] unsigned char 
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  2   14[COMRAM] int 
  7231 ;; Registers used:
  7232 ;;		wreg, status,2, status,0
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7238 ;;      Params:         4       0       0       0       0       0       0
  7239 ;;      Locals:         2       0       0       0       0       0       0
  7240 ;;      Temps:          0       0       0       0       0       0       0
  7241 ;;      Totals:         6       0       0       0       0       0       0
  7242 ;;Total ram usage:        6 bytes
  7243 ;; Hardware stack levels used:    1
  7244 ;; Hardware stack levels required when called:    3
  7245 ;; This function calls:
  7246 ;;		Nothing
  7247 ;; This function is called by:
  7248 ;;		_fround
  7249 ;;		_scale
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text27
  7254  002BB2                     __ptext27:
  7255                           	opt stack 0
  7256  002BB2                     ___awmod:
  7257                           	opt stack 25
  7258                           
  7259                           ;incstack = 0
  7260  002BB2  0E00               	movlw	0
  7261  002BB4  6E14               	movwf	___awmod@sign,c
  7262  002BB6  AE10               	btfss	___awmod@dividend+1,7,c
  7263  002BB8  D006               	goto	l7231
  7264  002BBA  6C0F               	negf	___awmod@dividend,c
  7265  002BBC  1E10               	comf	___awmod@dividend+1,f,c
  7266  002BBE  B0D8               	btfsc	status,0,c
  7267  002BC0  2A10               	incf	___awmod@dividend+1,f,c
  7268  002BC2  0E01               	movlw	1
  7269  002BC4  6E14               	movwf	___awmod@sign,c
  7270  002BC6                     l7231:
  7271  002BC6  AE12               	btfss	___awmod@divisor+1,7,c
  7272  002BC8  D004               	goto	l7235
  7273  002BCA  6C11               	negf	___awmod@divisor,c
  7274  002BCC  1E12               	comf	___awmod@divisor+1,f,c
  7275  002BCE  B0D8               	btfsc	status,0,c
  7276  002BD0  2A12               	incf	___awmod@divisor+1,f,c
  7277  002BD2                     l7235:
  7278  002BD2  5011               	movf	___awmod@divisor,w,c
  7279  002BD4  1012               	iorwf	___awmod@divisor+1,w,c
  7280  002BD6  B4D8               	btfsc	status,2,c
  7281  002BD8  D018               	goto	l7251
  7282  002BDA  0E01               	movlw	1
  7283  002BDC  6E13               	movwf	___awmod@counter,c
  7284  002BDE  D004               	goto	l7241
  7285  002BE0                     l7239:
  7286  002BE0  90D8               	bcf	status,0,c
  7287  002BE2  3611               	rlcf	___awmod@divisor,f,c
  7288  002BE4  3612               	rlcf	___awmod@divisor+1,f,c
  7289  002BE6  2A13               	incf	___awmod@counter,f,c
  7290  002BE8                     l7241:
  7291  002BE8  AE12               	btfss	___awmod@divisor+1,7,c
  7292  002BEA  D7FA               	goto	l7239
  7293  002BEC                     l7243:
  7294  002BEC  5011               	movf	___awmod@divisor,w,c
  7295  002BEE  5C0F               	subwf	___awmod@dividend,w,c
  7296  002BF0  5012               	movf	___awmod@divisor+1,w,c
  7297  002BF2  5810               	subwfb	___awmod@dividend+1,w,c
  7298  002BF4  A0D8               	btfss	status,0,c
  7299  002BF6  D004               	goto	l7247
  7300  002BF8  5011               	movf	___awmod@divisor,w,c
  7301  002BFA  5E0F               	subwf	___awmod@dividend,f,c
  7302  002BFC  5012               	movf	___awmod@divisor+1,w,c
  7303  002BFE  5A10               	subwfb	___awmod@dividend+1,f,c
  7304  002C00                     l7247:
  7305  002C00  90D8               	bcf	status,0,c
  7306  002C02  3212               	rrcf	___awmod@divisor+1,f,c
  7307  002C04  3211               	rrcf	___awmod@divisor,f,c
  7308  002C06  2E13               	decfsz	___awmod@counter,f,c
  7309  002C08  D7F1               	goto	l7243
  7310  002C0A                     l7251:
  7311  002C0A  5014               	movf	___awmod@sign,w,c
  7312  002C0C  B4D8               	btfsc	status,2,c
  7313  002C0E  D004               	goto	l7255
  7314  002C10  6C0F               	negf	___awmod@dividend,c
  7315  002C12  1E10               	comf	___awmod@dividend+1,f,c
  7316  002C14  B0D8               	btfsc	status,0,c
  7317  002C16  2A10               	incf	___awmod@dividend+1,f,c
  7318  002C18                     l7255:
  7319  002C18  C00F  F00F         	movff	___awmod@dividend,?___awmod
  7320  002C1C  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  7321  002C20  0012               	return	
  7322  002C22                     __end_of___awmod:
  7323                           	opt stack 0
  7324                           tblptru	equ	0xFF8
  7325                           tblptrh	equ	0xFF7
  7326                           tblptrl	equ	0xFF6
  7327                           tablat	equ	0xFF5
  7328                           prodh	equ	0xFF4
  7329                           prodl	equ	0xFF3
  7330                           intcon	equ	0xFF2
  7331                           intcon2	equ	0xFF1
  7332                           postinc0	equ	0xFEE
  7333                           wreg	equ	0xFE8
  7334                           postinc1	equ	0xFE6
  7335                           postdec1	equ	0xFE5
  7336                           fsr1h	equ	0xFE2
  7337                           fsr1l	equ	0xFE1
  7338                           indf2	equ	0xFDF
  7339                           postinc2	equ	0xFDE
  7340                           postdec2	equ	0xFDD
  7341                           fsr2h	equ	0xFDA
  7342                           fsr2l	equ	0xFD9
  7343                           status	equ	0xFD8
  7344                           
  7345 ;; *************** function ___awdiv *****************
  7346 ;; Defined at:
  7347 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;  dividend        2   20[COMRAM] int 
  7350 ;;  divisor         2   22[COMRAM] int 
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;  quotient        2   26[COMRAM] int 
  7353 ;;  sign            1   25[COMRAM] unsigned char 
  7354 ;;  counter         1   24[COMRAM] unsigned char 
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  2   20[COMRAM] int 
  7357 ;; Registers used:
  7358 ;;		wreg, status,2, status,0
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7364 ;;      Params:         4       0       0       0       0       0       0
  7365 ;;      Locals:         4       0       0       0       0       0       0
  7366 ;;      Temps:          0       0       0       0       0       0       0
  7367 ;;      Totals:         8       0       0       0       0       0       0
  7368 ;;Total ram usage:        8 bytes
  7369 ;; Hardware stack levels used:    1
  7370 ;; Hardware stack levels required when called:    3
  7371 ;; This function calls:
  7372 ;;		Nothing
  7373 ;; This function is called by:
  7374 ;;		_fround
  7375 ;;		_scale
  7376 ;;		_printf
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text28
  7381  0028BC                     __ptext28:
  7382                           	opt stack 0
  7383  0028BC                     ___awdiv:
  7384                           	opt stack 25
  7385                           
  7386                           ;incstack = 0
  7387  0028BC  0E00               	movlw	0
  7388  0028BE  6E1A               	movwf	___awdiv@sign,c
  7389  0028C0  AE18               	btfss	___awdiv@divisor+1,7,c
  7390  0028C2  D006               	goto	l7187
  7391  0028C4  6C17               	negf	___awdiv@divisor,c
  7392  0028C6  1E18               	comf	___awdiv@divisor+1,f,c
  7393  0028C8  B0D8               	btfsc	status,0,c
  7394  0028CA  2A18               	incf	___awdiv@divisor+1,f,c
  7395  0028CC  0E01               	movlw	1
  7396  0028CE  6E1A               	movwf	___awdiv@sign,c
  7397  0028D0                     l7187:
  7398  0028D0  AE16               	btfss	___awdiv@dividend+1,7,c
  7399  0028D2  D006               	goto	l7193
  7400  0028D4  6C15               	negf	___awdiv@dividend,c
  7401  0028D6  1E16               	comf	___awdiv@dividend+1,f,c
  7402  0028D8  B0D8               	btfsc	status,0,c
  7403  0028DA  2A16               	incf	___awdiv@dividend+1,f,c
  7404  0028DC  0E01               	movlw	1
  7405  0028DE  1A1A               	xorwf	___awdiv@sign,f,c
  7406  0028E0                     l7193:
  7407  0028E0  0E00               	movlw	0
  7408  0028E2  6E1C               	movwf	___awdiv@quotient+1,c
  7409  0028E4  0E00               	movlw	0
  7410  0028E6  6E1B               	movwf	___awdiv@quotient,c
  7411  0028E8  5017               	movf	___awdiv@divisor,w,c
  7412  0028EA  1018               	iorwf	___awdiv@divisor+1,w,c
  7413  0028EC  B4D8               	btfsc	status,2,c
  7414  0028EE  D01C               	goto	l7215
  7415  0028F0  0E01               	movlw	1
  7416  0028F2  6E19               	movwf	___awdiv@counter,c
  7417  0028F4  D004               	goto	l7201
  7418  0028F6                     l7199:
  7419  0028F6  90D8               	bcf	status,0,c
  7420  0028F8  3617               	rlcf	___awdiv@divisor,f,c
  7421  0028FA  3618               	rlcf	___awdiv@divisor+1,f,c
  7422  0028FC  2A19               	incf	___awdiv@counter,f,c
  7423  0028FE                     l7201:
  7424  0028FE  AE18               	btfss	___awdiv@divisor+1,7,c
  7425  002900  D7FA               	goto	l7199
  7426  002902                     l7203:
  7427  002902  90D8               	bcf	status,0,c
  7428  002904  361B               	rlcf	___awdiv@quotient,f,c
  7429  002906  361C               	rlcf	___awdiv@quotient+1,f,c
  7430  002908  5017               	movf	___awdiv@divisor,w,c
  7431  00290A  5C15               	subwf	___awdiv@dividend,w,c
  7432  00290C  5018               	movf	___awdiv@divisor+1,w,c
  7433  00290E  5816               	subwfb	___awdiv@dividend+1,w,c
  7434  002910  A0D8               	btfss	status,0,c
  7435  002912  D005               	goto	l7211
  7436  002914  5017               	movf	___awdiv@divisor,w,c
  7437  002916  5E15               	subwf	___awdiv@dividend,f,c
  7438  002918  5018               	movf	___awdiv@divisor+1,w,c
  7439  00291A  5A16               	subwfb	___awdiv@dividend+1,f,c
  7440  00291C  801B               	bsf	___awdiv@quotient,0,c
  7441  00291E                     l7211:
  7442  00291E  90D8               	bcf	status,0,c
  7443  002920  3218               	rrcf	___awdiv@divisor+1,f,c
  7444  002922  3217               	rrcf	___awdiv@divisor,f,c
  7445  002924  2E19               	decfsz	___awdiv@counter,f,c
  7446  002926  D7ED               	goto	l7203
  7447  002928                     l7215:
  7448  002928  501A               	movf	___awdiv@sign,w,c
  7449  00292A  B4D8               	btfsc	status,2,c
  7450  00292C  D004               	goto	l7219
  7451  00292E  6C1B               	negf	___awdiv@quotient,c
  7452  002930  1E1C               	comf	___awdiv@quotient+1,f,c
  7453  002932  B0D8               	btfsc	status,0,c
  7454  002934  2A1C               	incf	___awdiv@quotient+1,f,c
  7455  002936                     l7219:
  7456  002936  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  7457  00293A  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  7458  00293E  0012               	return	
  7459  002940                     __end_of___awdiv:
  7460                           	opt stack 0
  7461                           tblptru	equ	0xFF8
  7462                           tblptrh	equ	0xFF7
  7463                           tblptrl	equ	0xFF6
  7464                           tablat	equ	0xFF5
  7465                           prodh	equ	0xFF4
  7466                           prodl	equ	0xFF3
  7467                           intcon	equ	0xFF2
  7468                           intcon2	equ	0xFF1
  7469                           postinc0	equ	0xFEE
  7470                           wreg	equ	0xFE8
  7471                           postinc1	equ	0xFE6
  7472                           postdec1	equ	0xFE5
  7473                           fsr1h	equ	0xFE2
  7474                           fsr1l	equ	0xFE1
  7475                           indf2	equ	0xFDF
  7476                           postinc2	equ	0xFDE
  7477                           postdec2	equ	0xFDD
  7478                           fsr2h	equ	0xFDA
  7479                           fsr2l	equ	0xFD9
  7480                           status	equ	0xFD8
  7481                           
  7482 ;; *************** function __tdiv_to_l_ *****************
  7483 ;; Defined at:
  7484 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  f1              3   14[COMRAM] float 
  7487 ;;  f2              3   17[COMRAM] float 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  quot            4   23[COMRAM] unsigned long 
  7490 ;;  exp1            1   28[COMRAM] unsigned char 
  7491 ;;  cntr            1   27[COMRAM] unsigned char 
  7492 ;; Return value:  Size  Location     Type
  7493 ;;                  4   14[COMRAM] unsigned long 
  7494 ;; Registers used:
  7495 ;;		wreg, status,2, status,0
  7496 ;; Tracked objects:
  7497 ;;		On entry : 0/0
  7498 ;;		On exit  : 0/0
  7499 ;;		Unchanged: 0/0
  7500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7501 ;;      Params:         6       0       0       0       0       0       0
  7502 ;;      Locals:         6       0       0       0       0       0       0
  7503 ;;      Temps:          3       0       0       0       0       0       0
  7504 ;;      Totals:        15       0       0       0       0       0       0
  7505 ;;Total ram usage:       15 bytes
  7506 ;; Hardware stack levels used:    1
  7507 ;; Hardware stack levels required when called:    3
  7508 ;; This function calls:
  7509 ;;		Nothing
  7510 ;; This function is called by:
  7511 ;;		_printf
  7512 ;; This function uses a non-reentrant model
  7513 ;;
  7514                           
  7515                           	psect	text29
  7516  001F3A                     __ptext29:
  7517                           	opt stack 0
  7518  001F3A                     __tdiv_to_l_:
  7519                           	opt stack 26
  7520                           
  7521                           ;incstack = 0
  7522  001F3A  C011  F015         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7523  001F3E  6A16               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  7524  001F40  6A17               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  7525  001F42  3410               	rlcf	__tdiv_to_l_@f1+1,w,c
  7526  001F44  3615               	rlcf	??__tdiv_to_l_& (0+255),f,c
  7527  001F46  E301               	bnc	u7601
  7528  001F48  8016               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  7529  001F4A                     u7601:
  7530  001F4A  5015               	movf	??__tdiv_to_l_,w,c
  7531  001F4C  6E1D               	movwf	__tdiv_to_l_@exp1,c
  7532  001F4E  501D               	movf	__tdiv_to_l_@exp1,w,c
  7533  001F50  A4D8               	btfss	status,2,c
  7534  001F52  D009               	goto	l7515
  7535  001F54  0E00               	movlw	0
  7536  001F56  6E0F               	movwf	?__tdiv_to_l_,c
  7537  001F58  0E00               	movlw	0
  7538  001F5A  6E10               	movwf	?__tdiv_to_l_+1,c
  7539  001F5C  0E00               	movlw	0
  7540  001F5E  6E11               	movwf	?__tdiv_to_l_+2,c
  7541  001F60  0E00               	movlw	0
  7542  001F62  6E12               	movwf	?__tdiv_to_l_+3,c
  7543  001F64  0012               	return	
  7544  001F66                     l7515:
  7545  001F66  C014  F015         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7546  001F6A  6A16               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  7547  001F6C  6A17               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  7548  001F6E  3413               	rlcf	__tdiv_to_l_@f2+1,w,c
  7549  001F70  3615               	rlcf	??__tdiv_to_l_& (0+255),f,c
  7550  001F72  E301               	bnc	u7621
  7551  001F74  8016               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  7552  001F76                     u7621:
  7553  001F76  5015               	movf	??__tdiv_to_l_,w,c
  7554  001F78  6E1C               	movwf	__tdiv_to_l_@cntr,c
  7555  001F7A  501C               	movf	__tdiv_to_l_@cntr,w,c
  7556  001F7C  A4D8               	btfss	status,2,c
  7557  001F7E  D009               	goto	l7521
  7558  001F80  0E00               	movlw	0
  7559  001F82  6E0F               	movwf	?__tdiv_to_l_,c
  7560  001F84  0E00               	movlw	0
  7561  001F86  6E10               	movwf	?__tdiv_to_l_+1,c
  7562  001F88  0E00               	movlw	0
  7563  001F8A  6E11               	movwf	?__tdiv_to_l_+2,c
  7564  001F8C  0E00               	movlw	0
  7565  001F8E  6E12               	movwf	?__tdiv_to_l_+3,c
  7566  001F90  0012               	return	
  7567  001F92                     l7521:
  7568  001F92  8E10               	bsf	__tdiv_to_l_@f1+1,7,c
  7569  001F94  0EFF               	movlw	255
  7570  001F96  160F               	andwf	__tdiv_to_l_@f1,f,c
  7571  001F98  0EFF               	movlw	255
  7572  001F9A  1610               	andwf	__tdiv_to_l_@f1+1,f,c
  7573  001F9C  0E00               	movlw	0
  7574  001F9E  1611               	andwf	__tdiv_to_l_@f1+2,f,c
  7575  001FA0  8E13               	bsf	__tdiv_to_l_@f2+1,7,c
  7576  001FA2  0EFF               	movlw	255
  7577  001FA4  1612               	andwf	__tdiv_to_l_@f2,f,c
  7578  001FA6  0EFF               	movlw	255
  7579  001FA8  1613               	andwf	__tdiv_to_l_@f2+1,f,c
  7580  001FAA  0E00               	movlw	0
  7581  001FAC  1614               	andwf	__tdiv_to_l_@f2+2,f,c
  7582  001FAE  0E00               	movlw	0
  7583  001FB0  6E18               	movwf	__tdiv_to_l_@quot,c
  7584  001FB2  0E00               	movlw	0
  7585  001FB4  6E19               	movwf	__tdiv_to_l_@quot+1,c
  7586  001FB6  0E00               	movlw	0
  7587  001FB8  6E1A               	movwf	__tdiv_to_l_@quot+2,c
  7588  001FBA  0E00               	movlw	0
  7589  001FBC  6E1B               	movwf	__tdiv_to_l_@quot+3,c
  7590  001FBE  0E7F               	movlw	127
  7591  001FC0  5E1D               	subwf	__tdiv_to_l_@exp1,f,c
  7592  001FC2  501C               	movf	__tdiv_to_l_@cntr,w,c
  7593  001FC4  0F98               	addlw	152
  7594  001FC6  5E1D               	subwf	__tdiv_to_l_@exp1,f,c
  7595  001FC8  0E18               	movlw	24
  7596  001FCA  6E1C               	movwf	__tdiv_to_l_@cntr,c
  7597  001FCC                     l1398:
  7598  001FCC  90D8               	bcf	status,0,c
  7599  001FCE  3618               	rlcf	__tdiv_to_l_@quot,f,c
  7600  001FD0  3619               	rlcf	__tdiv_to_l_@quot+1,f,c
  7601  001FD2  361A               	rlcf	__tdiv_to_l_@quot+2,f,c
  7602  001FD4  361B               	rlcf	__tdiv_to_l_@quot+3,f,c
  7603  001FD6  5012               	movf	__tdiv_to_l_@f2,w,c
  7604  001FD8  5C0F               	subwf	__tdiv_to_l_@f1,w,c
  7605  001FDA  5013               	movf	__tdiv_to_l_@f2+1,w,c
  7606  001FDC  5810               	subwfb	__tdiv_to_l_@f1+1,w,c
  7607  001FDE  5014               	movf	__tdiv_to_l_@f2+2,w,c
  7608  001FE0  5811               	subwfb	__tdiv_to_l_@f1+2,w,c
  7609  001FE2  A0D8               	btfss	status,0,c
  7610  001FE4  D007               	goto	l1399
  7611  001FE6  5012               	movf	__tdiv_to_l_@f2,w,c
  7612  001FE8  5E0F               	subwf	__tdiv_to_l_@f1,f,c
  7613  001FEA  5013               	movf	__tdiv_to_l_@f2+1,w,c
  7614  001FEC  5A10               	subwfb	__tdiv_to_l_@f1+1,f,c
  7615  001FEE  5014               	movf	__tdiv_to_l_@f2+2,w,c
  7616  001FF0  5A11               	subwfb	__tdiv_to_l_@f1+2,f,c
  7617  001FF2  8018               	bsf	__tdiv_to_l_@quot,0,c
  7618  001FF4                     l1399:
  7619  001FF4  90D8               	bcf	status,0,c
  7620  001FF6  360F               	rlcf	__tdiv_to_l_@f1,f,c
  7621  001FF8  3610               	rlcf	__tdiv_to_l_@f1+1,f,c
  7622  001FFA  3611               	rlcf	__tdiv_to_l_@f1+2,f,c
  7623  001FFC  2E1C               	decfsz	__tdiv_to_l_@cntr,f,c
  7624  001FFE  D7E6               	goto	l1398
  7625  002000  AE1D               	btfss	__tdiv_to_l_@exp1,7,c
  7626  002002  D016               	goto	l7555
  7627  002004  501D               	movf	__tdiv_to_l_@exp1,w,c
  7628  002006  0A80               	xorlw	128
  7629  002008  0F97               	addlw	151
  7630  00200A  B0D8               	btfsc	status,0,c
  7631  00200C  D009               	goto	l7551
  7632  00200E  0E00               	movlw	0
  7633  002010  6E0F               	movwf	?__tdiv_to_l_,c
  7634  002012  0E00               	movlw	0
  7635  002014  6E10               	movwf	?__tdiv_to_l_+1,c
  7636  002016  0E00               	movlw	0
  7637  002018  6E11               	movwf	?__tdiv_to_l_+2,c
  7638  00201A  0E00               	movlw	0
  7639  00201C  6E12               	movwf	?__tdiv_to_l_+3,c
  7640  00201E  0012               	return	
  7641  002020                     l7551:
  7642  002020  90D8               	bcf	status,0,c
  7643  002022  321B               	rrcf	__tdiv_to_l_@quot+3,f,c
  7644  002024  321A               	rrcf	__tdiv_to_l_@quot+2,f,c
  7645  002026  3219               	rrcf	__tdiv_to_l_@quot+1,f,c
  7646  002028  3218               	rrcf	__tdiv_to_l_@quot,f,c
  7647  00202A  3E1D               	incfsz	__tdiv_to_l_@exp1,f,c
  7648  00202C  D7F9               	goto	l7551
  7649  00202E  D015               	goto	l1405
  7650  002030                     l7555:
  7651  002030  0E17               	movlw	23
  7652  002032  641D               	cpfsgt	__tdiv_to_l_@exp1,c
  7653  002034  D00F               	goto	l7563
  7654  002036  0E00               	movlw	0
  7655  002038  6E0F               	movwf	?__tdiv_to_l_,c
  7656  00203A  0E00               	movlw	0
  7657  00203C  6E10               	movwf	?__tdiv_to_l_+1,c
  7658  00203E  0E00               	movlw	0
  7659  002040  6E11               	movwf	?__tdiv_to_l_+2,c
  7660  002042  0E00               	movlw	0
  7661  002044  6E12               	movwf	?__tdiv_to_l_+3,c
  7662  002046  0012               	return	
  7663  002048                     l7561:
  7664  002048  90D8               	bcf	status,0,c
  7665  00204A  3618               	rlcf	__tdiv_to_l_@quot,f,c
  7666  00204C  3619               	rlcf	__tdiv_to_l_@quot+1,f,c
  7667  00204E  361A               	rlcf	__tdiv_to_l_@quot+2,f,c
  7668  002050  361B               	rlcf	__tdiv_to_l_@quot+3,f,c
  7669  002052  061D               	decf	__tdiv_to_l_@exp1,f,c
  7670  002054                     l7563:
  7671  002054  501D               	movf	__tdiv_to_l_@exp1,w,c
  7672  002056  A4D8               	btfss	status,2,c
  7673  002058  D7F7               	goto	l7561
  7674  00205A                     l1405:
  7675  00205A  C018  F00F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7676  00205E  C019  F010         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7677  002062  C01A  F011         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7678  002066  C01B  F012         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7679  00206A  0012               	return		;funcret
  7680  00206C                     __end_of__tdiv_to_l_:
  7681                           	opt stack 0
  7682                           tblptru	equ	0xFF8
  7683                           tblptrh	equ	0xFF7
  7684                           tblptrl	equ	0xFF6
  7685                           tablat	equ	0xFF5
  7686                           prodh	equ	0xFF4
  7687                           prodl	equ	0xFF3
  7688                           intcon	equ	0xFF2
  7689                           intcon2	equ	0xFF1
  7690                           postinc0	equ	0xFEE
  7691                           wreg	equ	0xFE8
  7692                           postinc1	equ	0xFE6
  7693                           postdec1	equ	0xFE5
  7694                           fsr1h	equ	0xFE2
  7695                           fsr1l	equ	0xFE1
  7696                           indf2	equ	0xFDF
  7697                           postinc2	equ	0xFDE
  7698                           postdec2	equ	0xFDD
  7699                           fsr2h	equ	0xFDA
  7700                           fsr2l	equ	0xFD9
  7701                           status	equ	0xFD8
  7702                           
  7703 ;; *************** function __div_to_l_ *****************
  7704 ;; Defined at:
  7705 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;  f1              3   14[COMRAM] unsigned long 
  7708 ;;  f2              3   17[COMRAM] unsigned long 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;  quot            4   20[COMRAM] unsigned long 
  7711 ;;  exp1            1   25[COMRAM] unsigned char 
  7712 ;;  cntr            1   24[COMRAM] unsigned char 
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  4   14[COMRAM] unsigned long 
  7715 ;; Registers used:
  7716 ;;		wreg, status,2, status,0
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7722 ;;      Params:         6       0       0       0       0       0       0
  7723 ;;      Locals:         6       0       0       0       0       0       0
  7724 ;;      Temps:          0       0       0       0       0       0       0
  7725 ;;      Totals:        12       0       0       0       0       0       0
  7726 ;;Total ram usage:       12 bytes
  7727 ;; Hardware stack levels used:    1
  7728 ;; Hardware stack levels required when called:    3
  7729 ;; This function calls:
  7730 ;;		Nothing
  7731 ;; This function is called by:
  7732 ;;		_printf
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736                           	psect	text30
  7737  00206C                     __ptext30:
  7738                           	opt stack 0
  7739  00206C                     __div_to_l_:
  7740                           	opt stack 26
  7741                           
  7742                           ;incstack = 0
  7743  00206C  3411               	rlcf	__div_to_l_@f1+2,w,c
  7744  00206E  3412               	rlcf	__div_to_l_@f1+3,w,c
  7745  002070  6E1A               	movwf	__div_to_l_@exp1,c
  7746  002072  501A               	movf	__div_to_l_@exp1,w,c
  7747  002074  A4D8               	btfss	status,2,c
  7748  002076  D009               	goto	l7571
  7749  002078  0E00               	movlw	0
  7750  00207A  6E0F               	movwf	?__div_to_l_,c
  7751  00207C  0E00               	movlw	0
  7752  00207E  6E10               	movwf	?__div_to_l_+1,c
  7753  002080  0E00               	movlw	0
  7754  002082  6E11               	movwf	?__div_to_l_+2,c
  7755  002084  0E00               	movlw	0
  7756  002086  6E12               	movwf	?__div_to_l_+3,c
  7757  002088  0012               	return	
  7758  00208A                     l7571:
  7759  00208A  3414               	rlcf	__div_to_l_@f2+2,w,c
  7760  00208C  3415               	rlcf	__div_to_l_@f2+3,w,c
  7761  00208E  6E19               	movwf	__div_to_l_@cntr,c
  7762  002090  5019               	movf	__div_to_l_@cntr,w,c
  7763  002092  A4D8               	btfss	status,2,c
  7764  002094  D009               	goto	l7577
  7765  002096  0E00               	movlw	0
  7766  002098  6E0F               	movwf	?__div_to_l_,c
  7767  00209A  0E00               	movlw	0
  7768  00209C  6E10               	movwf	?__div_to_l_+1,c
  7769  00209E  0E00               	movlw	0
  7770  0020A0  6E11               	movwf	?__div_to_l_+2,c
  7771  0020A2  0E00               	movlw	0
  7772  0020A4  6E12               	movwf	?__div_to_l_+3,c
  7773  0020A6  0012               	return	
  7774  0020A8                     l7577:
  7775  0020A8  8E11               	bsf	__div_to_l_@f1+2,7,c
  7776  0020AA  0EFF               	movlw	255
  7777  0020AC  160F               	andwf	__div_to_l_@f1,f,c
  7778  0020AE  0EFF               	movlw	255
  7779  0020B0  1610               	andwf	__div_to_l_@f1+1,f,c
  7780  0020B2  0EFF               	movlw	255
  7781  0020B4  1611               	andwf	__div_to_l_@f1+2,f,c
  7782  0020B6  0E00               	movlw	0
  7783  0020B8  1612               	andwf	__div_to_l_@f1+3,f,c
  7784  0020BA  8E14               	bsf	__div_to_l_@f2+2,7,c
  7785  0020BC  0EFF               	movlw	255
  7786  0020BE  1612               	andwf	__div_to_l_@f2,f,c
  7787  0020C0  0EFF               	movlw	255
  7788  0020C2  1613               	andwf	__div_to_l_@f2+1,f,c
  7789  0020C4  0EFF               	movlw	255
  7790  0020C6  1614               	andwf	__div_to_l_@f2+2,f,c
  7791  0020C8  0E00               	movlw	0
  7792  0020CA  1615               	andwf	__div_to_l_@f2+3,f,c
  7793  0020CC  0E00               	movlw	0
  7794  0020CE  6E15               	movwf	__div_to_l_@quot,c
  7795  0020D0  0E00               	movlw	0
  7796  0020D2  6E16               	movwf	__div_to_l_@quot+1,c
  7797  0020D4  0E00               	movlw	0
  7798  0020D6  6E17               	movwf	__div_to_l_@quot+2,c
  7799  0020D8  0E00               	movlw	0
  7800  0020DA  6E18               	movwf	__div_to_l_@quot+3,c
  7801  0020DC  0E7F               	movlw	127
  7802  0020DE  5E1A               	subwf	__div_to_l_@exp1,f,c
  7803  0020E0  5019               	movf	__div_to_l_@cntr,w,c
  7804  0020E2  0FA0               	addlw	160
  7805  0020E4  5E1A               	subwf	__div_to_l_@exp1,f,c
  7806  0020E6  0E20               	movlw	32
  7807  0020E8  6E19               	movwf	__div_to_l_@cntr,c
  7808  0020EA                     l7591:
  7809  0020EA  90D8               	bcf	status,0,c
  7810  0020EC  3615               	rlcf	__div_to_l_@quot,f,c
  7811  0020EE  3616               	rlcf	__div_to_l_@quot+1,f,c
  7812  0020F0  3617               	rlcf	__div_to_l_@quot+2,f,c
  7813  0020F2  3618               	rlcf	__div_to_l_@quot+3,f,c
  7814  0020F4  5012               	movf	__div_to_l_@f2,w,c
  7815  0020F6  5C0F               	subwf	__div_to_l_@f1,w,c
  7816  0020F8  5013               	movf	__div_to_l_@f2+1,w,c
  7817  0020FA  5810               	subwfb	__div_to_l_@f1+1,w,c
  7818  0020FC  5014               	movf	__div_to_l_@f2+2,w,c
  7819  0020FE  5811               	subwfb	__div_to_l_@f1+2,w,c
  7820  002100  5015               	movf	__div_to_l_@f2+3,w,c
  7821  002102  5812               	subwfb	__div_to_l_@f1+3,w,c
  7822  002104  A0D8               	btfss	status,0,c
  7823  002106  D009               	goto	l7599
  7824  002108  5012               	movf	__div_to_l_@f2,w,c
  7825  00210A  5E0F               	subwf	__div_to_l_@f1,f,c
  7826  00210C  5013               	movf	__div_to_l_@f2+1,w,c
  7827  00210E  5A10               	subwfb	__div_to_l_@f1+1,f,c
  7828  002110  5014               	movf	__div_to_l_@f2+2,w,c
  7829  002112  5A11               	subwfb	__div_to_l_@f1+2,f,c
  7830  002114  5015               	movf	__div_to_l_@f2+3,w,c
  7831  002116  5A12               	subwfb	__div_to_l_@f1+3,f,c
  7832  002118  8015               	bsf	__div_to_l_@quot,0,c
  7833  00211A                     l7599:
  7834  00211A  90D8               	bcf	status,0,c
  7835  00211C  360F               	rlcf	__div_to_l_@f1,f,c
  7836  00211E  3610               	rlcf	__div_to_l_@f1+1,f,c
  7837  002120  3611               	rlcf	__div_to_l_@f1+2,f,c
  7838  002122  3612               	rlcf	__div_to_l_@f1+3,f,c
  7839  002124  2E19               	decfsz	__div_to_l_@cntr,f,c
  7840  002126  D7E1               	goto	l7591
  7841  002128  AE1A               	btfss	__div_to_l_@exp1,7,c
  7842  00212A  D016               	goto	l7615
  7843  00212C  501A               	movf	__div_to_l_@exp1,w,c
  7844  00212E  0A80               	xorlw	128
  7845  002130  0F9F               	addlw	159
  7846  002132  B0D8               	btfsc	status,0,c
  7847  002134  D009               	goto	l7611
  7848  002136  0E00               	movlw	0
  7849  002138  6E0F               	movwf	?__div_to_l_,c
  7850  00213A  0E00               	movlw	0
  7851  00213C  6E10               	movwf	?__div_to_l_+1,c
  7852  00213E  0E00               	movlw	0
  7853  002140  6E11               	movwf	?__div_to_l_+2,c
  7854  002142  0E00               	movlw	0
  7855  002144  6E12               	movwf	?__div_to_l_+3,c
  7856  002146  0012               	return	
  7857  002148                     l7611:
  7858  002148  90D8               	bcf	status,0,c
  7859  00214A  3218               	rrcf	__div_to_l_@quot+3,f,c
  7860  00214C  3217               	rrcf	__div_to_l_@quot+2,f,c
  7861  00214E  3216               	rrcf	__div_to_l_@quot+1,f,c
  7862  002150  3215               	rrcf	__div_to_l_@quot,f,c
  7863  002152  3E1A               	incfsz	__div_to_l_@exp1,f,c
  7864  002154  D7F9               	goto	l7611
  7865  002156  D015               	goto	l1301
  7866  002158                     l7615:
  7867  002158  0E1F               	movlw	31
  7868  00215A  641A               	cpfsgt	__div_to_l_@exp1,c
  7869  00215C  D00F               	goto	l7623
  7870  00215E  0E00               	movlw	0
  7871  002160  6E0F               	movwf	?__div_to_l_,c
  7872  002162  0E00               	movlw	0
  7873  002164  6E10               	movwf	?__div_to_l_+1,c
  7874  002166  0E00               	movlw	0
  7875  002168  6E11               	movwf	?__div_to_l_+2,c
  7876  00216A  0E00               	movlw	0
  7877  00216C  6E12               	movwf	?__div_to_l_+3,c
  7878  00216E  0012               	return	
  7879  002170                     l7621:
  7880  002170  90D8               	bcf	status,0,c
  7881  002172  3615               	rlcf	__div_to_l_@quot,f,c
  7882  002174  3616               	rlcf	__div_to_l_@quot+1,f,c
  7883  002176  3617               	rlcf	__div_to_l_@quot+2,f,c
  7884  002178  3618               	rlcf	__div_to_l_@quot+3,f,c
  7885  00217A  061A               	decf	__div_to_l_@exp1,f,c
  7886  00217C                     l7623:
  7887  00217C  501A               	movf	__div_to_l_@exp1,w,c
  7888  00217E  A4D8               	btfss	status,2,c
  7889  002180  D7F7               	goto	l7621
  7890  002182                     l1301:
  7891  002182  C015  F00F         	movff	__div_to_l_@quot,?__div_to_l_
  7892  002186  C016  F010         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7893  00218A  C017  F011         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7894  00218E  C018  F012         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7895  002192  0012               	return		;funcret
  7896  002194                     __end_of__div_to_l_:
  7897                           	opt stack 0
  7898                           tblptru	equ	0xFF8
  7899                           tblptrh	equ	0xFF7
  7900                           tblptrl	equ	0xFF6
  7901                           tablat	equ	0xFF5
  7902                           prodh	equ	0xFF4
  7903                           prodl	equ	0xFF3
  7904                           intcon	equ	0xFF2
  7905                           intcon2	equ	0xFF1
  7906                           postinc0	equ	0xFEE
  7907                           wreg	equ	0xFE8
  7908                           postinc1	equ	0xFE6
  7909                           postdec1	equ	0xFE5
  7910                           fsr1h	equ	0xFE2
  7911                           fsr1l	equ	0xFE1
  7912                           indf2	equ	0xFDF
  7913                           postinc2	equ	0xFDE
  7914                           postdec2	equ	0xFDD
  7915                           fsr2h	equ	0xFDA
  7916                           fsr2l	equ	0xFD9
  7917                           status	equ	0xFD8
  7918                           
  7919 ;; *************** function ___lltoft *****************
  7920 ;; Defined at:
  7921 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lltoft.c"
  7922 ;; Parameters:    Size  Location     Type
  7923 ;;  c               4   22[COMRAM] unsigned long 
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;  exp             1   30[COMRAM] unsigned char 
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  3   22[COMRAM] float 
  7928 ;; Registers used:
  7929 ;;		wreg, status,2, status,0, cstack
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7935 ;;      Params:         4       0       0       0       0       0       0
  7936 ;;      Locals:         1       0       0       0       0       0       0
  7937 ;;      Temps:          4       0       0       0       0       0       0
  7938 ;;      Totals:         9       0       0       0       0       0       0
  7939 ;;Total ram usage:        9 bytes
  7940 ;; Hardware stack levels used:    1
  7941 ;; Hardware stack levels required when called:    4
  7942 ;; This function calls:
  7943 ;;		___ftpack
  7944 ;; This function is called by:
  7945 ;;		_printf
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           	psect	text31
  7950  002CF2                     __ptext31:
  7951                           	opt stack 0
  7952  002CF2                     ___lltoft:
  7953                           	opt stack 25
  7954                           
  7955                           ;incstack = 0
  7956  002CF2  0E8E               	movlw	142
  7957  002CF4  6E1F               	movwf	___lltoft@exp,c
  7958  002CF6  D006               	goto	l7743
  7959  002CF8                     l7741:
  7960  002CF8  90D8               	bcf	status,0,c
  7961  002CFA  321A               	rrcf	___lltoft@c+3,f,c
  7962  002CFC  3219               	rrcf	___lltoft@c+2,f,c
  7963  002CFE  3218               	rrcf	___lltoft@c+1,f,c
  7964  002D00  3217               	rrcf	___lltoft@c,f,c
  7965  002D02  2A1F               	incf	___lltoft@exp,f,c
  7966  002D04                     l7743:
  7967  002D04  0E00               	movlw	0
  7968  002D06  1417               	andwf	___lltoft@c,w,c
  7969  002D08  6E1B               	movwf	??___lltoft& (0+255),c
  7970  002D0A  0E00               	movlw	0
  7971  002D0C  1418               	andwf	___lltoft@c+1,w,c
  7972  002D0E  6E1C               	movwf	(??___lltoft+1)& (0+255),c
  7973  002D10  0E00               	movlw	0
  7974  002D12  1419               	andwf	___lltoft@c+2,w,c
  7975  002D14  6E1D               	movwf	(??___lltoft+2)& (0+255),c
  7976  002D16  0EFF               	movlw	255
  7977  002D18  141A               	andwf	___lltoft@c+3,w,c
  7978  002D1A  6E1E               	movwf	(??___lltoft+3)& (0+255),c
  7979  002D1C  501B               	movf	??___lltoft,w,c
  7980  002D1E  101C               	iorwf	??___lltoft+1,w,c
  7981  002D20  101D               	iorwf	??___lltoft+2,w,c
  7982  002D22  101E               	iorwf	??___lltoft+3,w,c
  7983  002D24  A4D8               	btfss	status,2,c
  7984  002D26  D7E8               	goto	l7741
  7985  002D28  C017  F00F         	movff	___lltoft@c,___ftpack@arg
  7986  002D2C  C018  F010         	movff	___lltoft@c+1,___ftpack@arg+1
  7987  002D30  C019  F011         	movff	___lltoft@c+2,___ftpack@arg+2
  7988  002D34  C01F  F012         	movff	___lltoft@exp,___ftpack@exp
  7989  002D38  0E00               	movlw	0
  7990  002D3A  6E13               	movwf	___ftpack@sign,c
  7991  002D3C  EC29  F013         	call	___ftpack	;wreg free
  7992  002D40  C00F  F017         	movff	?___ftpack,?___lltoft
  7993  002D44  C010  F018         	movff	?___ftpack+1,?___lltoft+1
  7994  002D48  C011  F019         	movff	?___ftpack+2,?___lltoft+2
  7995  002D4C  0012               	return	
  7996  002D4E                     __end_of___lltoft:
  7997                           	opt stack 0
  7998                           tblptru	equ	0xFF8
  7999                           tblptrh	equ	0xFF7
  8000                           tblptrl	equ	0xFF6
  8001                           tablat	equ	0xFF5
  8002                           prodh	equ	0xFF4
  8003                           prodl	equ	0xFF3
  8004                           intcon	equ	0xFF2
  8005                           intcon2	equ	0xFF1
  8006                           postinc0	equ	0xFEE
  8007                           wreg	equ	0xFE8
  8008                           postinc1	equ	0xFE6
  8009                           postdec1	equ	0xFE5
  8010                           fsr1h	equ	0xFE2
  8011                           fsr1l	equ	0xFE1
  8012                           indf2	equ	0xFDF
  8013                           postinc2	equ	0xFDE
  8014                           postdec2	equ	0xFDD
  8015                           fsr2h	equ	0xFDA
  8016                           fsr2l	equ	0xFD9
  8017                           status	equ	0xFD8
  8018                           
  8019 ;; *************** function ___llmod *****************
  8020 ;; Defined at:
  8021 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  8022 ;; Parameters:    Size  Location     Type
  8023 ;;  dividend        4   27[COMRAM] unsigned long 
  8024 ;;  divisor         4   31[COMRAM] unsigned long 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;  counter         1   35[COMRAM] unsigned char 
  8027 ;; Return value:  Size  Location     Type
  8028 ;;                  4   27[COMRAM] unsigned long 
  8029 ;; Registers used:
  8030 ;;		wreg, status,2, status,0
  8031 ;; Tracked objects:
  8032 ;;		On entry : 0/0
  8033 ;;		On exit  : 0/0
  8034 ;;		Unchanged: 0/0
  8035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8036 ;;      Params:         8       0       0       0       0       0       0
  8037 ;;      Locals:         1       0       0       0       0       0       0
  8038 ;;      Temps:          0       0       0       0       0       0       0
  8039 ;;      Totals:         9       0       0       0       0       0       0
  8040 ;;Total ram usage:        9 bytes
  8041 ;; Hardware stack levels used:    1
  8042 ;; Hardware stack levels required when called:    3
  8043 ;; This function calls:
  8044 ;;		Nothing
  8045 ;; This function is called by:
  8046 ;;		_printf
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           	psect	text32
  8051  002C8C                     __ptext32:
  8052                           	opt stack 0
  8053  002C8C                     ___llmod:
  8054                           	opt stack 26
  8055                           
  8056                           ;incstack = 0
  8057  002C8C  5020               	movf	___llmod@divisor,w,c
  8058  002C8E  1021               	iorwf	___llmod@divisor+1,w,c
  8059  002C90  1022               	iorwf	___llmod@divisor+2,w,c
  8060  002C92  1023               	iorwf	___llmod@divisor+3,w,c
  8061  002C94  B4D8               	btfsc	status,2,c
  8062  002C96  D024               	goto	l1490
  8063  002C98  0E01               	movlw	1
  8064  002C9A  6E24               	movwf	___llmod@counter,c
  8065  002C9C  D006               	goto	l7729
  8066  002C9E                     l7727:
  8067  002C9E  90D8               	bcf	status,0,c
  8068  002CA0  3620               	rlcf	___llmod@divisor,f,c
  8069  002CA2  3621               	rlcf	___llmod@divisor+1,f,c
  8070  002CA4  3622               	rlcf	___llmod@divisor+2,f,c
  8071  002CA6  3623               	rlcf	___llmod@divisor+3,f,c
  8072  002CA8  2A24               	incf	___llmod@counter,f,c
  8073  002CAA                     l7729:
  8074  002CAA  AE23               	btfss	___llmod@divisor+3,7,c
  8075  002CAC  D7F8               	goto	l7727
  8076  002CAE                     l7731:
  8077  002CAE  5020               	movf	___llmod@divisor,w,c
  8078  002CB0  5C1C               	subwf	___llmod@dividend,w,c
  8079  002CB2  5021               	movf	___llmod@divisor+1,w,c
  8080  002CB4  581D               	subwfb	___llmod@dividend+1,w,c
  8081  002CB6  5022               	movf	___llmod@divisor+2,w,c
  8082  002CB8  581E               	subwfb	___llmod@dividend+2,w,c
  8083  002CBA  5023               	movf	___llmod@divisor+3,w,c
  8084  002CBC  581F               	subwfb	___llmod@dividend+3,w,c
  8085  002CBE  A0D8               	btfss	status,0,c
  8086  002CC0  D008               	goto	l7735
  8087  002CC2  5020               	movf	___llmod@divisor,w,c
  8088  002CC4  5E1C               	subwf	___llmod@dividend,f,c
  8089  002CC6  5021               	movf	___llmod@divisor+1,w,c
  8090  002CC8  5A1D               	subwfb	___llmod@dividend+1,f,c
  8091  002CCA  5022               	movf	___llmod@divisor+2,w,c
  8092  002CCC  5A1E               	subwfb	___llmod@dividend+2,f,c
  8093  002CCE  5023               	movf	___llmod@divisor+3,w,c
  8094  002CD0  5A1F               	subwfb	___llmod@dividend+3,f,c
  8095  002CD2                     l7735:
  8096  002CD2  90D8               	bcf	status,0,c
  8097  002CD4  3223               	rrcf	___llmod@divisor+3,f,c
  8098  002CD6  3222               	rrcf	___llmod@divisor+2,f,c
  8099  002CD8  3221               	rrcf	___llmod@divisor+1,f,c
  8100  002CDA  3220               	rrcf	___llmod@divisor,f,c
  8101  002CDC  2E24               	decfsz	___llmod@counter,f,c
  8102  002CDE  D7E7               	goto	l7731
  8103  002CE0                     l1490:
  8104  002CE0  C01C  F01C         	movff	___llmod@dividend,?___llmod
  8105  002CE4  C01D  F01D         	movff	___llmod@dividend+1,?___llmod+1
  8106  002CE8  C01E  F01E         	movff	___llmod@dividend+2,?___llmod+2
  8107  002CEC  C01F  F01F         	movff	___llmod@dividend+3,?___llmod+3
  8108  002CF0  0012               	return		;funcret
  8109  002CF2                     __end_of___llmod:
  8110                           	opt stack 0
  8111                           tblptru	equ	0xFF8
  8112                           tblptrh	equ	0xFF7
  8113                           tblptrl	equ	0xFF6
  8114                           tablat	equ	0xFF5
  8115                           prodh	equ	0xFF4
  8116                           prodl	equ	0xFF3
  8117                           intcon	equ	0xFF2
  8118                           intcon2	equ	0xFF1
  8119                           postinc0	equ	0xFEE
  8120                           wreg	equ	0xFE8
  8121                           postinc1	equ	0xFE6
  8122                           postdec1	equ	0xFE5
  8123                           fsr1h	equ	0xFE2
  8124                           fsr1l	equ	0xFE1
  8125                           indf2	equ	0xFDF
  8126                           postinc2	equ	0xFDE
  8127                           postdec2	equ	0xFDD
  8128                           fsr2h	equ	0xFDA
  8129                           fsr2l	equ	0xFD9
  8130                           status	equ	0xFD8
  8131                           
  8132 ;; *************** function ___lldiv *****************
  8133 ;; Defined at:
  8134 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  dividend        4   14[COMRAM] unsigned long 
  8137 ;;  divisor         4   18[COMRAM] unsigned long 
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;  quotient        4   22[COMRAM] unsigned long 
  8140 ;;  counter         1   26[COMRAM] unsigned char 
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  4   14[COMRAM] unsigned long 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2, status,0
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8150 ;;      Params:         8       0       0       0       0       0       0
  8151 ;;      Locals:         5       0       0       0       0       0       0
  8152 ;;      Temps:          0       0       0       0       0       0       0
  8153 ;;      Totals:        13       0       0       0       0       0       0
  8154 ;;Total ram usage:       13 bytes
  8155 ;; Hardware stack levels used:    1
  8156 ;; Hardware stack levels required when called:    3
  8157 ;; This function calls:
  8158 ;;		Nothing
  8159 ;; This function is called by:
  8160 ;;		_printf
  8161 ;; This function uses a non-reentrant model
  8162 ;;
  8163                           
  8164                           	psect	text33
  8165  002940                     __ptext33:
  8166                           	opt stack 0
  8167  002940                     ___lldiv:
  8168                           	opt stack 26
  8169                           
  8170                           ;incstack = 0
  8171  002940  0E00               	movlw	0
  8172  002942  6E17               	movwf	___lldiv@quotient,c
  8173  002944  0E00               	movlw	0
  8174  002946  6E18               	movwf	___lldiv@quotient+1,c
  8175  002948  0E00               	movlw	0
  8176  00294A  6E19               	movwf	___lldiv@quotient+2,c
  8177  00294C  0E00               	movlw	0
  8178  00294E  6E1A               	movwf	___lldiv@quotient+3,c
  8179  002950  5013               	movf	___lldiv@divisor,w,c
  8180  002952  1014               	iorwf	___lldiv@divisor+1,w,c
  8181  002954  1015               	iorwf	___lldiv@divisor+2,w,c
  8182  002956  1016               	iorwf	___lldiv@divisor+3,w,c
  8183  002958  B4D8               	btfsc	status,2,c
  8184  00295A  D02A               	goto	l1480
  8185  00295C  0E01               	movlw	1
  8186  00295E  6E1B               	movwf	___lldiv@counter,c
  8187  002960  D006               	goto	l7709
  8188  002962                     l7707:
  8189  002962  90D8               	bcf	status,0,c
  8190  002964  3613               	rlcf	___lldiv@divisor,f,c
  8191  002966  3614               	rlcf	___lldiv@divisor+1,f,c
  8192  002968  3615               	rlcf	___lldiv@divisor+2,f,c
  8193  00296A  3616               	rlcf	___lldiv@divisor+3,f,c
  8194  00296C  2A1B               	incf	___lldiv@counter,f,c
  8195  00296E                     l7709:
  8196  00296E  AE16               	btfss	___lldiv@divisor+3,7,c
  8197  002970  D7F8               	goto	l7707
  8198  002972                     l7711:
  8199  002972  90D8               	bcf	status,0,c
  8200  002974  3617               	rlcf	___lldiv@quotient,f,c
  8201  002976  3618               	rlcf	___lldiv@quotient+1,f,c
  8202  002978  3619               	rlcf	___lldiv@quotient+2,f,c
  8203  00297A  361A               	rlcf	___lldiv@quotient+3,f,c
  8204  00297C  5013               	movf	___lldiv@divisor,w,c
  8205  00297E  5C0F               	subwf	___lldiv@dividend,w,c
  8206  002980  5014               	movf	___lldiv@divisor+1,w,c
  8207  002982  5810               	subwfb	___lldiv@dividend+1,w,c
  8208  002984  5015               	movf	___lldiv@divisor+2,w,c
  8209  002986  5811               	subwfb	___lldiv@dividend+2,w,c
  8210  002988  5016               	movf	___lldiv@divisor+3,w,c
  8211  00298A  5812               	subwfb	___lldiv@dividend+3,w,c
  8212  00298C  A0D8               	btfss	status,0,c
  8213  00298E  D009               	goto	l7719
  8214  002990  5013               	movf	___lldiv@divisor,w,c
  8215  002992  5E0F               	subwf	___lldiv@dividend,f,c
  8216  002994  5014               	movf	___lldiv@divisor+1,w,c
  8217  002996  5A10               	subwfb	___lldiv@dividend+1,f,c
  8218  002998  5015               	movf	___lldiv@divisor+2,w,c
  8219  00299A  5A11               	subwfb	___lldiv@dividend+2,f,c
  8220  00299C  5016               	movf	___lldiv@divisor+3,w,c
  8221  00299E  5A12               	subwfb	___lldiv@dividend+3,f,c
  8222  0029A0  8017               	bsf	___lldiv@quotient,0,c
  8223  0029A2                     l7719:
  8224  0029A2  90D8               	bcf	status,0,c
  8225  0029A4  3216               	rrcf	___lldiv@divisor+3,f,c
  8226  0029A6  3215               	rrcf	___lldiv@divisor+2,f,c
  8227  0029A8  3214               	rrcf	___lldiv@divisor+1,f,c
  8228  0029AA  3213               	rrcf	___lldiv@divisor,f,c
  8229  0029AC  2E1B               	decfsz	___lldiv@counter,f,c
  8230  0029AE  D7E1               	goto	l7711
  8231  0029B0                     l1480:
  8232  0029B0  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  8233  0029B4  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  8234  0029B8  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  8235  0029BC  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  8236  0029C0  0012               	return		;funcret
  8237  0029C2                     __end_of___lldiv:
  8238                           	opt stack 0
  8239                           tblptru	equ	0xFF8
  8240                           tblptrh	equ	0xFF7
  8241                           tblptrl	equ	0xFF6
  8242                           tablat	equ	0xFF5
  8243                           prodh	equ	0xFF4
  8244                           prodl	equ	0xFF3
  8245                           intcon	equ	0xFF2
  8246                           intcon2	equ	0xFF1
  8247                           postinc0	equ	0xFEE
  8248                           wreg	equ	0xFE8
  8249                           postinc1	equ	0xFE6
  8250                           postdec1	equ	0xFE5
  8251                           fsr1h	equ	0xFE2
  8252                           fsr1l	equ	0xFE1
  8253                           indf2	equ	0xFDF
  8254                           postinc2	equ	0xFDE
  8255                           postdec2	equ	0xFDD
  8256                           fsr2h	equ	0xFDA
  8257                           fsr2l	equ	0xFD9
  8258                           status	equ	0xFD8
  8259                           
  8260 ;; *************** function ___fttol *****************
  8261 ;; Defined at:
  8262 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;  f1              3   56[COMRAM] float 
  8265 ;; Auto vars:     Size  Location     Type
  8266 ;;  lval            4    1[BANK0 ] unsigned long 
  8267 ;;  exp1            1    5[BANK0 ] unsigned char 
  8268 ;;  sign1           1    0[BANK0 ] unsigned char 
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  4   56[COMRAM] long 
  8271 ;; Registers used:
  8272 ;;		wreg, status,2, status,0
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8278 ;;      Params:         4       0       0       0       0       0       0
  8279 ;;      Locals:         0       6       0       0       0       0       0
  8280 ;;      Temps:          5       0       0       0       0       0       0
  8281 ;;      Totals:         9       6       0       0       0       0       0
  8282 ;;Total ram usage:       15 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:    3
  8285 ;; This function calls:
  8286 ;;		Nothing
  8287 ;; This function is called by:
  8288 ;;		_printf
  8289 ;;		_CheckTestReading
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           	psect	text34
  8294  0022B4                     __ptext34:
  8295                           	opt stack 0
  8296  0022B4                     ___fttol:
  8297                           	opt stack 26
  8298                           
  8299                           ;incstack = 0
  8300  0022B4  C03B  F03D         	movff	___fttol@f1+2,??___fttol
  8301  0022B8  6A3E               	clrf	(??___fttol+1)& (0+255),c
  8302  0022BA  6A3F               	clrf	(??___fttol+2)& (0+255),c
  8303  0022BC  343A               	rlcf	___fttol@f1+1,w,c
  8304  0022BE  363D               	rlcf	??___fttol& (0+255),f,c
  8305  0022C0  E301               	bnc	u7811
  8306  0022C2  803E               	bsf	(??___fttol+1)& (0+255),0,c
  8307  0022C4                     u7811:
  8308  0022C4  503D               	movf	??___fttol,w,c
  8309  0022C6  0100               	movlb	0	; () banked
  8310  0022C8  6FBE               	movwf	___fttol@exp1& (0+255),b
  8311  0022CA  0100               	movlb	0	; () banked
  8312  0022CC  51BE               	movf	___fttol@exp1& (0+255),w,b
  8313  0022CE  A4D8               	btfss	status,2,c
  8314  0022D0  D009               	goto	l7661
  8315                           
  8316                           ; BSR set to: 0
  8317  0022D2  0E00               	movlw	0
  8318  0022D4  6E39               	movwf	?___fttol,c
  8319  0022D6  0E00               	movlw	0
  8320  0022D8  6E3A               	movwf	?___fttol+1,c
  8321  0022DA  0E00               	movlw	0
  8322  0022DC  6E3B               	movwf	?___fttol+2,c
  8323  0022DE  0E00               	movlw	0
  8324  0022E0  6E3C               	movwf	?___fttol+3,c
  8325                           
  8326                           ; BSR set to: 0
  8327  0022E2  0012               	return	
  8328  0022E4                     l7661:
  8329                           
  8330                           ; BSR set to: 0
  8331  0022E4  0E17               	movlw	23
  8332  0022E6  6E3D               	movwf	??___fttol& (0+255),c
  8333  0022E8  C039  F03E         	movff	___fttol@f1,??___fttol+1
  8334  0022EC  C03A  F03F         	movff	___fttol@f1+1,??___fttol+2
  8335  0022F0  C03B  F040         	movff	___fttol@f1+2,??___fttol+3
  8336  0022F4  283D               	incf	??___fttol,w,c
  8337  0022F6  6E41               	movwf	(??___fttol+4)& (0+255),c
  8338  0022F8  D004               	goto	u7830
  8339  0022FA                     u7835:
  8340  0022FA  90D8               	bcf	status,0,c
  8341  0022FC  3240               	rrcf	??___fttol+3,f,c
  8342  0022FE  323F               	rrcf	??___fttol+2,f,c
  8343  002300  323E               	rrcf	??___fttol+1,f,c
  8344  002302                     u7830:
  8345  002302  2E41               	decfsz	(??___fttol+4)& (0+255),f,c
  8346  002304  D7FA               	goto	u7835
  8347  002306  503E               	movf	??___fttol+1,w,c
  8348  002308  0100               	movlb	0	; () banked
  8349  00230A  6FB9               	movwf	___fttol@sign1& (0+255),b
  8350                           
  8351                           ; BSR set to: 0
  8352  00230C  8E3A               	bsf	___fttol@f1+1,7,c
  8353                           
  8354                           ; BSR set to: 0
  8355  00230E  0EFF               	movlw	255
  8356  002310  1639               	andwf	___fttol@f1,f,c
  8357  002312  0EFF               	movlw	255
  8358  002314  163A               	andwf	___fttol@f1+1,f,c
  8359  002316  0E00               	movlw	0
  8360  002318  163B               	andwf	___fttol@f1+2,f,c
  8361                           
  8362                           ; BSR set to: 0
  8363  00231A  5039               	movf	___fttol@f1,w,c
  8364  00231C  0100               	movlb	0	; () banked
  8365  00231E  6FBA               	movwf	___fttol@lval& (0+255),b
  8366  002320  503A               	movf	___fttol@f1+1,w,c
  8367  002322  0100               	movlb	0	; () banked
  8368  002324  6FBB               	movwf	(___fttol@lval+1)& (0+255),b
  8369  002326  503B               	movf	___fttol@f1+2,w,c
  8370  002328  0100               	movlb	0	; () banked
  8371  00232A  6FBC               	movwf	(___fttol@lval+2)& (0+255),b
  8372  00232C  0100               	movlb	0	; () banked
  8373  00232E  6BBD               	clrf	(___fttol@lval+3)& (0+255),b
  8374                           
  8375                           ; BSR set to: 0
  8376  002330  0E8E               	movlw	142
  8377  002332  0100               	movlb	0	; () banked
  8378  002334  5FBE               	subwf	___fttol@exp1& (0+255),f,b
  8379                           
  8380                           ; BSR set to: 0
  8381  002336  0100               	movlb	0	; () banked
  8382  002338  AFBE               	btfss	___fttol@exp1& (0+255),7,b
  8383  00233A  D019               	goto	l7683
  8384                           
  8385                           ; BSR set to: 0
  8386  00233C  0100               	movlb	0	; () banked
  8387  00233E  51BE               	movf	___fttol@exp1& (0+255),w,b
  8388  002340  0A80               	xorlw	128
  8389  002342  0F8F               	addlw	143
  8390  002344  B0D8               	btfsc	status,0,c
  8391  002346  D009               	goto	l7679
  8392                           
  8393                           ; BSR set to: 0
  8394  002348  0E00               	movlw	0
  8395  00234A  6E39               	movwf	?___fttol,c
  8396  00234C  0E00               	movlw	0
  8397  00234E  6E3A               	movwf	?___fttol+1,c
  8398  002350  0E00               	movlw	0
  8399  002352  6E3B               	movwf	?___fttol+2,c
  8400  002354  0E00               	movlw	0
  8401  002356  6E3C               	movwf	?___fttol+3,c
  8402                           
  8403                           ; BSR set to: 0
  8404  002358  0012               	return	
  8405  00235A                     l7679:
  8406                           
  8407                           ; BSR set to: 0
  8408  00235A  0100               	movlb	0	; () banked
  8409  00235C  90D8               	bcf	status,0,c
  8410  00235E  33BD               	rrcf	(___fttol@lval+3)& (0+255),f,b
  8411  002360  33BC               	rrcf	(___fttol@lval+2)& (0+255),f,b
  8412  002362  33BB               	rrcf	(___fttol@lval+1)& (0+255),f,b
  8413  002364  33BA               	rrcf	___fttol@lval& (0+255),f,b
  8414                           
  8415                           ; BSR set to: 0
  8416  002366  0100               	movlb	0	; () banked
  8417  002368  3FBE               	incfsz	___fttol@exp1& (0+255),f,b
  8418  00236A  D7F7               	goto	l7679
  8419                           
  8420                           ; BSR set to: 0
  8421  00236C  D01A               	goto	l7693
  8422  00236E                     l7683:
  8423                           
  8424                           ; BSR set to: 0
  8425  00236E  0E17               	movlw	23
  8426  002370  0100               	movlb	0	; () banked
  8427  002372  65BE               	cpfsgt	___fttol@exp1& (0+255),b
  8428  002374  D011               	goto	l7691
  8429                           
  8430                           ; BSR set to: 0
  8431  002376  0E00               	movlw	0
  8432  002378  6E39               	movwf	?___fttol,c
  8433  00237A  0E00               	movlw	0
  8434  00237C  6E3A               	movwf	?___fttol+1,c
  8435  00237E  0E00               	movlw	0
  8436  002380  6E3B               	movwf	?___fttol+2,c
  8437  002382  0E00               	movlw	0
  8438  002384  6E3C               	movwf	?___fttol+3,c
  8439                           
  8440                           ; BSR set to: 0
  8441  002386  0012               	return	
  8442  002388                     l7689:
  8443                           
  8444                           ; BSR set to: 0
  8445  002388  0100               	movlb	0	; () banked
  8446  00238A  90D8               	bcf	status,0,c
  8447  00238C  37BA               	rlcf	___fttol@lval& (0+255),f,b
  8448  00238E  37BB               	rlcf	(___fttol@lval+1)& (0+255),f,b
  8449  002390  37BC               	rlcf	(___fttol@lval+2)& (0+255),f,b
  8450  002392  37BD               	rlcf	(___fttol@lval+3)& (0+255),f,b
  8451  002394  0100               	movlb	0	; () banked
  8452  002396  07BE               	decf	___fttol@exp1& (0+255),f,b
  8453  002398                     l7691:
  8454                           
  8455                           ; BSR set to: 0
  8456  002398  0100               	movlb	0	; () banked
  8457  00239A  51BE               	movf	___fttol@exp1& (0+255),w,b
  8458  00239C  0100               	movlb	0	; () banked
  8459  00239E  A4D8               	btfss	status,2,c
  8460  0023A0  D7F3               	goto	l7689
  8461  0023A2                     l7693:
  8462                           
  8463                           ; BSR set to: 0
  8464  0023A2  0100               	movlb	0	; () banked
  8465  0023A4  51B9               	movf	___fttol@sign1& (0+255),w,b
  8466  0023A6  0100               	movlb	0	; () banked
  8467  0023A8  B4D8               	btfsc	status,2,c
  8468  0023AA  D009               	goto	l7697
  8469                           
  8470                           ; BSR set to: 0
  8471  0023AC  0100               	movlb	0	; () banked
  8472  0023AE  1FBD               	comf	(___fttol@lval+3)& (0+255),f,b
  8473  0023B0  1FBC               	comf	(___fttol@lval+2)& (0+255),f,b
  8474  0023B2  1FBB               	comf	(___fttol@lval+1)& (0+255),f,b
  8475  0023B4  6DBA               	negf	___fttol@lval& (0+255),b
  8476  0023B6  0E00               	movlw	0
  8477  0023B8  23BB               	addwfc	(___fttol@lval+1)& (0+255),f,b
  8478  0023BA  23BC               	addwfc	(___fttol@lval+2)& (0+255),f,b
  8479  0023BC  23BD               	addwfc	(___fttol@lval+3)& (0+255),f,b
  8480  0023BE                     l7697:
  8481                           
  8482                           ; BSR set to: 0
  8483  0023BE  C0BA  F039         	movff	___fttol@lval,?___fttol
  8484  0023C2  C0BB  F03A         	movff	___fttol@lval+1,?___fttol+1
  8485  0023C6  C0BC  F03B         	movff	___fttol@lval+2,?___fttol+2
  8486  0023CA  C0BD  F03C         	movff	___fttol@lval+3,?___fttol+3
  8487  0023CE  0012               	return	
  8488  0023D0                     __end_of___fttol:
  8489                           	opt stack 0
  8490                           tblptru	equ	0xFF8
  8491                           tblptrh	equ	0xFF7
  8492                           tblptrl	equ	0xFF6
  8493                           tablat	equ	0xFF5
  8494                           prodh	equ	0xFF4
  8495                           prodl	equ	0xFF3
  8496                           intcon	equ	0xFF2
  8497                           intcon2	equ	0xFF1
  8498                           postinc0	equ	0xFEE
  8499                           wreg	equ	0xFE8
  8500                           postinc1	equ	0xFE6
  8501                           postdec1	equ	0xFE5
  8502                           fsr1h	equ	0xFE2
  8503                           fsr1l	equ	0xFE1
  8504                           indf2	equ	0xFDF
  8505                           postinc2	equ	0xFDE
  8506                           postdec2	equ	0xFDD
  8507                           fsr2h	equ	0xFDA
  8508                           fsr2l	equ	0xFD9
  8509                           status	equ	0xFD8
  8510                           
  8511 ;; *************** function ___ftsub *****************
  8512 ;; Defined at:
  8513 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftsub.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;  f1              3    6[BANK0 ] float 
  8516 ;;  f2              3    9[BANK0 ] float 
  8517 ;; Auto vars:     Size  Location     Type
  8518 ;;		None
  8519 ;; Return value:  Size  Location     Type
  8520 ;;                  3    6[BANK0 ] float 
  8521 ;; Registers used:
  8522 ;;		wreg, status,2, status,0, cstack
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/0
  8525 ;;		On exit  : 0/0
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8528 ;;      Params:         0       6       0       0       0       0       0
  8529 ;;      Locals:         0       0       0       0       0       0       0
  8530 ;;      Temps:          0       0       0       0       0       0       0
  8531 ;;      Totals:         0       6       0       0       0       0       0
  8532 ;;Total ram usage:        6 bytes
  8533 ;; Hardware stack levels used:    1
  8534 ;; Hardware stack levels required when called:    5
  8535 ;; This function calls:
  8536 ;;		___ftadd
  8537 ;; This function is called by:
  8538 ;;		_printf
  8539 ;;		_Temp_Convert
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543                           	psect	text35
  8544  002D4E                     __ptext35:
  8545                           	opt stack 0
  8546  002D4E                     ___ftsub:
  8547                           	opt stack 24
  8548                           
  8549                           ; BSR set to: 0
  8550                           ;incstack = 0
  8551  002D4E  0100               	movlb	0	; () banked
  8552  002D50  51C2               	movf	___ftsub@f2& (0+255),w,b
  8553  002D52  0100               	movlb	0	; () banked
  8554  002D54  11C3               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  8555  002D56  0100               	movlb	0	; () banked
  8556  002D58  11C4               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  8557  002D5A  B4D8               	btfsc	status,2,c
  8558  002D5C  D009               	goto	l7629
  8559                           
  8560                           ; BSR set to: 0
  8561  002D5E  0E00               	movlw	0
  8562  002D60  0100               	movlb	0	; () banked
  8563  002D62  1BC2               	xorwf	___ftsub@f2& (0+255),f,b
  8564  002D64  0E00               	movlw	0
  8565  002D66  0100               	movlb	0	; () banked
  8566  002D68  1BC3               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  8567  002D6A  0E80               	movlw	128
  8568  002D6C  0100               	movlb	0	; () banked
  8569  002D6E  1BC4               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  8570  002D70                     l7629:
  8571                           
  8572                           ; BSR set to: 0
  8573  002D70  C0BF  F03C         	movff	___ftsub@f1,___ftadd@f1
  8574  002D74  C0C0  F03D         	movff	___ftsub@f1+1,___ftadd@f1+1
  8575  002D78  C0C1  F03E         	movff	___ftsub@f1+2,___ftadd@f1+2
  8576  002D7C  C0C2  F03F         	movff	___ftsub@f2,___ftadd@f2
  8577  002D80  C0C3  F040         	movff	___ftsub@f2+1,___ftadd@f2+1
  8578  002D84  C0C4  F041         	movff	___ftsub@f2+2,___ftadd@f2+2
  8579  002D88  EC92  F00E         	call	___ftadd	;wreg free
  8580  002D8C  C03C  F0BF         	movff	?___ftadd,?___ftsub
  8581  002D90  C03D  F0C0         	movff	?___ftadd+1,?___ftsub+1
  8582  002D94  C03E  F0C1         	movff	?___ftadd+2,?___ftsub+2
  8583  002D98  0012               	return	
  8584  002D9A                     __end_of___ftsub:
  8585                           	opt stack 0
  8586                           tblptru	equ	0xFF8
  8587                           tblptrh	equ	0xFF7
  8588                           tblptrl	equ	0xFF6
  8589                           tablat	equ	0xFF5
  8590                           prodh	equ	0xFF4
  8591                           prodl	equ	0xFF3
  8592                           intcon	equ	0xFF2
  8593                           intcon2	equ	0xFF1
  8594                           postinc0	equ	0xFEE
  8595                           wreg	equ	0xFE8
  8596                           postinc1	equ	0xFE6
  8597                           postdec1	equ	0xFE5
  8598                           fsr1h	equ	0xFE2
  8599                           fsr1l	equ	0xFE1
  8600                           indf2	equ	0xFDF
  8601                           postinc2	equ	0xFDE
  8602                           postdec2	equ	0xFDD
  8603                           fsr2h	equ	0xFDA
  8604                           fsr2l	equ	0xFD9
  8605                           status	equ	0xFD8
  8606                           
  8607 ;; *************** function ___ftadd *****************
  8608 ;; Defined at:
  8609 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  f1              3   59[COMRAM] float 
  8612 ;;  f2              3   62[COMRAM] float 
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;  exp1            1    5[BANK0 ] unsigned char 
  8615 ;;  exp2            1    4[BANK0 ] unsigned char 
  8616 ;;  sign            1    3[BANK0 ] unsigned char 
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  3   59[COMRAM] float 
  8619 ;; Registers used:
  8620 ;;		wreg, status,2, status,0, cstack
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8626 ;;      Params:         6       0       0       0       0       0       0
  8627 ;;      Locals:         0       3       0       0       0       0       0
  8628 ;;      Temps:          0       3       0       0       0       0       0
  8629 ;;      Totals:         6       6       0       0       0       0       0
  8630 ;;Total ram usage:       12 bytes
  8631 ;; Hardware stack levels used:    1
  8632 ;; Hardware stack levels required when called:    4
  8633 ;; This function calls:
  8634 ;;		___ftpack
  8635 ;; This function is called by:
  8636 ;;		_printf
  8637 ;;		___ftsub
  8638 ;;		_Temp_Filter
  8639 ;;		_Temp_Convert
  8640 ;;		_CheckTestReading
  8641 ;;		_CurrentCoulombCount
  8642 ;;		_log
  8643 ;;		_eval_poly
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           	psect	text36
  8648  001D24                     __ptext36:
  8649                           	opt stack 0
  8650  001D24                     ___ftadd:
  8651                           	opt stack 24
  8652                           
  8653                           ;incstack = 0
  8654  001D24  C03E  F0B9         	movff	___ftadd@f1+2,??___ftadd
  8655  001D28  0100               	movlb	0	; () banked
  8656  001D2A  6BBA               	clrf	(??___ftadd+1)& (0+255),b
  8657  001D2C  6BBB               	clrf	(??___ftadd+2)& (0+255),b
  8658  001D2E  343D               	rlcf	___ftadd@f1+1,w,c
  8659  001D30  0100               	movlb	0	; () banked
  8660  001D32  37B9               	rlcf	??___ftadd& (0+255),f,b
  8661  001D34  E301               	bnc	u6951
  8662  001D36  81BA               	bsf	(??___ftadd+1)& (0+255),0,b
  8663  001D38                     u6951:
  8664  001D38  0100               	movlb	0	; () banked
  8665  001D3A  51B9               	movf	??___ftadd& (0+255),w,b
  8666  001D3C  0100               	movlb	0	; () banked
  8667  001D3E  6FBE               	movwf	___ftadd@exp1& (0+255),b
  8668  001D40  C041  F0B9         	movff	___ftadd@f2+2,??___ftadd
  8669  001D44  0100               	movlb	0	; () banked
  8670  001D46  6BBA               	clrf	(??___ftadd+1)& (0+255),b
  8671  001D48  6BBB               	clrf	(??___ftadd+2)& (0+255),b
  8672  001D4A  3440               	rlcf	___ftadd@f2+1,w,c
  8673  001D4C  0100               	movlb	0	; () banked
  8674  001D4E  37B9               	rlcf	??___ftadd& (0+255),f,b
  8675  001D50  E301               	bnc	u6961
  8676  001D52  81BA               	bsf	(??___ftadd+1)& (0+255),0,b
  8677  001D54                     u6961:
  8678  001D54  0100               	movlb	0	; () banked
  8679  001D56  51B9               	movf	??___ftadd& (0+255),w,b
  8680  001D58  0100               	movlb	0	; () banked
  8681  001D5A  6FBD               	movwf	___ftadd@exp2& (0+255),b
  8682                           
  8683                           ; BSR set to: 0
  8684  001D5C  0100               	movlb	0	; () banked
  8685  001D5E  51BE               	movf	___ftadd@exp1& (0+255),w,b
  8686  001D60  0100               	movlb	0	; () banked
  8687  001D62  B4D8               	btfsc	status,2,c
  8688  001D64  D011               	goto	l1356
  8689                           
  8690                           ; BSR set to: 0
  8691  001D66  0100               	movlb	0	; () banked
  8692  001D68  51BD               	movf	___ftadd@exp2& (0+255),w,b
  8693  001D6A  0100               	movlb	0	; () banked
  8694  001D6C  5DBE               	subwf	___ftadd@exp1& (0+255),w,b
  8695  001D6E  B0D8               	btfsc	status,0,c
  8696  001D70  D012               	goto	l7069
  8697                           
  8698                           ; BSR set to: 0
  8699  001D72  0100               	movlb	0	; () banked
  8700  001D74  51BE               	movf	___ftadd@exp1& (0+255),w,b
  8701  001D76  0800               	sublw	0
  8702  001D78  0100               	movlb	0	; () banked
  8703  001D7A  25BD               	addwf	___ftadd@exp2& (0+255),w,b
  8704  001D7C  0100               	movlb	0	; () banked
  8705  001D7E  6FB9               	movwf	??___ftadd& (0+255),b
  8706  001D80  0E18               	movlw	24
  8707  001D82  0100               	movlb	0	; () banked
  8708  001D84  65B9               	cpfsgt	??___ftadd& (0+255),b
  8709  001D86  D007               	goto	l7069
  8710  001D88                     l1356:
  8711                           
  8712                           ; BSR set to: 0
  8713  001D88  C03F  F03C         	movff	___ftadd@f2,?___ftadd
  8714  001D8C  C040  F03D         	movff	___ftadd@f2+1,?___ftadd+1
  8715  001D90  C041  F03E         	movff	___ftadd@f2+2,?___ftadd+2
  8716  001D94  0012               	return	
  8717  001D96                     l7069:
  8718                           
  8719                           ; BSR set to: 0
  8720  001D96  0100               	movlb	0	; () banked
  8721  001D98  51BD               	movf	___ftadd@exp2& (0+255),w,b
  8722  001D9A  0100               	movlb	0	; () banked
  8723  001D9C  B4D8               	btfsc	status,2,c
  8724  001D9E  D011               	goto	l1360
  8725                           
  8726                           ; BSR set to: 0
  8727  001DA0  0100               	movlb	0	; () banked
  8728  001DA2  51BE               	movf	___ftadd@exp1& (0+255),w,b
  8729  001DA4  0100               	movlb	0	; () banked
  8730  001DA6  5DBD               	subwf	___ftadd@exp2& (0+255),w,b
  8731  001DA8  B0D8               	btfsc	status,0,c
  8732  001DAA  D012               	goto	l7075
  8733                           
  8734                           ; BSR set to: 0
  8735  001DAC  0100               	movlb	0	; () banked
  8736  001DAE  51BD               	movf	___ftadd@exp2& (0+255),w,b
  8737  001DB0  0800               	sublw	0
  8738  001DB2  0100               	movlb	0	; () banked
  8739  001DB4  25BE               	addwf	___ftadd@exp1& (0+255),w,b
  8740  001DB6  0100               	movlb	0	; () banked
  8741  001DB8  6FB9               	movwf	??___ftadd& (0+255),b
  8742  001DBA  0E18               	movlw	24
  8743  001DBC  0100               	movlb	0	; () banked
  8744  001DBE  65B9               	cpfsgt	??___ftadd& (0+255),b
  8745  001DC0  D007               	goto	l7075
  8746  001DC2                     l1360:
  8747                           
  8748                           ; BSR set to: 0
  8749  001DC2  C03C  F03C         	movff	___ftadd@f1,?___ftadd
  8750  001DC6  C03D  F03D         	movff	___ftadd@f1+1,?___ftadd+1
  8751  001DCA  C03E  F03E         	movff	___ftadd@f1+2,?___ftadd+2
  8752  001DCE  0012               	return	
  8753  001DD0                     l7075:
  8754                           
  8755                           ; BSR set to: 0
  8756  001DD0  0E06               	movlw	6
  8757  001DD2  0100               	movlb	0	; () banked
  8758  001DD4  6FBC               	movwf	___ftadd@sign& (0+255),b
  8759                           
  8760                           ; BSR set to: 0
  8761  001DD6  AE3E               	btfss	___ftadd@f1+2,7,c
  8762  001DD8  D002               	goto	l7081
  8763                           
  8764                           ; BSR set to: 0
  8765  001DDA  0100               	movlb	0	; () banked
  8766  001DDC  8FBC               	bsf	___ftadd@sign& (0+255),7,b
  8767  001DDE                     l7081:
  8768                           
  8769                           ; BSR set to: 0
  8770  001DDE  AE41               	btfss	___ftadd@f2+2,7,c
  8771  001DE0  D002               	goto	l1362
  8772                           
  8773                           ; BSR set to: 0
  8774  001DE2  0100               	movlb	0	; () banked
  8775  001DE4  8DBC               	bsf	___ftadd@sign& (0+255),6,b
  8776  001DE6                     l1362:
  8777                           
  8778                           ; BSR set to: 0
  8779  001DE6  8E3D               	bsf	___ftadd@f1+1,7,c
  8780                           
  8781                           ; BSR set to: 0
  8782  001DE8  0EFF               	movlw	255
  8783  001DEA  163C               	andwf	___ftadd@f1,f,c
  8784  001DEC  0EFF               	movlw	255
  8785  001DEE  163D               	andwf	___ftadd@f1+1,f,c
  8786  001DF0  0E00               	movlw	0
  8787  001DF2  163E               	andwf	___ftadd@f1+2,f,c
  8788  001DF4  8E40               	bsf	___ftadd@f2+1,7,c
  8789                           
  8790                           ; BSR set to: 0
  8791  001DF6  0EFF               	movlw	255
  8792  001DF8  163F               	andwf	___ftadd@f2,f,c
  8793  001DFA  0EFF               	movlw	255
  8794  001DFC  1640               	andwf	___ftadd@f2+1,f,c
  8795  001DFE  0E00               	movlw	0
  8796  001E00  1641               	andwf	___ftadd@f2+2,f,c
  8797                           
  8798                           ; BSR set to: 0
  8799  001E02  0100               	movlb	0	; () banked
  8800  001E04  51BD               	movf	___ftadd@exp2& (0+255),w,b
  8801  001E06  0100               	movlb	0	; () banked
  8802  001E08  5DBE               	subwf	___ftadd@exp1& (0+255),w,b
  8803  001E0A  B0D8               	btfsc	status,0,c
  8804  001E0C  D023               	goto	l7101
  8805  001E0E                     l7091:
  8806                           
  8807                           ; BSR set to: 0
  8808  001E0E  90D8               	bcf	status,0,c
  8809  001E10  363F               	rlcf	___ftadd@f2,f,c
  8810  001E12  3640               	rlcf	___ftadd@f2+1,f,c
  8811  001E14  3641               	rlcf	___ftadd@f2+2,f,c
  8812  001E16  0100               	movlb	0	; () banked
  8813  001E18  07BD               	decf	___ftadd@exp2& (0+255),f,b
  8814                           
  8815                           ; BSR set to: 0
  8816  001E1A  0100               	movlb	0	; () banked
  8817  001E1C  51BE               	movf	___ftadd@exp1& (0+255),w,b
  8818  001E1E  0100               	movlb	0	; () banked
  8819  001E20  19BD               	xorwf	___ftadd@exp2& (0+255),w,b
  8820  001E22  B4D8               	btfsc	status,2,c
  8821  001E24  D010               	goto	l7099
  8822                           
  8823                           ; BSR set to: 0
  8824  001E26  0100               	movlb	0	; () banked
  8825  001E28  07BC               	decf	___ftadd@sign& (0+255),f,b
  8826  001E2A  C0BC  F0B9         	movff	___ftadd@sign,??___ftadd
  8827  001E2E  0E07               	movlw	7
  8828  001E30  0100               	movlb	0	; () banked
  8829  001E32  17B9               	andwf	??___ftadd& (0+255),f,b
  8830  001E34  B4D8               	btfsc	status,2,c
  8831  001E36  D007               	goto	l7099
  8832  001E38  D7EA               	goto	l7091
  8833  001E3A                     l7097:
  8834                           
  8835                           ; BSR set to: 0
  8836  001E3A  90D8               	bcf	status,0,c
  8837  001E3C  323E               	rrcf	___ftadd@f1+2,f,c
  8838  001E3E  323D               	rrcf	___ftadd@f1+1,f,c
  8839  001E40  323C               	rrcf	___ftadd@f1,f,c
  8840  001E42  0100               	movlb	0	; () banked
  8841  001E44  2BBE               	incf	___ftadd@exp1& (0+255),f,b
  8842  001E46                     l7099:
  8843                           
  8844                           ; BSR set to: 0
  8845  001E46  0100               	movlb	0	; () banked
  8846  001E48  51BD               	movf	___ftadd@exp2& (0+255),w,b
  8847  001E4A  0100               	movlb	0	; () banked
  8848  001E4C  19BE               	xorwf	___ftadd@exp1& (0+255),w,b
  8849  001E4E  B4D8               	btfsc	status,2,c
  8850  001E50  D029               	goto	l1371
  8851  001E52  D7F3               	goto	l7097
  8852  001E54                     l7101:
  8853                           
  8854                           ; BSR set to: 0
  8855  001E54  0100               	movlb	0	; () banked
  8856  001E56  51BE               	movf	___ftadd@exp1& (0+255),w,b
  8857  001E58  0100               	movlb	0	; () banked
  8858  001E5A  5DBD               	subwf	___ftadd@exp2& (0+255),w,b
  8859  001E5C  B0D8               	btfsc	status,0,c
  8860  001E5E  D022               	goto	l1371
  8861  001E60                     l7103:
  8862                           
  8863                           ; BSR set to: 0
  8864  001E60  90D8               	bcf	status,0,c
  8865  001E62  363C               	rlcf	___ftadd@f1,f,c
  8866  001E64  363D               	rlcf	___ftadd@f1+1,f,c
  8867  001E66  363E               	rlcf	___ftadd@f1+2,f,c
  8868  001E68  0100               	movlb	0	; () banked
  8869  001E6A  07BE               	decf	___ftadd@exp1& (0+255),f,b
  8870                           
  8871                           ; BSR set to: 0
  8872  001E6C  0100               	movlb	0	; () banked
  8873  001E6E  51BE               	movf	___ftadd@exp1& (0+255),w,b
  8874  001E70  0100               	movlb	0	; () banked
  8875  001E72  19BD               	xorwf	___ftadd@exp2& (0+255),w,b
  8876  001E74  B4D8               	btfsc	status,2,c
  8877  001E76  D010               	goto	l7111
  8878                           
  8879                           ; BSR set to: 0
  8880  001E78  0100               	movlb	0	; () banked
  8881  001E7A  07BC               	decf	___ftadd@sign& (0+255),f,b
  8882  001E7C  C0BC  F0B9         	movff	___ftadd@sign,??___ftadd
  8883  001E80  0E07               	movlw	7
  8884  001E82  0100               	movlb	0	; () banked
  8885  001E84  17B9               	andwf	??___ftadd& (0+255),f,b
  8886  001E86  B4D8               	btfsc	status,2,c
  8887  001E88  D007               	goto	l7111
  8888  001E8A  D7EA               	goto	l7103
  8889  001E8C                     l7109:
  8890                           
  8891                           ; BSR set to: 0
  8892  001E8C  90D8               	bcf	status,0,c
  8893  001E8E  3241               	rrcf	___ftadd@f2+2,f,c
  8894  001E90  3240               	rrcf	___ftadd@f2+1,f,c
  8895  001E92  323F               	rrcf	___ftadd@f2,f,c
  8896  001E94  0100               	movlb	0	; () banked
  8897  001E96  2BBD               	incf	___ftadd@exp2& (0+255),f,b
  8898  001E98                     l7111:
  8899                           
  8900                           ; BSR set to: 0
  8901  001E98  0100               	movlb	0	; () banked
  8902  001E9A  51BD               	movf	___ftadd@exp2& (0+255),w,b
  8903  001E9C  0100               	movlb	0	; () banked
  8904  001E9E  19BE               	xorwf	___ftadd@exp1& (0+255),w,b
  8905  001EA0  A4D8               	btfss	status,2,c
  8906  001EA2  D7F4               	goto	l7109
  8907  001EA4                     l1371:
  8908                           
  8909                           ; BSR set to: 0
  8910  001EA4  0100               	movlb	0	; () banked
  8911  001EA6  AFBC               	btfss	___ftadd@sign& (0+255),7,b
  8912  001EA8  D00C               	goto	l1380
  8913                           
  8914                           ; BSR set to: 0
  8915  001EAA  0EFF               	movlw	255
  8916  001EAC  1A3C               	xorwf	___ftadd@f1,f,c
  8917  001EAE  0EFF               	movlw	255
  8918  001EB0  1A3D               	xorwf	___ftadd@f1+1,f,c
  8919  001EB2  0EFF               	movlw	255
  8920  001EB4  1A3E               	xorwf	___ftadd@f1+2,f,c
  8921  001EB6  0E01               	movlw	1
  8922  001EB8  263C               	addwf	___ftadd@f1,f,c
  8923  001EBA  0E00               	movlw	0
  8924  001EBC  223D               	addwfc	___ftadd@f1+1,f,c
  8925  001EBE  0E00               	movlw	0
  8926  001EC0  223E               	addwfc	___ftadd@f1+2,f,c
  8927  001EC2                     l1380:
  8928                           
  8929                           ; BSR set to: 0
  8930  001EC2  0100               	movlb	0	; () banked
  8931  001EC4  ADBC               	btfss	___ftadd@sign& (0+255),6,b
  8932  001EC6  D00C               	goto	l7117
  8933                           
  8934                           ; BSR set to: 0
  8935  001EC8  0EFF               	movlw	255
  8936  001ECA  1A3F               	xorwf	___ftadd@f2,f,c
  8937  001ECC  0EFF               	movlw	255
  8938  001ECE  1A40               	xorwf	___ftadd@f2+1,f,c
  8939  001ED0  0EFF               	movlw	255
  8940  001ED2  1A41               	xorwf	___ftadd@f2+2,f,c
  8941  001ED4  0E01               	movlw	1
  8942  001ED6  263F               	addwf	___ftadd@f2,f,c
  8943  001ED8  0E00               	movlw	0
  8944  001EDA  2240               	addwfc	___ftadd@f2+1,f,c
  8945  001EDC  0E00               	movlw	0
  8946  001EDE  2241               	addwfc	___ftadd@f2+2,f,c
  8947  001EE0                     l7117:
  8948                           
  8949                           ; BSR set to: 0
  8950  001EE0  0E00               	movlw	0
  8951  001EE2  0100               	movlb	0	; () banked
  8952  001EE4  6FBC               	movwf	___ftadd@sign& (0+255),b
  8953                           
  8954                           ; BSR set to: 0
  8955  001EE6  503C               	movf	___ftadd@f1,w,c
  8956  001EE8  263F               	addwf	___ftadd@f2,f,c
  8957  001EEA  503D               	movf	___ftadd@f1+1,w,c
  8958  001EEC  2240               	addwfc	___ftadd@f2+1,f,c
  8959  001EEE  503E               	movf	___ftadd@f1+2,w,c
  8960  001EF0  2241               	addwfc	___ftadd@f2+2,f,c
  8961                           
  8962                           ; BSR set to: 0
  8963  001EF2  AE41               	btfss	___ftadd@f2+2,7,c
  8964  001EF4  D00F               	goto	l7127
  8965                           
  8966                           ; BSR set to: 0
  8967  001EF6  0EFF               	movlw	255
  8968  001EF8  1A3F               	xorwf	___ftadd@f2,f,c
  8969  001EFA  0EFF               	movlw	255
  8970  001EFC  1A40               	xorwf	___ftadd@f2+1,f,c
  8971  001EFE  0EFF               	movlw	255
  8972  001F00  1A41               	xorwf	___ftadd@f2+2,f,c
  8973  001F02  0E01               	movlw	1
  8974  001F04  263F               	addwf	___ftadd@f2,f,c
  8975  001F06  0E00               	movlw	0
  8976  001F08  2240               	addwfc	___ftadd@f2+1,f,c
  8977  001F0A  0E00               	movlw	0
  8978  001F0C  2241               	addwfc	___ftadd@f2+2,f,c
  8979                           
  8980                           ; BSR set to: 0
  8981  001F0E  0E01               	movlw	1
  8982  001F10  0100               	movlb	0	; () banked
  8983  001F12  6FBC               	movwf	___ftadd@sign& (0+255),b
  8984  001F14                     l7127:
  8985                           
  8986                           ; BSR set to: 0
  8987  001F14  C03F  F00F         	movff	___ftadd@f2,___ftpack@arg
  8988  001F18  C040  F010         	movff	___ftadd@f2+1,___ftpack@arg+1
  8989  001F1C  C041  F011         	movff	___ftadd@f2+2,___ftpack@arg+2
  8990  001F20  C0BE  F012         	movff	___ftadd@exp1,___ftpack@exp
  8991  001F24  C0BC  F013         	movff	___ftadd@sign,___ftpack@sign
  8992  001F28  EC29  F013         	call	___ftpack	;wreg free
  8993  001F2C  C00F  F03C         	movff	?___ftpack,?___ftadd
  8994  001F30  C010  F03D         	movff	?___ftpack+1,?___ftadd+1
  8995  001F34  C011  F03E         	movff	?___ftpack+2,?___ftadd+2
  8996  001F38  0012               	return	
  8997  001F3A                     __end_of___ftadd:
  8998                           	opt stack 0
  8999                           tblptru	equ	0xFF8
  9000                           tblptrh	equ	0xFF7
  9001                           tblptrl	equ	0xFF6
  9002                           tablat	equ	0xFF5
  9003                           prodh	equ	0xFF4
  9004                           prodl	equ	0xFF3
  9005                           intcon	equ	0xFF2
  9006                           intcon2	equ	0xFF1
  9007                           postinc0	equ	0xFEE
  9008                           wreg	equ	0xFE8
  9009                           postinc1	equ	0xFE6
  9010                           postdec1	equ	0xFE5
  9011                           fsr1h	equ	0xFE2
  9012                           fsr1l	equ	0xFE1
  9013                           indf2	equ	0xFDF
  9014                           postinc2	equ	0xFDE
  9015                           postdec2	equ	0xFDD
  9016                           fsr2h	equ	0xFDA
  9017                           fsr2l	equ	0xFD9
  9018                           status	equ	0xFD8
  9019                           
  9020 ;; *************** function ___ftneg *****************
  9021 ;; Defined at:
  9022 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
  9023 ;; Parameters:    Size  Location     Type
  9024 ;;  f1              3   14[COMRAM] float 
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;		None
  9027 ;; Return value:  Size  Location     Type
  9028 ;;                  3   14[COMRAM] float 
  9029 ;; Registers used:
  9030 ;;		wreg, status,2, status,0
  9031 ;; Tracked objects:
  9032 ;;		On entry : 0/0
  9033 ;;		On exit  : 0/0
  9034 ;;		Unchanged: 0/0
  9035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9036 ;;      Params:         3       0       0       0       0       0       0
  9037 ;;      Locals:         0       0       0       0       0       0       0
  9038 ;;      Temps:          0       0       0       0       0       0       0
  9039 ;;      Totals:         3       0       0       0       0       0       0
  9040 ;;Total ram usage:        3 bytes
  9041 ;; Hardware stack levels used:    1
  9042 ;; Hardware stack levels required when called:    3
  9043 ;; This function calls:
  9044 ;;		Nothing
  9045 ;; This function is called by:
  9046 ;;		_printf
  9047 ;;		_CurrentCoulombCount
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           	psect	text37
  9052  00311A                     __ptext37:
  9053                           	opt stack 0
  9054  00311A                     ___ftneg:
  9055                           	opt stack 26
  9056                           
  9057                           ;incstack = 0
  9058  00311A  500F               	movf	___ftneg@f1,w,c
  9059  00311C  1010               	iorwf	___ftneg@f1+1,w,c
  9060  00311E  1011               	iorwf	___ftneg@f1+2,w,c
  9061  003120  B4D8               	btfsc	status,2,c
  9062  003122  D006               	goto	l1430
  9063  003124  0E00               	movlw	0
  9064  003126  1A0F               	xorwf	___ftneg@f1,f,c
  9065  003128  0E00               	movlw	0
  9066  00312A  1A10               	xorwf	___ftneg@f1+1,f,c
  9067  00312C  0E80               	movlw	128
  9068  00312E  1A11               	xorwf	___ftneg@f1+2,f,c
  9069  003130                     l1430:
  9070  003130  C00F  F00F         	movff	___ftneg@f1,?___ftneg
  9071  003134  C010  F010         	movff	___ftneg@f1+1,?___ftneg+1
  9072  003138  C011  F011         	movff	___ftneg@f1+2,?___ftneg+2
  9073  00313C  0012               	return		;funcret
  9074  00313E                     __end_of___ftneg:
  9075                           	opt stack 0
  9076                           tblptru	equ	0xFF8
  9077                           tblptrh	equ	0xFF7
  9078                           tblptrl	equ	0xFF6
  9079                           tablat	equ	0xFF5
  9080                           prodh	equ	0xFF4
  9081                           prodl	equ	0xFF3
  9082                           intcon	equ	0xFF2
  9083                           intcon2	equ	0xFF1
  9084                           postinc0	equ	0xFEE
  9085                           wreg	equ	0xFE8
  9086                           postinc1	equ	0xFE6
  9087                           postdec1	equ	0xFE5
  9088                           fsr1h	equ	0xFE2
  9089                           fsr1l	equ	0xFE1
  9090                           indf2	equ	0xFDF
  9091                           postinc2	equ	0xFDE
  9092                           postdec2	equ	0xFDD
  9093                           fsr2h	equ	0xFDA
  9094                           fsr2l	equ	0xFD9
  9095                           status	equ	0xFD8
  9096                           
  9097 ;; *************** function ___ftge *****************
  9098 ;; Defined at:
  9099 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;  ff1             3   14[COMRAM] float 
  9102 ;;  ff2             3   17[COMRAM] float 
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;		None
  9105 ;; Return value:  Size  Location     Type
  9106 ;;		None               void
  9107 ;; Registers used:
  9108 ;;		wreg, status,2, status,0
  9109 ;; Tracked objects:
  9110 ;;		On entry : 0/0
  9111 ;;		On exit  : 0/0
  9112 ;;		Unchanged: 0/0
  9113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9114 ;;      Params:         6       0       0       0       0       0       0
  9115 ;;      Locals:         0       0       0       0       0       0       0
  9116 ;;      Temps:          3       0       0       0       0       0       0
  9117 ;;      Totals:         9       0       0       0       0       0       0
  9118 ;;Total ram usage:        9 bytes
  9119 ;; Hardware stack levels used:    1
  9120 ;; Hardware stack levels required when called:    3
  9121 ;; This function calls:
  9122 ;;		Nothing
  9123 ;; This function is called by:
  9124 ;;		_printf
  9125 ;;		_Temp_Fault
  9126 ;;		_CheckTestReading
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text38
  9131  0027A4                     __ptext38:
  9132                           	opt stack 0
  9133  0027A4                     ___ftge:
  9134                           	opt stack 26
  9135                           
  9136                           ;incstack = 0
  9137  0027A4  AE11               	btfss	___ftge@ff1+2,7,c
  9138  0027A6  D016               	goto	l7637
  9139  0027A8  C00F  F015         	movff	___ftge@ff1,??___ftge
  9140  0027AC  C010  F016         	movff	___ftge@ff1+1,??___ftge+1
  9141  0027B0  C011  F017         	movff	___ftge@ff1+2,??___ftge+2
  9142  0027B4  1E15               	comf	??___ftge,f,c
  9143  0027B6  1E16               	comf	??___ftge+1,f,c
  9144  0027B8  1E17               	comf	??___ftge+2,f,c
  9145  0027BA  2A15               	incf	??___ftge,f,c
  9146  0027BC  0E00               	movlw	0
  9147  0027BE  2216               	addwfc	??___ftge+1,f,c
  9148  0027C0  2217               	addwfc	??___ftge+2,f,c
  9149  0027C2  0E00               	movlw	0
  9150  0027C4  2415               	addwf	??___ftge,w,c
  9151  0027C6  6E0F               	movwf	___ftge@ff1,c
  9152  0027C8  0E00               	movlw	0
  9153  0027CA  2016               	addwfc	??___ftge+1,w,c
  9154  0027CC  6E10               	movwf	___ftge@ff1+1,c
  9155  0027CE  0E80               	movlw	128
  9156  0027D0  2017               	addwfc	??___ftge+2,w,c
  9157  0027D2  6E11               	movwf	___ftge@ff1+2,c
  9158  0027D4                     l7637:
  9159  0027D4  AE14               	btfss	___ftge@ff2+2,7,c
  9160  0027D6  D016               	goto	l7641
  9161  0027D8  C012  F015         	movff	___ftge@ff2,??___ftge
  9162  0027DC  C013  F016         	movff	___ftge@ff2+1,??___ftge+1
  9163  0027E0  C014  F017         	movff	___ftge@ff2+2,??___ftge+2
  9164  0027E4  1E15               	comf	??___ftge,f,c
  9165  0027E6  1E16               	comf	??___ftge+1,f,c
  9166  0027E8  1E17               	comf	??___ftge+2,f,c
  9167  0027EA  2A15               	incf	??___ftge,f,c
  9168  0027EC  0E00               	movlw	0
  9169  0027EE  2216               	addwfc	??___ftge+1,f,c
  9170  0027F0  2217               	addwfc	??___ftge+2,f,c
  9171  0027F2  0E00               	movlw	0
  9172  0027F4  2415               	addwf	??___ftge,w,c
  9173  0027F6  6E12               	movwf	___ftge@ff2,c
  9174  0027F8  0E00               	movlw	0
  9175  0027FA  2016               	addwfc	??___ftge+1,w,c
  9176  0027FC  6E13               	movwf	___ftge@ff2+1,c
  9177  0027FE  0E80               	movlw	128
  9178  002800  2017               	addwfc	??___ftge+2,w,c
  9179  002802  6E14               	movwf	___ftge@ff2+2,c
  9180  002804                     l7641:
  9181  002804  0E00               	movlw	0
  9182  002806  1A0F               	xorwf	___ftge@ff1,f,c
  9183  002808  0E00               	movlw	0
  9184  00280A  1A10               	xorwf	___ftge@ff1+1,f,c
  9185  00280C  0E80               	movlw	128
  9186  00280E  1A11               	xorwf	___ftge@ff1+2,f,c
  9187  002810  0E00               	movlw	0
  9188  002812  1A12               	xorwf	___ftge@ff2,f,c
  9189  002814  0E00               	movlw	0
  9190  002816  1A13               	xorwf	___ftge@ff2+1,f,c
  9191  002818  0E80               	movlw	128
  9192  00281A  1A14               	xorwf	___ftge@ff2+2,f,c
  9193  00281C  5012               	movf	___ftge@ff2,w,c
  9194  00281E  5C0F               	subwf	___ftge@ff1,w,c
  9195  002820  5013               	movf	___ftge@ff2+1,w,c
  9196  002822  5810               	subwfb	___ftge@ff1+1,w,c
  9197  002824  5014               	movf	___ftge@ff2+2,w,c
  9198  002826  5811               	subwfb	___ftge@ff1+2,w,c
  9199  002828  B0D8               	btfsc	status,0,c
  9200  00282A  D002               	goto	l7647
  9201  00282C  90D8               	bcf	status,0,c
  9202  00282E  0012               	return	
  9203  002830                     l7647:
  9204  002830  80D8               	bsf	status,0,c
  9205  002832  0012               	return	
  9206  002834                     __end_of___ftge:
  9207                           	opt stack 0
  9208                           tblptru	equ	0xFF8
  9209                           tblptrh	equ	0xFF7
  9210                           tblptrl	equ	0xFF6
  9211                           tablat	equ	0xFF5
  9212                           prodh	equ	0xFF4
  9213                           prodl	equ	0xFF3
  9214                           intcon	equ	0xFF2
  9215                           intcon2	equ	0xFF1
  9216                           postinc0	equ	0xFEE
  9217                           wreg	equ	0xFE8
  9218                           postinc1	equ	0xFE6
  9219                           postdec1	equ	0xFE5
  9220                           fsr1h	equ	0xFE2
  9221                           fsr1l	equ	0xFE1
  9222                           indf2	equ	0xFDF
  9223                           postinc2	equ	0xFDE
  9224                           postdec2	equ	0xFDD
  9225                           fsr2h	equ	0xFDA
  9226                           fsr2l	equ	0xFD9
  9227                           status	equ	0xFD8
  9228                           
  9229 ;; *************** function ___awtoft *****************
  9230 ;; Defined at:
  9231 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awtoft.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;  c               2   22[COMRAM] int 
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;  sign            1   25[COMRAM] unsigned char 
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  3   22[COMRAM] float 
  9238 ;; Registers used:
  9239 ;;		wreg, status,2, status,0, cstack
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9245 ;;      Params:         3       0       0       0       0       0       0
  9246 ;;      Locals:         1       0       0       0       0       0       0
  9247 ;;      Temps:          0       0       0       0       0       0       0
  9248 ;;      Totals:         4       0       0       0       0       0       0
  9249 ;;Total ram usage:        4 bytes
  9250 ;; Hardware stack levels used:    1
  9251 ;; Hardware stack levels required when called:    4
  9252 ;; This function calls:
  9253 ;;		___ftpack
  9254 ;; This function is called by:
  9255 ;;		_Run_Mode
  9256 ;;		_CheckTestReading
  9257 ;;		_CurrentCoulombCount
  9258 ;;		_log
  9259 ;; This function uses a non-reentrant model
  9260 ;;
  9261                           
  9262                           	psect	text39
  9263  002FB0                     __ptext39:
  9264                           	opt stack 0
  9265  002FB0                     ___awtoft:
  9266                           	opt stack 25
  9267                           
  9268                           ;incstack = 0
  9269  002FB0  0E00               	movlw	0
  9270  002FB2  6E1A               	movwf	___awtoft@sign,c
  9271  002FB4  AE18               	btfss	___awtoft@c+1,7,c
  9272  002FB6  D006               	goto	l8111
  9273  002FB8  6C17               	negf	___awtoft@c,c
  9274  002FBA  1E18               	comf	___awtoft@c+1,f,c
  9275  002FBC  B0D8               	btfsc	status,0,c
  9276  002FBE  2A18               	incf	___awtoft@c+1,f,c
  9277  002FC0  0E01               	movlw	1
  9278  002FC2  6E1A               	movwf	___awtoft@sign,c
  9279  002FC4                     l8111:
  9280  002FC4  C017  F00F         	movff	___awtoft@c,___ftpack@arg
  9281  002FC8  C018  F010         	movff	___awtoft@c+1,___ftpack@arg+1
  9282  002FCC  6A11               	clrf	___ftpack@arg+2,c
  9283  002FCE  0E8E               	movlw	142
  9284  002FD0  6E12               	movwf	___ftpack@exp,c
  9285  002FD2  C01A  F013         	movff	___awtoft@sign,___ftpack@sign
  9286  002FD6  EC29  F013         	call	___ftpack	;wreg free
  9287  002FDA  C00F  F017         	movff	?___ftpack,?___awtoft
  9288  002FDE  C010  F018         	movff	?___ftpack+1,?___awtoft+1
  9289  002FE2  C011  F019         	movff	?___ftpack+2,?___awtoft+2
  9290  002FE6  0012               	return	
  9291  002FE8                     __end_of___awtoft:
  9292                           	opt stack 0
  9293                           tblptru	equ	0xFF8
  9294                           tblptrh	equ	0xFF7
  9295                           tblptrl	equ	0xFF6
  9296                           tablat	equ	0xFF5
  9297                           prodh	equ	0xFF4
  9298                           prodl	equ	0xFF3
  9299                           intcon	equ	0xFF2
  9300                           intcon2	equ	0xFF1
  9301                           postinc0	equ	0xFEE
  9302                           wreg	equ	0xFE8
  9303                           postinc1	equ	0xFE6
  9304                           postdec1	equ	0xFE5
  9305                           fsr1h	equ	0xFE2
  9306                           fsr1l	equ	0xFE1
  9307                           indf2	equ	0xFDF
  9308                           postinc2	equ	0xFDE
  9309                           postdec2	equ	0xFDD
  9310                           fsr2h	equ	0xFDA
  9311                           fsr2l	equ	0xFD9
  9312                           status	equ	0xFD8
  9313                           
  9314 ;; *************** function ___ftpack *****************
  9315 ;; Defined at:
  9316 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;  arg             3   14[COMRAM] unsigned um
  9319 ;;  exp             1   17[COMRAM] unsigned char 
  9320 ;;  sign            1   18[COMRAM] unsigned char 
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;		None
  9323 ;; Return value:  Size  Location     Type
  9324 ;;                  3   14[COMRAM] float 
  9325 ;; Registers used:
  9326 ;;		wreg, status,2, status,0
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 0/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9332 ;;      Params:         5       0       0       0       0       0       0
  9333 ;;      Locals:         0       0       0       0       0       0       0
  9334 ;;      Temps:          3       0       0       0       0       0       0
  9335 ;;      Totals:         8       0       0       0       0       0       0
  9336 ;;Total ram usage:        8 bytes
  9337 ;; Hardware stack levels used:    1
  9338 ;; Hardware stack levels required when called:    3
  9339 ;; This function calls:
  9340 ;;		Nothing
  9341 ;; This function is called by:
  9342 ;;		___awtoft
  9343 ;;		___ftadd
  9344 ;;		___ftmul
  9345 ;;		___lltoft
  9346 ;;		___lwtoft
  9347 ;;		___ftdiv
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351                           	psect	text40
  9352  002652                     __ptext40:
  9353                           	opt stack 0
  9354  002652                     ___ftpack:
  9355                           	opt stack 24
  9356                           
  9357                           ;incstack = 0
  9358  002652  5012               	movf	___ftpack@exp,w,c
  9359  002654  B4D8               	btfsc	status,2,c
  9360  002656  D005               	goto	l6917
  9361  002658  500F               	movf	___ftpack@arg,w,c
  9362  00265A  1010               	iorwf	___ftpack@arg+1,w,c
  9363  00265C  1011               	iorwf	___ftpack@arg+2,w,c
  9364  00265E  A4D8               	btfss	status,2,c
  9365  002660  D00C               	goto	l6923
  9366  002662                     l6917:
  9367  002662  0E00               	movlw	0
  9368  002664  6E0F               	movwf	?___ftpack,c
  9369  002666  0E00               	movlw	0
  9370  002668  6E10               	movwf	?___ftpack+1,c
  9371  00266A  0E00               	movlw	0
  9372  00266C  6E11               	movwf	?___ftpack+2,c
  9373  00266E  0012               	return	
  9374  002670                     l6921:
  9375  002670  2A12               	incf	___ftpack@exp,f,c
  9376  002672  90D8               	bcf	status,0,c
  9377  002674  3211               	rrcf	___ftpack@arg+2,f,c
  9378  002676  3210               	rrcf	___ftpack@arg+1,f,c
  9379  002678  320F               	rrcf	___ftpack@arg,f,c
  9380  00267A                     l6923:
  9381  00267A  0E00               	movlw	0
  9382  00267C  140F               	andwf	___ftpack@arg,w,c
  9383  00267E  6E14               	movwf	??___ftpack& (0+255),c
  9384  002680  0E00               	movlw	0
  9385  002682  1410               	andwf	___ftpack@arg+1,w,c
  9386  002684  6E15               	movwf	(??___ftpack+1)& (0+255),c
  9387  002686  0EFE               	movlw	254
  9388  002688  1411               	andwf	___ftpack@arg+2,w,c
  9389  00268A  6E16               	movwf	(??___ftpack+2)& (0+255),c
  9390  00268C  5014               	movf	??___ftpack,w,c
  9391  00268E  1015               	iorwf	??___ftpack+1,w,c
  9392  002690  1016               	iorwf	??___ftpack+2,w,c
  9393  002692  B4D8               	btfsc	status,2,c
  9394  002694  D00C               	goto	l6929
  9395  002696  D7EC               	goto	l6921
  9396  002698                     l6925:
  9397  002698  2A12               	incf	___ftpack@exp,f,c
  9398  00269A  0E01               	movlw	1
  9399  00269C  260F               	addwf	___ftpack@arg,f,c
  9400  00269E  0E00               	movlw	0
  9401  0026A0  2210               	addwfc	___ftpack@arg+1,f,c
  9402  0026A2  0E00               	movlw	0
  9403  0026A4  2211               	addwfc	___ftpack@arg+2,f,c
  9404  0026A6  90D8               	bcf	status,0,c
  9405  0026A8  3211               	rrcf	___ftpack@arg+2,f,c
  9406  0026AA  3210               	rrcf	___ftpack@arg+1,f,c
  9407  0026AC  320F               	rrcf	___ftpack@arg,f,c
  9408  0026AE                     l6929:
  9409  0026AE  0E00               	movlw	0
  9410  0026B0  140F               	andwf	___ftpack@arg,w,c
  9411  0026B2  6E14               	movwf	??___ftpack& (0+255),c
  9412  0026B4  0E00               	movlw	0
  9413  0026B6  1410               	andwf	___ftpack@arg+1,w,c
  9414  0026B8  6E15               	movwf	(??___ftpack+1)& (0+255),c
  9415  0026BA  0EFF               	movlw	255
  9416  0026BC  1411               	andwf	___ftpack@arg+2,w,c
  9417  0026BE  6E16               	movwf	(??___ftpack+2)& (0+255),c
  9418  0026C0  5014               	movf	??___ftpack,w,c
  9419  0026C2  1015               	iorwf	??___ftpack+1,w,c
  9420  0026C4  1016               	iorwf	??___ftpack+2,w,c
  9421  0026C6  B4D8               	btfsc	status,2,c
  9422  0026C8  D006               	goto	l6933
  9423  0026CA  D7E6               	goto	l6925
  9424  0026CC                     l6931:
  9425  0026CC  0612               	decf	___ftpack@exp,f,c
  9426  0026CE  90D8               	bcf	status,0,c
  9427  0026D0  360F               	rlcf	___ftpack@arg,f,c
  9428  0026D2  3610               	rlcf	___ftpack@arg+1,f,c
  9429  0026D4  3611               	rlcf	___ftpack@arg+2,f,c
  9430  0026D6                     l6933:
  9431  0026D6  BE10               	btfsc	___ftpack@arg+1,7,c
  9432  0026D8  D003               	goto	l1333
  9433  0026DA  0E02               	movlw	2
  9434  0026DC  6012               	cpfslt	___ftpack@exp,c
  9435  0026DE  D7F6               	goto	l6931
  9436  0026E0                     l1333:
  9437  0026E0  A012               	btfss	___ftpack@exp,0,c
  9438  0026E2  9E10               	bcf	___ftpack@arg+1,7,c
  9439  0026E4  90D8               	bcf	status,0,c
  9440  0026E6  3212               	rrcf	___ftpack@exp,f,c
  9441  0026E8  5012               	movf	___ftpack@exp,w,c
  9442  0026EA  1211               	iorwf	___ftpack@arg+2,f,c
  9443  0026EC  5013               	movf	___ftpack@sign,w,c
  9444  0026EE  A4D8               	btfss	status,2,c
  9445  0026F0  8E11               	bsf	___ftpack@arg+2,7,c
  9446  0026F2  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  9447  0026F6  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  9448  0026FA  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  9449  0026FE  0012               	return	
  9450  002700                     __end_of___ftpack:
  9451                           	opt stack 0
  9452                           tblptru	equ	0xFF8
  9453                           tblptrh	equ	0xFF7
  9454                           tblptrl	equ	0xFF6
  9455                           tablat	equ	0xFF5
  9456                           prodh	equ	0xFF4
  9457                           prodl	equ	0xFF3
  9458                           intcon	equ	0xFF2
  9459                           intcon2	equ	0xFF1
  9460                           postinc0	equ	0xFEE
  9461                           wreg	equ	0xFE8
  9462                           postinc1	equ	0xFE6
  9463                           postdec1	equ	0xFE5
  9464                           fsr1h	equ	0xFE2
  9465                           fsr1l	equ	0xFE1
  9466                           indf2	equ	0xFDF
  9467                           postinc2	equ	0xFDE
  9468                           postdec2	equ	0xFDD
  9469                           fsr2h	equ	0xFDA
  9470                           fsr2l	equ	0xFD9
  9471                           status	equ	0xFD8
  9472                           
  9473 ;; *************** function _Read_Battery *****************
  9474 ;; Defined at:
  9475 ;;		line 414 in file "BatteryManagment.c"
  9476 ;; Parameters:    Size  Location     Type
  9477 ;;  BatteryPlace    2   56[BANK0 ] int 
  9478 ;;  cell_codes      2   58[BANK0 ] PTR int [12]
  9479 ;;		 -> cell_codes_Bank(24), 
  9480 ;; Auto vars:     Size  Location     Type
  9481 ;;  Read_Status     2   62[BANK0 ] int 
  9482 ;; Return value:  Size  Location     Type
  9483 ;;                  2   56[BANK0 ] int 
  9484 ;; Registers used:
  9485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9486 ;; Tracked objects:
  9487 ;;		On entry : 0/0
  9488 ;;		On exit  : 0/0
  9489 ;;		Unchanged: 0/0
  9490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9491 ;;      Params:         0       4       0       0       0       0       0
  9492 ;;      Locals:         0       2       0       0       0       0       0
  9493 ;;      Temps:          0       2       0       0       0       0       0
  9494 ;;      Totals:         0       8       0       0       0       0       0
  9495 ;;Total ram usage:        8 bytes
  9496 ;; Hardware stack levels used:    1
  9497 ;; Hardware stack levels required when called:    7
  9498 ;; This function calls:
  9499 ;;		_Delay
  9500 ;;		_LTC6804_adcv
  9501 ;;		_LTC6804_rdcv
  9502 ;;		_set_adc
  9503 ;; This function is called by:
  9504 ;;		_Run_Mode
  9505 ;;		_Run_ByPass
  9506 ;;		_Read_Total_Voltage
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           
  9510                           	psect	text41
  9511  0014D8                     __ptext41:
  9512                           	opt stack 0
  9513  0014D8                     _Read_Battery:
  9514                           	opt stack 22
  9515                           
  9516                           ;BatteryManagment.c: 415: int Read_Status = 0;
  9517                           
  9518                           ;incstack = 0
  9519  0014D8  0E00               	movlw	0
  9520  0014DA  0100               	movlb	0	; () banked
  9521  0014DC  6FF8               	movwf	(Read_Battery@Read_Status+1)& (0+255),b
  9522  0014DE  0E00               	movlw	0
  9523  0014E0  6FF7               	movwf	Read_Battery@Read_Status& (0+255),b
  9524                           
  9525                           ;BatteryManagment.c: 417: switch (BatteryPlacement) {
  9526  0014E2  D1A3               	goto	l8097
  9527  0014E4                     l8029:
  9528                           
  9529                           ; BSR set to: 0
  9530                           ;BatteryManagment.c: 419: set_adc(3, 0, 0, 0);
  9531  0014E4  0E00               	movlw	0
  9532  0014E6  6E10               	movwf	set_adc@MD+1,c
  9533  0014E8  0E03               	movlw	3
  9534  0014EA  6E0F               	movwf	set_adc@MD,c
  9535  0014EC  0E00               	movlw	0
  9536  0014EE  6E12               	movwf	set_adc@DCP+1,c
  9537  0014F0  0E00               	movlw	0
  9538  0014F2  6E11               	movwf	set_adc@DCP,c
  9539  0014F4  0E00               	movlw	0
  9540  0014F6  6E14               	movwf	set_adc@CH+1,c
  9541  0014F8  0E00               	movlw	0
  9542  0014FA  6E13               	movwf	set_adc@CH,c
  9543  0014FC  0E00               	movlw	0
  9544  0014FE  6E16               	movwf	set_adc@CHG+1,c
  9545  001500  0E00               	movlw	0
  9546  001502  6E15               	movwf	set_adc@CHG,c
  9547  001504  EC62  F012         	call	_set_adc	;wreg free
  9548                           
  9549                           ;BatteryManagment.c: 420: LTC6804_adcv();
  9550  001508  EC11  F016         	call	_LTC6804_adcv	;wreg free
  9551                           
  9552                           ;BatteryManagment.c: 421: Delay(10);
  9553  00150C  0E00               	movlw	0
  9554  00150E  6E10               	movwf	Delay@wait+1,c
  9555  001510  0E0A               	movlw	10
  9556  001512  6E0F               	movwf	Delay@wait,c
  9557  001514  ECF4  F017         	call	_Delay	;wreg free
  9558                           
  9559                           ;BatteryManagment.c: 422: Read_Status = LTC6804_rdcv(0, 1, cell_codes);
  9560  001518  0E00               	movlw	0
  9561  00151A  0100               	movlb	0	; () banked
  9562  00151C  6FBA               	movwf	(LTC6804_rdcv@reg+1)& (0+255),b
  9563  00151E  0E00               	movlw	0
  9564  001520  6FB9               	movwf	LTC6804_rdcv@reg& (0+255),b
  9565  001522  0E00               	movlw	0
  9566  001524  0100               	movlb	0	; () banked
  9567  001526  6FBC               	movwf	(LTC6804_rdcv@total_ic+1)& (0+255),b
  9568  001528  0E01               	movlw	1
  9569  00152A  6FBB               	movwf	LTC6804_rdcv@total_ic& (0+255),b
  9570  00152C  C0F3  F0BD         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  9571  001530  C0F4  F0BE         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  9572  001534  ECC9  F005         	call	_LTC6804_rdcv	;wreg free
  9573  001538  D173               	goto	L13
  9574  00153A                     l8037:
  9575                           
  9576                           ;BatteryManagment.c: 425: set_adc(2, 0, 1, 0);
  9577  00153A  0E00               	movlw	0
  9578  00153C  6E10               	movwf	set_adc@MD+1,c
  9579  00153E  0E02               	movlw	2
  9580  001540  6E0F               	movwf	set_adc@MD,c
  9581  001542  0E00               	movlw	0
  9582  001544  6E12               	movwf	set_adc@DCP+1,c
  9583  001546  0E00               	movlw	0
  9584  001548  6E11               	movwf	set_adc@DCP,c
  9585  00154A  0E00               	movlw	0
  9586  00154C  6E14               	movwf	set_adc@CH+1,c
  9587  00154E  0E01               	movlw	1
  9588  001550  6E13               	movwf	set_adc@CH,c
  9589  001552  0E00               	movlw	0
  9590  001554  6E16               	movwf	set_adc@CHG+1,c
  9591  001556  0E00               	movlw	0
  9592  001558  6E15               	movwf	set_adc@CHG,c
  9593  00155A  EC62  F012         	call	_set_adc	;wreg free
  9594                           
  9595                           ;BatteryManagment.c: 426: LTC6804_adcv();
  9596  00155E  EC11  F016         	call	_LTC6804_adcv	;wreg free
  9597                           
  9598                           ;BatteryManagment.c: 427: Delay(10);
  9599  001562  0E00               	movlw	0
  9600  001564  6E10               	movwf	Delay@wait+1,c
  9601  001566  0E0A               	movlw	10
  9602  001568  6E0F               	movwf	Delay@wait,c
  9603  00156A  ECF4  F017         	call	_Delay	;wreg free
  9604                           
  9605                           ;BatteryManagment.c: 428: Read_Status = LTC6804_rdcv(1, 3, cell_codes);
  9606  00156E  0E00               	movlw	0
  9607  001570  0100               	movlb	0	; () banked
  9608  001572  6FBA               	movwf	(LTC6804_rdcv@reg+1)& (0+255),b
  9609  001574  0E01               	movlw	1
  9610  001576  6FB9               	movwf	LTC6804_rdcv@reg& (0+255),b
  9611  001578  0E00               	movlw	0
  9612  00157A  0100               	movlb	0	; () banked
  9613  00157C  6FBC               	movwf	(LTC6804_rdcv@total_ic+1)& (0+255),b
  9614  00157E  0E03               	movlw	3
  9615  001580  6FBB               	movwf	LTC6804_rdcv@total_ic& (0+255),b
  9616  001582  C0F3  F0BD         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  9617  001586  C0F4  F0BE         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  9618  00158A  ECC9  F005         	call	_LTC6804_rdcv	;wreg free
  9619  00158E  C0B9  F0F7         	movff	?_LTC6804_rdcv,Read_Battery@Read_Status
  9620  001592  C0BA  F0F8         	movff	?_LTC6804_rdcv+1,Read_Battery@Read_Status+1
  9621                           
  9622                           ;BatteryManagment.c: 429: Read_Status = LTC6804_rdcv(3, 3, cell_codes);
  9623  001596  0E00               	movlw	0
  9624  001598  0100               	movlb	0	; () banked
  9625  00159A  6FBA               	movwf	(LTC6804_rdcv@reg+1)& (0+255),b
  9626  00159C  0E03               	movlw	3
  9627  00159E  6FB9               	movwf	LTC6804_rdcv@reg& (0+255),b
  9628  0015A0  0E00               	movlw	0
  9629  0015A2  0100               	movlb	0	; () banked
  9630  0015A4  6FBC               	movwf	(LTC6804_rdcv@total_ic+1)& (0+255),b
  9631  0015A6  0E03               	movlw	3
  9632  0015A8  6FBB               	movwf	LTC6804_rdcv@total_ic& (0+255),b
  9633  0015AA  C0F3  F0BD         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  9634  0015AE  C0F4  F0BE         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  9635  0015B2  ECC9  F005         	call	_LTC6804_rdcv	;wreg free
  9636  0015B6  D134               	goto	L13
  9637  0015B8                     l8047:
  9638                           
  9639                           ;BatteryManagment.c: 432: set_adc(2, 0, 2, 0);
  9640  0015B8  0E00               	movlw	0
  9641  0015BA  6E10               	movwf	set_adc@MD+1,c
  9642  0015BC  0E02               	movlw	2
  9643  0015BE  6E0F               	movwf	set_adc@MD,c
  9644  0015C0  0E00               	movlw	0
  9645  0015C2  6E12               	movwf	set_adc@DCP+1,c
  9646  0015C4  0E00               	movlw	0
  9647  0015C6  6E11               	movwf	set_adc@DCP,c
  9648  0015C8  0E00               	movlw	0
  9649  0015CA  6E14               	movwf	set_adc@CH+1,c
  9650  0015CC  0E02               	movlw	2
  9651  0015CE  6E13               	movwf	set_adc@CH,c
  9652  0015D0  0E00               	movlw	0
  9653  0015D2  6E16               	movwf	set_adc@CHG+1,c
  9654  0015D4  0E00               	movlw	0
  9655  0015D6  6E15               	movwf	set_adc@CHG,c
  9656  0015D8  EC62  F012         	call	_set_adc	;wreg free
  9657                           
  9658                           ;BatteryManagment.c: 433: LTC6804_adcv();
  9659  0015DC  EC11  F016         	call	_LTC6804_adcv	;wreg free
  9660                           
  9661                           ;BatteryManagment.c: 434: Delay(10);
  9662  0015E0  0E00               	movlw	0
  9663  0015E2  6E10               	movwf	Delay@wait+1,c
  9664  0015E4  0E0A               	movlw	10
  9665  0015E6  6E0F               	movwf	Delay@wait,c
  9666  0015E8  ECF4  F017         	call	_Delay	;wreg free
  9667                           
  9668                           ;BatteryManagment.c: 435: Read_Status = LTC6804_rdcv(0, 1, cell_codes);
  9669  0015EC  0E00               	movlw	0
  9670  0015EE  0100               	movlb	0	; () banked
  9671  0015F0  6FBA               	movwf	(LTC6804_rdcv@reg+1)& (0+255),b
  9672  0015F2  0E00               	movlw	0
  9673  0015F4  6FB9               	movwf	LTC6804_rdcv@reg& (0+255),b
  9674  0015F6  0E00               	movlw	0
  9675  0015F8  0100               	movlb	0	; () banked
  9676  0015FA  6FBC               	movwf	(LTC6804_rdcv@total_ic+1)& (0+255),b
  9677  0015FC  0E01               	movlw	1
  9678  0015FE  6FBB               	movwf	LTC6804_rdcv@total_ic& (0+255),b
  9679  001600  C0F3  F0BD         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  9680  001604  C0F4  F0BE         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  9681  001608  ECC9  F005         	call	_LTC6804_rdcv	;wreg free
  9682  00160C  C0B9  F0F7         	movff	?_LTC6804_rdcv,Read_Battery@Read_Status
  9683  001610  C0BA  F0F8         	movff	?_LTC6804_rdcv+1,Read_Battery@Read_Status+1
  9684                           
  9685                           ;BatteryManagment.c: 436: Read_Status = LTC6804_rdcv(3, 1, cell_codes);
  9686  001614  0E00               	movlw	0
  9687  001616  0100               	movlb	0	; () banked
  9688  001618  6FBA               	movwf	(LTC6804_rdcv@reg+1)& (0+255),b
  9689  00161A  0E03               	movlw	3
  9690  00161C  6FB9               	movwf	LTC6804_rdcv@reg& (0+255),b
  9691  00161E  0E00               	movlw	0
  9692  001620  0100               	movlb	0	; () banked
  9693  001622  6FBC               	movwf	(LTC6804_rdcv@total_ic+1)& (0+255),b
  9694  001624  0E01               	movlw	1
  9695  001626  6FBB               	movwf	LTC6804_rdcv@total_ic& (0+255),b
  9696  001628  C0F3  F0BD         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  9697  00162C  C0F4  F0BE         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  9698  001630  ECC9  F005         	call	_LTC6804_rdcv	;wreg free
  9699  001634  D0F5               	goto	L13
  9700  001636                     l8057:
  9701                           
  9702                           ;BatteryManagment.c: 439: set_adc(2, 0, 3, 0);
  9703  001636  0E00               	movlw	0
  9704  001638  6E10               	movwf	set_adc@MD+1,c
  9705  00163A  0E02               	movlw	2
  9706  00163C  6E0F               	movwf	set_adc@MD,c
  9707  00163E  0E00               	movlw	0
  9708  001640  6E12               	movwf	set_adc@DCP+1,c
  9709  001642  0E00               	movlw	0
  9710  001644  6E11               	movwf	set_adc@DCP,c
  9711  001646  0E00               	movlw	0
  9712  001648  6E14               	movwf	set_adc@CH+1,c
  9713  00164A  0E03               	movlw	3
  9714  00164C  6E13               	movwf	set_adc@CH,c
  9715  00164E  0E00               	movlw	0
  9716  001650  6E16               	movwf	set_adc@CHG+1,c
  9717  001652  0E00               	movlw	0
  9718  001654  6E15               	movwf	set_adc@CHG,c
  9719  001656  EC62  F012         	call	_set_adc	;wreg free
  9720                           
  9721                           ;BatteryManagment.c: 440: LTC6804_adcv();
  9722  00165A  EC11  F016         	call	_LTC6804_adcv	;wreg free
  9723                           
  9724                           ;BatteryManagment.c: 441: Delay(10);
  9725  00165E  0E00               	movlw	0
  9726  001660  6E10               	movwf	Delay@wait+1,c
  9727  001662  0E0A               	movlw	10
  9728  001664  6E0F               	movwf	Delay@wait,c
  9729  001666  ECF4  F017         	call	_Delay	;wreg free
  9730                           
  9731                           ;BatteryManagment.c: 442: Read_Status = LTC6804_rdcv(0, 1, cell_codes);
  9732  00166A  0E00               	movlw	0
  9733  00166C  0100               	movlb	0	; () banked
  9734  00166E  6FBA               	movwf	(LTC6804_rdcv@reg+1)& (0+255),b
  9735  001670  0E00               	movlw	0
  9736  001672  6FB9               	movwf	LTC6804_rdcv@reg& (0+255),b
  9737  001674  0E00               	movlw	0
  9738  001676  0100               	movlb	0	; () banked
  9739  001678  6FBC               	movwf	(LTC6804_rdcv@total_ic+1)& (0+255),b
  9740  00167A  0E01               	movlw	1
  9741  00167C  6FBB               	movwf	LTC6804_rdcv@total_ic& (0+255),b
  9742  00167E  C0F3  F0BD         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  9743  001682  C0F4  F0BE         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  9744  001686  ECC9  F005         	call	_LTC6804_rdcv	;wreg free
  9745  00168A  C0B9  F0F7         	movff	?_LTC6804_rdcv,Read_Battery@Read_Status
  9746  00168E  C0BA  F0F8         	movff	?_LTC6804_rdcv+1,Read_Battery@Read_Status+1
  9747                           
  9748                           ;BatteryManagment.c: 443: Read_Status = LTC6804_rdcv(3, 1, cell_codes);
  9749  001692  0E00               	movlw	0
  9750  001694  0100               	movlb	0	; () banked
  9751  001696  6FBA               	movwf	(LTC6804_rdcv@reg+1)& (0+255),b
  9752  001698  0E03               	movlw	3
  9753  00169A  6FB9               	movwf	LTC6804_rdcv@reg& (0+255),b
  9754  00169C  0E00               	movlw	0
  9755  00169E  0100               	movlb	0	; () banked
  9756  0016A0  6FBC               	movwf	(LTC6804_rdcv@total_ic+1)& (0+255),b
  9757  0016A2  0E01               	movlw	1
  9758  0016A4  6FBB               	movwf	LTC6804_rdcv@total_ic& (0+255),b
  9759  0016A6  C0F3  F0BD         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  9760  0016AA  C0F4  F0BE         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  9761  0016AE  ECC9  F005         	call	_LTC6804_rdcv	;wreg free
  9762  0016B2  D0B6               	goto	L13
  9763  0016B4                     l8067:
  9764                           
  9765                           ;BatteryManagment.c: 446: set_adc(2, 0, 4, 0);
  9766  0016B4  0E00               	movlw	0
  9767  0016B6  6E10               	movwf	set_adc@MD+1,c
  9768  0016B8  0E02               	movlw	2
  9769  0016BA  6E0F               	movwf	set_adc@MD,c
  9770  0016BC  0E00               	movlw	0
  9771  0016BE  6E12               	movwf	set_adc@DCP+1,c
  9772  0016C0  0E00               	movlw	0
  9773  0016C2  6E11               	movwf	set_adc@DCP,c
  9774  0016C4  0E00               	movlw	0
  9775  0016C6  6E14               	movwf	set_adc@CH+1,c
  9776  0016C8  0E04               	movlw	4
  9777  0016CA  6E13               	movwf	set_adc@CH,c
  9778  0016CC  0E00               	movlw	0
  9779  0016CE  6E16               	movwf	set_adc@CHG+1,c
  9780  0016D0  0E00               	movlw	0
  9781  0016D2  6E15               	movwf	set_adc@CHG,c
  9782  0016D4  EC62  F012         	call	_set_adc	;wreg free
  9783                           
  9784                           ;BatteryManagment.c: 447: LTC6804_adcv();
  9785  0016D8  EC11  F016         	call	_LTC6804_adcv	;wreg free
  9786                           
  9787                           ;BatteryManagment.c: 448: Read_Status = LTC6804_rdcv(2, 1, cell_codes);
  9788  0016DC  0E00               	movlw	0
  9789  0016DE  0100               	movlb	0	; () banked
  9790  0016E0  6FBA               	movwf	(LTC6804_rdcv@reg+1)& (0+255),b
  9791  0016E2  0E02               	movlw	2
  9792  0016E4  6FB9               	movwf	LTC6804_rdcv@reg& (0+255),b
  9793  0016E6  0E00               	movlw	0
  9794  0016E8  0100               	movlb	0	; () banked
  9795  0016EA  6FBC               	movwf	(LTC6804_rdcv@total_ic+1)& (0+255),b
  9796  0016EC  0E01               	movlw	1
  9797  0016EE  6FBB               	movwf	LTC6804_rdcv@total_ic& (0+255),b
  9798  0016F0  C0F3  F0BD         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  9799  0016F4  C0F4  F0BE         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  9800  0016F8  ECC9  F005         	call	_LTC6804_rdcv	;wreg free
  9801  0016FC  C0B9  F0F7         	movff	?_LTC6804_rdcv,Read_Battery@Read_Status
  9802  001700  C0BA  F0F8         	movff	?_LTC6804_rdcv+1,Read_Battery@Read_Status+1
  9803                           
  9804                           ;BatteryManagment.c: 449: Read_Status = LTC6804_rdcv(4, 1, cell_codes);
  9805  001704  0E00               	movlw	0
  9806  001706  0100               	movlb	0	; () banked
  9807  001708  6FBA               	movwf	(LTC6804_rdcv@reg+1)& (0+255),b
  9808  00170A  0E04               	movlw	4
  9809  00170C  6FB9               	movwf	LTC6804_rdcv@reg& (0+255),b
  9810  00170E  0E00               	movlw	0
  9811  001710  0100               	movlb	0	; () banked
  9812  001712  6FBC               	movwf	(LTC6804_rdcv@total_ic+1)& (0+255),b
  9813  001714  0E01               	movlw	1
  9814  001716  6FBB               	movwf	LTC6804_rdcv@total_ic& (0+255),b
  9815  001718  C0F3  F0BD         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  9816  00171C  C0F4  F0BE         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  9817  001720  ECC9  F005         	call	_LTC6804_rdcv	;wreg free
  9818  001724  D07D               	goto	L13
  9819  001726                     l8075:
  9820                           
  9821                           ;BatteryManagment.c: 452: set_adc(2, 0, 5, 0);
  9822  001726  0E00               	movlw	0
  9823  001728  6E10               	movwf	set_adc@MD+1,c
  9824  00172A  0E02               	movlw	2
  9825  00172C  6E0F               	movwf	set_adc@MD,c
  9826  00172E  0E00               	movlw	0
  9827  001730  6E12               	movwf	set_adc@DCP+1,c
  9828  001732  0E00               	movlw	0
  9829  001734  6E11               	movwf	set_adc@DCP,c
  9830  001736  0E00               	movlw	0
  9831  001738  6E14               	movwf	set_adc@CH+1,c
  9832  00173A  0E05               	movlw	5
  9833  00173C  6E13               	movwf	set_adc@CH,c
  9834  00173E  0E00               	movlw	0
  9835  001740  6E16               	movwf	set_adc@CHG+1,c
  9836  001742  0E00               	movlw	0
  9837  001744  6E15               	movwf	set_adc@CHG,c
  9838  001746  EC62  F012         	call	_set_adc	;wreg free
  9839                           
  9840                           ;BatteryManagment.c: 453: LTC6804_adcv();
  9841  00174A  EC11  F016         	call	_LTC6804_adcv	;wreg free
  9842                           
  9843                           ;BatteryManagment.c: 454: Delay(10);
  9844  00174E  0E00               	movlw	0
  9845  001750  6E10               	movwf	Delay@wait+1,c
  9846  001752  0E0A               	movlw	10
  9847  001754  6E0F               	movwf	Delay@wait,c
  9848  001756  ECF4  F017         	call	_Delay	;wreg free
  9849                           
  9850                           ;BatteryManagment.c: 455: Read_Status = LTC6804_rdcv(2, 1, cell_codes);
  9851  00175A  0E00               	movlw	0
  9852  00175C  0100               	movlb	0	; () banked
  9853  00175E  6FBA               	movwf	(LTC6804_rdcv@reg+1)& (0+255),b
  9854  001760  0E02               	movlw	2
  9855  001762  6FB9               	movwf	LTC6804_rdcv@reg& (0+255),b
  9856  001764  0E00               	movlw	0
  9857  001766  0100               	movlb	0	; () banked
  9858  001768  6FBC               	movwf	(LTC6804_rdcv@total_ic+1)& (0+255),b
  9859  00176A  0E01               	movlw	1
  9860  00176C  6FBB               	movwf	LTC6804_rdcv@total_ic& (0+255),b
  9861  00176E  C0F3  F0BD         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  9862  001772  C0F4  F0BE         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  9863  001776  ECC9  F005         	call	_LTC6804_rdcv	;wreg free
  9864  00177A  C0B9  F0F7         	movff	?_LTC6804_rdcv,Read_Battery@Read_Status
  9865  00177E  C0BA  F0F8         	movff	?_LTC6804_rdcv+1,Read_Battery@Read_Status+1
  9866                           
  9867                           ;BatteryManagment.c: 456: Read_Status = LTC6804_rdcv(4, 1, cell_codes);
  9868  001782  0E00               	movlw	0
  9869  001784  0100               	movlb	0	; () banked
  9870  001786  6FBA               	movwf	(LTC6804_rdcv@reg+1)& (0+255),b
  9871  001788  0E04               	movlw	4
  9872  00178A  6FB9               	movwf	LTC6804_rdcv@reg& (0+255),b
  9873  00178C  0E00               	movlw	0
  9874  00178E  0100               	movlb	0	; () banked
  9875  001790  6FBC               	movwf	(LTC6804_rdcv@total_ic+1)& (0+255),b
  9876  001792  0E01               	movlw	1
  9877  001794  6FBB               	movwf	LTC6804_rdcv@total_ic& (0+255),b
  9878  001796  C0F3  F0BD         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  9879  00179A  C0F4  F0BE         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  9880  00179E  ECC9  F005         	call	_LTC6804_rdcv	;wreg free
  9881  0017A2  D03E               	goto	L13
  9882  0017A4                     l8085:
  9883                           
  9884                           ;BatteryManagment.c: 459: set_adc(2, 0, 6, 0);
  9885  0017A4  0E00               	movlw	0
  9886  0017A6  6E10               	movwf	set_adc@MD+1,c
  9887  0017A8  0E02               	movlw	2
  9888  0017AA  6E0F               	movwf	set_adc@MD,c
  9889  0017AC  0E00               	movlw	0
  9890  0017AE  6E12               	movwf	set_adc@DCP+1,c
  9891  0017B0  0E00               	movlw	0
  9892  0017B2  6E11               	movwf	set_adc@DCP,c
  9893  0017B4  0E00               	movlw	0
  9894  0017B6  6E14               	movwf	set_adc@CH+1,c
  9895  0017B8  0E06               	movlw	6
  9896  0017BA  6E13               	movwf	set_adc@CH,c
  9897  0017BC  0E00               	movlw	0
  9898  0017BE  6E16               	movwf	set_adc@CHG+1,c
  9899  0017C0  0E00               	movlw	0
  9900  0017C2  6E15               	movwf	set_adc@CHG,c
  9901  0017C4  EC62  F012         	call	_set_adc	;wreg free
  9902                           
  9903                           ;BatteryManagment.c: 460: LTC6804_adcv();
  9904  0017C8  EC11  F016         	call	_LTC6804_adcv	;wreg free
  9905                           
  9906                           ;BatteryManagment.c: 461: Delay(10);
  9907  0017CC  0E00               	movlw	0
  9908  0017CE  6E10               	movwf	Delay@wait+1,c
  9909  0017D0  0E0A               	movlw	10
  9910  0017D2  6E0F               	movwf	Delay@wait,c
  9911  0017D4  ECF4  F017         	call	_Delay	;wreg free
  9912                           
  9913                           ;BatteryManagment.c: 462: Read_Status = LTC6804_rdcv(2, 1, cell_codes);
  9914  0017D8  0E00               	movlw	0
  9915  0017DA  0100               	movlb	0	; () banked
  9916  0017DC  6FBA               	movwf	(LTC6804_rdcv@reg+1)& (0+255),b
  9917  0017DE  0E02               	movlw	2
  9918  0017E0  6FB9               	movwf	LTC6804_rdcv@reg& (0+255),b
  9919  0017E2  0E00               	movlw	0
  9920  0017E4  0100               	movlb	0	; () banked
  9921  0017E6  6FBC               	movwf	(LTC6804_rdcv@total_ic+1)& (0+255),b
  9922  0017E8  0E01               	movlw	1
  9923  0017EA  6FBB               	movwf	LTC6804_rdcv@total_ic& (0+255),b
  9924  0017EC  C0F3  F0BD         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  9925  0017F0  C0F4  F0BE         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  9926  0017F4  ECC9  F005         	call	_LTC6804_rdcv	;wreg free
  9927  0017F8  C0B9  F0F7         	movff	?_LTC6804_rdcv,Read_Battery@Read_Status
  9928  0017FC  C0BA  F0F8         	movff	?_LTC6804_rdcv+1,Read_Battery@Read_Status+1
  9929                           
  9930                           ;BatteryManagment.c: 463: Read_Status = LTC6804_rdcv(4, 1, cell_codes);
  9931  001800  0E00               	movlw	0
  9932  001802  0100               	movlb	0	; () banked
  9933  001804  6FBA               	movwf	(LTC6804_rdcv@reg+1)& (0+255),b
  9934  001806  0E04               	movlw	4
  9935  001808  6FB9               	movwf	LTC6804_rdcv@reg& (0+255),b
  9936  00180A  0E00               	movlw	0
  9937  00180C  0100               	movlb	0	; () banked
  9938  00180E  6FBC               	movwf	(LTC6804_rdcv@total_ic+1)& (0+255),b
  9939  001810  0E01               	movlw	1
  9940  001812  6FBB               	movwf	LTC6804_rdcv@total_ic& (0+255),b
  9941  001814  C0F3  F0BD         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  9942  001818  C0F4  F0BE         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  9943  00181C  ECC9  F005         	call	_LTC6804_rdcv	;wreg free
  9944  001820                     L13:
  9945  001820  C0B9  F0F7         	movff	?_LTC6804_rdcv,Read_Battery@Read_Status
  9946  001824  C0BA  F0F8         	movff	?_LTC6804_rdcv+1,Read_Battery@Read_Status+1
  9947                           
  9948                           ;BatteryManagment.c: 467: }
  9949                           
  9950                           ;BatteryManagment.c: 466: break;
  9951                           
  9952                           ;BatteryManagment.c: 465: default:
  9953                           
  9954                           ;BatteryManagment.c: 464: break;
  9955  001828  D020               	goto	l665
  9956  00182A                     l8097:
  9957  00182A  C0F1  F0F5         	movff	Read_Battery@BatteryPlacement,??_Read_Battery
  9958  00182E  C0F2  F0F6         	movff	Read_Battery@BatteryPlacement+1,??_Read_Battery+1
  9959                           
  9960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9961                           ; Switch size 1, requested type "space"
  9962                           ; Number of cases is 1, Range of values is 0 to 0
  9963                           ; switch strategies available:
  9964                           ; Name         Instructions Cycles
  9965                           ; simple_byte            4     3 (average)
  9966                           ;	Chosen strategy is simple_byte
  9967  001832  0100               	movlb	0	; () banked
  9968  001834  51F6               	movf	(??_Read_Battery+1)& (0+255),w,b
  9969  001836  0A00               	xorlw	0	; case 0
  9970  001838  A4D8               	btfss	status,2,c
  9971  00183A  D017               	goto	l665
  9972                           
  9973                           ; BSR set to: 0
  9974                           ; Switch size 1, requested type "space"
  9975                           ; Number of cases is 7, Range of values is 0 to 6
  9976                           ; switch strategies available:
  9977                           ; Name         Instructions Cycles
  9978                           ; simple_byte           22    12 (average)
  9979                           ;	Chosen strategy is simple_byte
  9980  00183C  0100               	movlb	0	; () banked
  9981  00183E  51F5               	movf	??_Read_Battery& (0+255),w,b
  9982  001840  0A00               	xorlw	0	; case 0
  9983  001842  B4D8               	btfsc	status,2,c
  9984  001844  D64F               	goto	l8029
  9985  001846  0A01               	xorlw	1	; case 1
  9986  001848  B4D8               	btfsc	status,2,c
  9987  00184A  D677               	goto	l8037
  9988  00184C  0A03               	xorlw	3	; case 2
  9989  00184E  B4D8               	btfsc	status,2,c
  9990  001850  D6B3               	goto	l8047
  9991  001852  0A01               	xorlw	1	; case 3
  9992  001854  B4D8               	btfsc	status,2,c
  9993  001856  D6EF               	goto	l8057
  9994  001858  0A07               	xorlw	7	; case 4
  9995  00185A  B4D8               	btfsc	status,2,c
  9996  00185C  D72B               	goto	l8067
  9997  00185E  0A01               	xorlw	1	; case 5
  9998  001860  B4D8               	btfsc	status,2,c
  9999  001862  D761               	goto	l8075
 10000  001864  0A03               	xorlw	3	; case 6
 10001  001866  B4D8               	btfsc	status,2,c
 10002  001868  D79D               	goto	l8085
 10003  00186A                     l665:
 10004                           
 10005                           ;BatteryManagment.c: 468: return Read_Status;
 10006  00186A  C0F7  F0F1         	movff	Read_Battery@Read_Status,?_Read_Battery
 10007  00186E  C0F8  F0F2         	movff	Read_Battery@Read_Status+1,?_Read_Battery+1
 10008  001872  0012               	return		;funcret
 10009  001874                     __end_of_Read_Battery:
 10010                           	opt stack 0
 10011                           tblptru	equ	0xFF8
 10012                           tblptrh	equ	0xFF7
 10013                           tblptrl	equ	0xFF6
 10014                           tablat	equ	0xFF5
 10015                           prodh	equ	0xFF4
 10016                           prodl	equ	0xFF3
 10017                           intcon	equ	0xFF2
 10018                           intcon2	equ	0xFF1
 10019                           postinc0	equ	0xFEE
 10020                           wreg	equ	0xFE8
 10021                           postinc1	equ	0xFE6
 10022                           postdec1	equ	0xFE5
 10023                           fsr1h	equ	0xFE2
 10024                           fsr1l	equ	0xFE1
 10025                           indf2	equ	0xFDF
 10026                           postinc2	equ	0xFDE
 10027                           postdec2	equ	0xFDD
 10028                           fsr2h	equ	0xFDA
 10029                           fsr2l	equ	0xFD9
 10030                           status	equ	0xFD8
 10031                           
 10032 ;; *************** function _set_adc *****************
 10033 ;; Defined at:
 10034 ;;		line 116 in file "LT6804.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;  MD              2   14[COMRAM] int 
 10037 ;;  DCP             2   16[COMRAM] int 
 10038 ;;  CH              2   18[COMRAM] int 
 10039 ;;  CHG             2   20[COMRAM] int 
 10040 ;; Auto vars:     Size  Location     Type
 10041 ;;  md_bits         2   24[COMRAM] int 
 10042 ;; Return value:  Size  Location     Type
 10043 ;;		None               void
 10044 ;; Registers used:
 10045 ;;		wreg, status,2, status,0
 10046 ;; Tracked objects:
 10047 ;;		On entry : 0/0
 10048 ;;		On exit  : 0/0
 10049 ;;		Unchanged: 0/0
 10050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10051 ;;      Params:         8       0       0       0       0       0       0
 10052 ;;      Locals:         2       0       0       0       0       0       0
 10053 ;;      Temps:          2       0       0       0       0       0       0
 10054 ;;      Totals:        12       0       0       0       0       0       0
 10055 ;;Total ram usage:       12 bytes
 10056 ;; Hardware stack levels used:    1
 10057 ;; Hardware stack levels required when called:    3
 10058 ;; This function calls:
 10059 ;;		Nothing
 10060 ;; This function is called by:
 10061 ;;		_Read_Battery
 10062 ;;		_Read_GPIO
 10063 ;;		_LTC6804_initialize
 10064 ;; This function uses a non-reentrant model
 10065 ;;
 10066                           
 10067                           	psect	text42
 10068  0024C4                     __ptext42:
 10069                           	opt stack 0
 10070  0024C4                     _set_adc:
 10071                           	opt stack 25
 10072                           
 10073                           ;LT6804.c: 122: int md_bits;
 10074                           ;LT6804.c: 124: md_bits = (MD & 0x02) >> 1;
 10075                           
 10076                           ;incstack = 0
 10077  0024C4  3410               	rlcf	set_adc@MD+1,w,c
 10078  0024C6  3010               	rrcf	set_adc@MD+1,w,c
 10079  0024C8  6E18               	movwf	(??_set_adc+1)& (0+255),c
 10080  0024CA  300F               	rrcf	set_adc@MD,w,c
 10081  0024CC  6E17               	movwf	??_set_adc& (0+255),c
 10082  0024CE  0E01               	movlw	1
 10083  0024D0  1417               	andwf	??_set_adc,w,c
 10084  0024D2  6E19               	movwf	set_adc@md_bits,c
 10085  0024D4  6A1A               	clrf	set_adc@md_bits+1,c
 10086                           
 10087                           ;LT6804.c: 125: ADCV[0] = md_bits + 0x02;
 10088  0024D6  0E02               	movlw	2
 10089  0024D8  2419               	addwf	set_adc@md_bits,w,c
 10090  0024DA  0100               	movlb	0	; () banked
 10091  0024DC  6FB1               	movwf	_ADCV& (0+255),b
 10092  0024DE  0E00               	movlw	0
 10093  0024E0  201A               	addwfc	set_adc@md_bits+1,w,c
 10094  0024E2  0100               	movlb	0	; () banked
 10095  0024E4  6FB2               	movwf	(_ADCV+1)& (0+255),b
 10096                           
 10097                           ;LT6804.c: 126: md_bits = (MD & 0x01) << 7;
 10098  0024E6  0E01               	movlw	1
 10099  0024E8  140F               	andwf	set_adc@MD,w,c
 10100  0024EA  6E17               	movwf	??_set_adc& (0+255),c
 10101  0024EC  0E00               	movlw	0
 10102  0024EE  1410               	andwf	set_adc@MD+1,w,c
 10103  0024F0  6E18               	movwf	(??_set_adc+1)& (0+255),c
 10104  0024F2  0E07               	movlw	7
 10105  0024F4                     u7385:
 10106  0024F4  90D8               	bcf	status,0,c
 10107  0024F6  3617               	rlcf	??_set_adc,f,c
 10108  0024F8  3618               	rlcf	??_set_adc+1,f,c
 10109  0024FA  2EE8               	decfsz	wreg,f,c
 10110  0024FC  D7FB               	goto	u7385
 10111  0024FE  C017  F019         	movff	??_set_adc,set_adc@md_bits
 10112  002502  C018  F01A         	movff	??_set_adc+1,set_adc@md_bits+1
 10113                           
 10114                           ;LT6804.c: 127: ADCV[1] = md_bits + 0x60 + (DCP<<4) + CH;
 10115  002506  C011  F017         	movff	set_adc@DCP,??_set_adc
 10116  00250A  C012  F018         	movff	set_adc@DCP+1,??_set_adc+1
 10117  00250E  3A17               	swapf	??_set_adc,f,c
 10118  002510  3A18               	swapf	??_set_adc+1,f,c
 10119  002512  0EF0               	movlw	240
 10120  002514  1618               	andwf	??_set_adc+1,f,c
 10121  002516  5017               	movf	??_set_adc,w,c
 10122  002518  0B0F               	andlw	15
 10123  00251A  1218               	iorwf	??_set_adc+1,f,c
 10124  00251C  0EF0               	movlw	240
 10125  00251E  1617               	andwf	??_set_adc,f,c
 10126  002520  5019               	movf	set_adc@md_bits,w,c
 10127  002522  2617               	addwf	??_set_adc,f,c
 10128  002524  501A               	movf	set_adc@md_bits+1,w,c
 10129  002526  2218               	addwfc	??_set_adc+1,f,c
 10130  002528  5013               	movf	set_adc@CH,w,c
 10131  00252A  2617               	addwf	??_set_adc,f,c
 10132  00252C  5014               	movf	set_adc@CH+1,w,c
 10133  00252E  2218               	addwfc	??_set_adc+1,f,c
 10134  002530  0E60               	movlw	96
 10135  002532  2417               	addwf	??_set_adc,w,c
 10136  002534  0100               	movlb	0	; () banked
 10137  002536  6FB3               	movwf	(_ADCV+2)& (0+255),b
 10138  002538  0E00               	movlw	0
 10139  00253A  2018               	addwfc	??_set_adc+1,w,c
 10140  00253C  0100               	movlb	0	; () banked
 10141  00253E  6FB4               	movwf	(_ADCV+3)& (0+255),b
 10142                           
 10143                           ;LT6804.c: 129: md_bits = (MD & 0x02) >> 1;
 10144  002540  3410               	rlcf	set_adc@MD+1,w,c
 10145  002542  3010               	rrcf	set_adc@MD+1,w,c
 10146  002544  6E18               	movwf	(??_set_adc+1)& (0+255),c
 10147  002546  300F               	rrcf	set_adc@MD,w,c
 10148  002548  6E17               	movwf	??_set_adc& (0+255),c
 10149  00254A  0E01               	movlw	1
 10150  00254C  1417               	andwf	??_set_adc,w,c
 10151  00254E  6E19               	movwf	set_adc@md_bits,c
 10152  002550  6A1A               	clrf	set_adc@md_bits+1,c
 10153                           
 10154                           ;LT6804.c: 130: ADAX[0] = md_bits + 0x04;
 10155  002552  0E04               	movlw	4
 10156  002554  2419               	addwf	set_adc@md_bits,w,c
 10157  002556  0100               	movlb	0	; () banked
 10158  002558  6FAD               	movwf	_ADAX& (0+255),b
 10159  00255A  0E00               	movlw	0
 10160  00255C  201A               	addwfc	set_adc@md_bits+1,w,c
 10161  00255E  0100               	movlb	0	; () banked
 10162  002560  6FAE               	movwf	(_ADAX+1)& (0+255),b
 10163                           
 10164                           ;LT6804.c: 131: md_bits = (MD & 0x01) << 7;
 10165  002562  0E01               	movlw	1
 10166  002564  140F               	andwf	set_adc@MD,w,c
 10167  002566  6E17               	movwf	??_set_adc& (0+255),c
 10168  002568  0E00               	movlw	0
 10169  00256A  1410               	andwf	set_adc@MD+1,w,c
 10170  00256C  6E18               	movwf	(??_set_adc+1)& (0+255),c
 10171  00256E  0E07               	movlw	7
 10172  002570                     u7395:
 10173  002570  90D8               	bcf	status,0,c
 10174  002572  3617               	rlcf	??_set_adc,f,c
 10175  002574  3618               	rlcf	??_set_adc+1,f,c
 10176  002576  2EE8               	decfsz	wreg,f,c
 10177  002578  D7FB               	goto	u7395
 10178  00257A  C017  F019         	movff	??_set_adc,set_adc@md_bits
 10179  00257E  C018  F01A         	movff	??_set_adc+1,set_adc@md_bits+1
 10180                           
 10181                           ;LT6804.c: 132: ADAX[1] = md_bits + 0x60 + CHG ;
 10182  002582  5015               	movf	set_adc@CHG,w,c
 10183  002584  2419               	addwf	set_adc@md_bits,w,c
 10184  002586  6E17               	movwf	??_set_adc& (0+255),c
 10185  002588  5016               	movf	set_adc@CHG+1,w,c
 10186  00258A  201A               	addwfc	set_adc@md_bits+1,w,c
 10187  00258C  6E18               	movwf	(??_set_adc+1)& (0+255),c
 10188  00258E  0E60               	movlw	96
 10189  002590  2417               	addwf	??_set_adc,w,c
 10190  002592  0100               	movlb	0	; () banked
 10191  002594  6FAF               	movwf	(_ADAX+2)& (0+255),b
 10192  002596  0E00               	movlw	0
 10193  002598  2018               	addwfc	??_set_adc+1,w,c
 10194  00259A  0100               	movlb	0	; () banked
 10195  00259C  6FB0               	movwf	(_ADAX+3)& (0+255),b
 10196                           
 10197                           ; BSR set to: 0
 10198  00259E  0012               	return		;funcret
 10199  0025A0                     __end_of_set_adc:
 10200                           	opt stack 0
 10201                           tblptru	equ	0xFF8
 10202                           tblptrh	equ	0xFF7
 10203                           tblptrl	equ	0xFF6
 10204                           tablat	equ	0xFF5
 10205                           prodh	equ	0xFF4
 10206                           prodl	equ	0xFF3
 10207                           intcon	equ	0xFF2
 10208                           intcon2	equ	0xFF1
 10209                           postinc0	equ	0xFEE
 10210                           wreg	equ	0xFE8
 10211                           postinc1	equ	0xFE6
 10212                           postdec1	equ	0xFE5
 10213                           fsr1h	equ	0xFE2
 10214                           fsr1l	equ	0xFE1
 10215                           indf2	equ	0xFDF
 10216                           postinc2	equ	0xFDE
 10217                           postdec2	equ	0xFDD
 10218                           fsr2h	equ	0xFDA
 10219                           fsr2l	equ	0xFD9
 10220                           status	equ	0xFD8
 10221                           
 10222 ;; *************** function _LTC6804_rdcv *****************
 10223 ;; Defined at:
 10224 ;;		line 339 in file "LT6804.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;  reg             2    0[BANK0 ] int 
 10227 ;;  total_ic        2    2[BANK0 ] int 
 10228 ;;  cell_codes      2    4[BANK0 ] PTR int [12]
 10229 ;;		 -> cell_codes_Bank(24), 
 10230 ;; Auto vars:     Size  Location     Type
 10231 ;;  cell_data      20   16[BANK0 ] int [10]
 10232 ;;  data_counter    2   54[BANK0 ] int 
 10233 ;;  current_cell    2   52[BANK0 ] int 
 10234 ;;  CELL_IN_REG     2   50[BANK0 ] const int 
 10235 ;;  cell_reg        2   48[BANK0 ] int 
 10236 ;;  data_pec        2   46[BANK0 ] int 
 10237 ;;  received_pec    2   44[BANK0 ] int 
 10238 ;;  parsed_cell     2   42[BANK0 ] int 
 10239 ;;  BYT_IN_REG      2   40[BANK0 ] const int 
 10240 ;;  NUM_RX_BYT      2   38[BANK0 ] const int 
 10241 ;;  pec_error       2   36[BANK0 ] int 
 10242 ;;  hi              2   12[BANK0 ] int 
 10243 ;; Return value:  Size  Location     Type
 10244 ;;                  2    0[BANK0 ] int 
 10245 ;; Registers used:
 10246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10247 ;; Tracked objects:
 10248 ;;		On entry : 0/0
 10249 ;;		On exit  : 0/0
 10250 ;;		Unchanged: 0/0
 10251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10252 ;;      Params:         0       6       0       0       0       0       0
 10253 ;;      Locals:         0      44       0       0       0       0       0
 10254 ;;      Temps:          0       6       0       0       0       0       0
 10255 ;;      Totals:         0      56       0       0       0       0       0
 10256 ;;Total ram usage:       56 bytes
 10257 ;; Hardware stack levels used:    1
 10258 ;; Hardware stack levels required when called:    6
 10259 ;; This function calls:
 10260 ;;		_LTC6804_rdcv_reg
 10261 ;;		_SPI2_Exchange8bit
 10262 ;;		___wmul
 10263 ;;		_pec15_calc
 10264 ;; This function is called by:
 10265 ;;		_Read_Battery
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269                           	psect	text43
 10270  000B92                     __ptext43:
 10271                           	opt stack 0
 10272  000B92                     _LTC6804_rdcv:
 10273                           	opt stack 22
 10274                           
 10275                           ;LT6804.c: 344: int hi=cell_codes[0][0];
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;incstack = 0
 10279  000B92  C0BD  FFD9         	movff	LTC6804_rdcv@cell_codes,fsr2l
 10280  000B96  C0BE  FFDA         	movff	LTC6804_rdcv@cell_codes+1,fsr2h
 10281  000B9A  CFDE F0C5          	movff	postinc2,LTC6804_rdcv@hi
 10282  000B9E  CFDD F0C6          	movff	postdec2,LTC6804_rdcv@hi+1
 10283                           
 10284                           ;LT6804.c: 345: int cell_reg = 0;
 10285  000BA2  0E00               	movlw	0
 10286  000BA4  0100               	movlb	0	; () banked
 10287  000BA6  6FEA               	movwf	(LTC6804_rdcv@cell_reg+1)& (0+255),b
 10288  000BA8  0E00               	movlw	0
 10289  000BAA  6FE9               	movwf	LTC6804_rdcv@cell_reg& (0+255),b
 10290                           
 10291                           ; BSR set to: 0
 10292                           ;LT6804.c: 346: int current_cell = 0;
 10293  000BAC  0E00               	movlw	0
 10294  000BAE  0100               	movlb	0	; () banked
 10295  000BB0  6FEE               	movwf	(LTC6804_rdcv@current_cell+1)& (0+255),b
 10296  000BB2  0E00               	movlw	0
 10297  000BB4  6FED               	movwf	LTC6804_rdcv@current_cell& (0+255),b
 10298                           
 10299                           ; BSR set to: 0
 10300                           ;LT6804.c: 347: const int NUM_RX_BYT = 8;
 10301  000BB6  0E00               	movlw	0
 10302  000BB8  0100               	movlb	0	; () banked
 10303  000BBA  6FE0               	movwf	(LTC6804_rdcv@NUM_RX_BYT+1)& (0+255),b
 10304  000BBC  0E08               	movlw	8
 10305  000BBE  6FDF               	movwf	LTC6804_rdcv@NUM_RX_BYT& (0+255),b
 10306                           
 10307                           ; BSR set to: 0
 10308                           ;LT6804.c: 348: const int BYT_IN_REG = 6;
 10309  000BC0  0E00               	movlw	0
 10310  000BC2  0100               	movlb	0	; () banked
 10311  000BC4  6FE2               	movwf	(LTC6804_rdcv@BYT_IN_REG+1)& (0+255),b
 10312  000BC6  0E06               	movlw	6
 10313  000BC8  6FE1               	movwf	LTC6804_rdcv@BYT_IN_REG& (0+255),b
 10314                           
 10315                           ; BSR set to: 0
 10316                           ;LT6804.c: 349: const int CELL_IN_REG = 3;
 10317  000BCA  0E00               	movlw	0
 10318  000BCC  0100               	movlb	0	; () banked
 10319  000BCE  6FEC               	movwf	(LTC6804_rdcv@CELL_IN_REG+1)& (0+255),b
 10320  000BD0  0E03               	movlw	3
 10321  000BD2  6FEB               	movwf	LTC6804_rdcv@CELL_IN_REG& (0+255),b
 10322                           
 10323                           ; BSR set to: 0
 10324                           ;LT6804.c: 351: int cell_data[10];
 10325                           ;LT6804.c: 352: int pec_error = 0;
 10326  000BD4  0E00               	movlw	0
 10327  000BD6  0100               	movlb	0	; () banked
 10328  000BD8  6FDE               	movwf	(LTC6804_rdcv@pec_error+1)& (0+255),b
 10329  000BDA  0E00               	movlw	0
 10330  000BDC  6FDD               	movwf	LTC6804_rdcv@pec_error& (0+255),b
 10331                           
 10332                           ; BSR set to: 0
 10333                           ;LT6804.c: 353: int parsed_cell;
 10334                           ;LT6804.c: 354: int received_pec;
 10335                           ;LT6804.c: 355: int data_pec;
 10336                           ;LT6804.c: 356: int data_counter=0;
 10337  000BDE  0E00               	movlw	0
 10338  000BE0  0100               	movlb	0	; () banked
 10339  000BE2  6FF0               	movwf	(LTC6804_rdcv@data_counter+1)& (0+255),b
 10340  000BE4  0E00               	movlw	0
 10341  000BE6  6FEF               	movwf	LTC6804_rdcv@data_counter& (0+255),b
 10342                           
 10343                           ; BSR set to: 0
 10344                           ;LT6804.c: 358: if (reg == 0)
 10345  000BE8  0100               	movlb	0	; () banked
 10346  000BEA  51B9               	movf	LTC6804_rdcv@reg& (0+255),w,b
 10347  000BEC  0100               	movlb	0	; () banked
 10348  000BEE  11BA               	iorwf	(LTC6804_rdcv@reg+1)& (0+255),w,b
 10349  000BF0  A4D8               	btfss	status,2,c
 10350  000BF2  D14A               	goto	l7405
 10351                           
 10352                           ; BSR set to: 0
 10353                           ;LT6804.c: 359: {LATD3 = 0;
 10354  000BF4  968C               	bcf	3980,3,c	;volatile
 10355                           
 10356                           ; BSR set to: 0
 10357                           ;LT6804.c: 360: SPI2_Exchange8bit(0);
 10358  000BF6  0E00               	movlw	0
 10359  000BF8  ECAE  F018         	call	_SPI2_Exchange8bit
 10360                           
 10361                           ;LT6804.c: 361: LATD3 = 1;
 10362  000BFC  868C               	bsf	3980,3,c	;volatile
 10363                           
 10364                           ;LT6804.c: 363: for(cell_reg = 1; cell_reg<5; cell_reg++)
 10365  000BFE  0E00               	movlw	0
 10366  000C00  0100               	movlb	0	; () banked
 10367  000C02  6FEA               	movwf	(LTC6804_rdcv@cell_reg+1)& (0+255),b
 10368  000C04  0E01               	movlw	1
 10369  000C06  6FE9               	movwf	LTC6804_rdcv@cell_reg& (0+255),b
 10370                           
 10371                           ; BSR set to: 0
 10372  000C08  0100               	movlb	0	; () banked
 10373  000C0A  BFEA               	btfsc	(LTC6804_rdcv@cell_reg+1)& (0+255),7,b
 10374  000C0C  D00A               	goto	l7367
 10375  000C0E  0100               	movlb	0	; () banked
 10376  000C10  51EA               	movf	(LTC6804_rdcv@cell_reg+1)& (0+255),w,b
 10377  000C12  E106               	bnz	u7410
 10378  000C14  0E05               	movlw	5
 10379  000C16  0100               	movlb	0	; () banked
 10380  000C18  5DE9               	subwf	LTC6804_rdcv@cell_reg& (0+255),w,b
 10381  000C1A  B0D8               	btfsc	status,0,c
 10382  000C1C  D260               	goto	l835
 10383  000C1E  D001               	goto	l7367
 10384  000C20                     u7410:
 10385                           
 10386                           ; BSR set to: 0
 10387  000C20  D25E               	goto	l835
 10388  000C22                     l7367:
 10389                           
 10390                           ; BSR set to: 0
 10391                           ;LT6804.c: 364: {
 10392                           ;LT6804.c: 365: data_counter = 0;
 10393  000C22  0E00               	movlw	0
 10394  000C24  0100               	movlb	0	; () banked
 10395  000C26  6FF0               	movwf	(LTC6804_rdcv@data_counter+1)& (0+255),b
 10396  000C28  0E00               	movlw	0
 10397  000C2A  6FEF               	movwf	LTC6804_rdcv@data_counter& (0+255),b
 10398                           
 10399                           ; BSR set to: 0
 10400                           ;LT6804.c: 366: LTC6804_rdcv_reg(cell_reg, total_ic,cell_data);
 10401  000C2C  C0E9  F030         	movff	LTC6804_rdcv@cell_reg,LTC6804_rdcv_reg@reg
 10402  000C30  C0EA  F031         	movff	LTC6804_rdcv@cell_reg+1,LTC6804_rdcv_reg@reg+1
 10403  000C34  C0BB  F032         	movff	LTC6804_rdcv@total_ic,LTC6804_rdcv_reg@total_ic
 10404  000C38  C0BC  F033         	movff	LTC6804_rdcv@total_ic+1,LTC6804_rdcv_reg@total_ic+1
 10405  000C3C  0EC9               	movlw	low LTC6804_rdcv@cell_data
 10406  000C3E  6E34               	movwf	LTC6804_rdcv_reg@data,c
 10407  000C40  0E00               	movlw	high LTC6804_rdcv@cell_data
 10408  000C42  6E35               	movwf	LTC6804_rdcv_reg@data+1,c
 10409  000C44  ECCA  F010         	call	_LTC6804_rdcv_reg	;wreg free
 10410                           
 10411                           ;LT6804.c: 367: for (current_ic = 0 ; current_ic < total_ic; current_ic++)
 10412  000C48  0E00               	movlw	0
 10413  000C4A  6E4E               	movwf	_current_ic+1,c
 10414  000C4C  0E00               	movlw	0
 10415  000C4E  6E4D               	movwf	_current_ic,c
 10416  000C50  D102               	goto	l829
 10417  000C52                     l7373:
 10418                           
 10419                           ;LT6804.c: 368: {
 10420                           ;LT6804.c: 370: for(current_cell = 0; current_cell<CELL_IN_REG; current_cell++)
 10421  000C52  0E00               	movlw	0
 10422  000C54  0100               	movlb	0	; () banked
 10423  000C56  6FEE               	movwf	(LTC6804_rdcv@current_cell+1)& (0+255),b
 10424  000C58  0E00               	movlw	0
 10425  000C5A  6FED               	movwf	LTC6804_rdcv@current_cell& (0+255),b
 10426  000C5C                     l7375:
 10427                           
 10428                           ; BSR set to: 0
 10429  000C5C  0100               	movlb	0	; () banked
 10430  000C5E  51EB               	movf	LTC6804_rdcv@CELL_IN_REG& (0+255),w,b
 10431  000C60  0100               	movlb	0	; () banked
 10432  000C62  5DED               	subwf	LTC6804_rdcv@current_cell& (0+255),w,b
 10433  000C64  0100               	movlb	0	; () banked
 10434  000C66  51EE               	movf	(LTC6804_rdcv@current_cell+1)& (0+255),w,b
 10435  000C68  0A80               	xorlw	128
 10436  000C6A  0100               	movlb	0	; () banked
 10437  000C6C  6FBF               	movwf	??_LTC6804_rdcv& (0+255),b
 10438  000C6E  0100               	movlb	0	; () banked
 10439  000C70  51EC               	movf	(LTC6804_rdcv@CELL_IN_REG+1)& (0+255),w,b
 10440  000C72  0A80               	xorlw	128
 10441  000C74  0100               	movlb	0	; () banked
 10442  000C76  59BF               	subwfb	??_LTC6804_rdcv& (0+255),w,b
 10443  000C78  B0D8               	btfsc	status,0,c
 10444  000C7A  D07D               	goto	l7389
 10445                           
 10446                           ; BSR set to: 0
 10447                           ;LT6804.c: 371: {
 10448                           ;LT6804.c: 372: parsed_cell = cell_data[data_counter] + (cell_data[data_counter + 1] << 
      +                          8);
 10449                           
 10450                           ; BSR set to: 0
 10451                           
 10452                           ; BSR set to: 0
 10453  000C7C  90D8               	bcf	status,0,c
 10454  000C7E  0100               	movlb	0	; () banked
 10455  000C80  35EF               	rlcf	LTC6804_rdcv@data_counter& (0+255),w,b
 10456  000C82  6ED9               	movwf	fsr2l,c
 10457  000C84  0100               	movlb	0	; () banked
 10458  000C86  35F0               	rlcf	(LTC6804_rdcv@data_counter+1)& (0+255),w,b
 10459  000C88  6EDA               	movwf	fsr2h,c
 10460  000C8A  0EC9               	movlw	low LTC6804_rdcv@cell_data
 10461  000C8C  26D9               	addwf	fsr2l,f,c
 10462  000C8E  0E00               	movlw	high LTC6804_rdcv@cell_data
 10463  000C90  22DA               	addwfc	fsr2h,f,c
 10464  000C92  CFDE F0BF          	movff	postinc2,??_LTC6804_rdcv
 10465  000C96  CFDD F0C0          	movff	postdec2,??_LTC6804_rdcv+1
 10466  000C9A  C0EF  F0C1         	movff	LTC6804_rdcv@data_counter,??_LTC6804_rdcv+2
 10467  000C9E  C0F0  F0C2         	movff	LTC6804_rdcv@data_counter+1,??_LTC6804_rdcv+3
 10468  000CA2  90D8               	bcf	status,0,c
 10469  000CA4  0100               	movlb	0	; () banked
 10470  000CA6  37C1               	rlcf	(??_LTC6804_rdcv+2)& (0+255),f,b
 10471  000CA8  37C2               	rlcf	(??_LTC6804_rdcv+3)& (0+255),f,b
 10472  000CAA  0E02               	movlw	2
 10473  000CAC  0100               	movlb	0	; () banked
 10474  000CAE  27C1               	addwf	(??_LTC6804_rdcv+2)& (0+255),f,b
 10475  000CB0  0E00               	movlw	0
 10476  000CB2  23C2               	addwfc	(??_LTC6804_rdcv+3)& (0+255),f,b
 10477  000CB4  0EC9               	movlw	low LTC6804_rdcv@cell_data
 10478  000CB6  0100               	movlb	0	; () banked
 10479  000CB8  25C1               	addwf	(??_LTC6804_rdcv+2)& (0+255),w,b
 10480  000CBA  6ED9               	movwf	fsr2l,c
 10481  000CBC  0E00               	movlw	high LTC6804_rdcv@cell_data
 10482  000CBE  0100               	movlb	0	; () banked
 10483  000CC0  21C2               	addwfc	(??_LTC6804_rdcv+3)& (0+255),w,b
 10484  000CC2  6EDA               	movwf	fsr2h,c
 10485  000CC4  CFDE F0C3          	movff	postinc2,??_LTC6804_rdcv+4
 10486  000CC8  CFDD F0C4          	movff	postdec2,??_LTC6804_rdcv+5
 10487  000CCC  C0C3  F0C4         	movff	??_LTC6804_rdcv+4,??_LTC6804_rdcv+5
 10488  000CD0  0100               	movlb	0	; () banked
 10489  000CD2  6BC3               	clrf	(??_LTC6804_rdcv+4)& (0+255),b
 10490  000CD4  0100               	movlb	0	; () banked
 10491  000CD6  51BF               	movf	??_LTC6804_rdcv& (0+255),w,b
 10492  000CD8  0100               	movlb	0	; () banked
 10493  000CDA  25C3               	addwf	(??_LTC6804_rdcv+4)& (0+255),w,b
 10494  000CDC  0100               	movlb	0	; () banked
 10495  000CDE  6FE3               	movwf	LTC6804_rdcv@parsed_cell& (0+255),b
 10496  000CE0  0100               	movlb	0	; () banked
 10497  000CE2  51C0               	movf	(??_LTC6804_rdcv+1)& (0+255),w,b
 10498  000CE4  0100               	movlb	0	; () banked
 10499  000CE6  21C4               	addwfc	(??_LTC6804_rdcv+5)& (0+255),w,b
 10500  000CE8  0100               	movlb	0	; () banked
 10501  000CEA  6FE4               	movwf	(LTC6804_rdcv@parsed_cell+1)& (0+255),b
 10502                           
 10503                           ; BSR set to: 0
 10504                           ;LT6804.c: 373: cell_codes[current_ic][current_cell + ((cell_reg - 1) * CELL_IN_REG)] = 
      +                          parsed_cell;
 10505  000CEC  C04D  F01D         	movff	_current_ic,___wmul@multiplier
 10506  000CF0  C04E  F01E         	movff	_current_ic+1,___wmul@multiplier+1
 10507  000CF4  0E00               	movlw	0
 10508  000CF6  6E20               	movwf	___wmul@multiplicand+1,c
 10509  000CF8  0E18               	movlw	24
 10510  000CFA  6E1F               	movwf	___wmul@multiplicand,c
 10511  000CFC  EC68  F018         	call	___wmul	;wreg free
 10512  000D00  C0BD  F0BF         	movff	LTC6804_rdcv@cell_codes,??_LTC6804_rdcv
 10513  000D04  C0BE  F0C0         	movff	LTC6804_rdcv@cell_codes+1,??_LTC6804_rdcv+1
 10514  000D08  501D               	movf	?___wmul,w,c
 10515  000D0A  0100               	movlb	0	; () banked
 10516  000D0C  27BF               	addwf	??_LTC6804_rdcv& (0+255),f,b
 10517  000D0E  501E               	movf	?___wmul+1,w,c
 10518  000D10  0100               	movlb	0	; () banked
 10519  000D12  23C0               	addwfc	(??_LTC6804_rdcv+1)& (0+255),f,b
 10520  000D14  0EFF               	movlw	255
 10521  000D16  0100               	movlb	0	; () banked
 10522  000D18  25E9               	addwf	LTC6804_rdcv@cell_reg& (0+255),w,b
 10523  000D1A  6E1D               	movwf	___wmul@multiplier,c
 10524  000D1C  0EFF               	movlw	255
 10525  000D1E  0100               	movlb	0	; () banked
 10526  000D20  21EA               	addwfc	(LTC6804_rdcv@cell_reg+1)& (0+255),w,b
 10527  000D22  6E1E               	movwf	___wmul@multiplier+1,c
 10528  000D24  C0EB  F01F         	movff	LTC6804_rdcv@CELL_IN_REG,___wmul@multiplicand
 10529  000D28  C0EC  F020         	movff	LTC6804_rdcv@CELL_IN_REG+1,___wmul@multiplicand+1
 10530  000D2C  EC68  F018         	call	___wmul	;wreg free
 10531  000D30  0100               	movlb	0	; () banked
 10532  000D32  51ED               	movf	LTC6804_rdcv@current_cell& (0+255),w,b
 10533  000D34  261D               	addwf	?___wmul,f,c
 10534  000D36  0100               	movlb	0	; () banked
 10535  000D38  51EE               	movf	(LTC6804_rdcv@current_cell+1)& (0+255),w,b
 10536  000D3A  221E               	addwfc	?___wmul+1,f,c
 10537  000D3C  90D8               	bcf	status,0,c
 10538  000D3E  361D               	rlcf	?___wmul,f,c
 10539  000D40  361E               	rlcf	?___wmul+1,f,c
 10540  000D42  501D               	movf	?___wmul,w,c
 10541  000D44  0100               	movlb	0	; () banked
 10542  000D46  25BF               	addwf	??_LTC6804_rdcv& (0+255),w,b
 10543  000D48  6ED9               	movwf	fsr2l,c
 10544  000D4A  501E               	movf	?___wmul+1,w,c
 10545  000D4C  0100               	movlb	0	; () banked
 10546  000D4E  21C0               	addwfc	(??_LTC6804_rdcv+1)& (0+255),w,b
 10547  000D50  6EDA               	movwf	fsr2h,c
 10548  000D52  C0E3  FFDE         	movff	LTC6804_rdcv@parsed_cell,postinc2
 10549  000D56  C0E4  FFDD         	movff	LTC6804_rdcv@parsed_cell+1,postdec2
 10550                           
 10551                           ; BSR set to: 0
 10552                           ;LT6804.c: 374: data_counter = data_counter + 2;
 10553  000D5A  0E02               	movlw	2
 10554  000D5C  0100               	movlb	0	; () banked
 10555  000D5E  25EF               	addwf	LTC6804_rdcv@data_counter& (0+255),w,b
 10556  000D60  0100               	movlb	0	; () banked
 10557  000D62  6FEF               	movwf	LTC6804_rdcv@data_counter& (0+255),b
 10558  000D64  0E00               	movlw	0
 10559  000D66  0100               	movlb	0	; () banked
 10560  000D68  21F0               	addwfc	(LTC6804_rdcv@data_counter+1)& (0+255),w,b
 10561  000D6A  0100               	movlb	0	; () banked
 10562  000D6C  6FF0               	movwf	(LTC6804_rdcv@data_counter+1)& (0+255),b
 10563                           
 10564                           ; BSR set to: 0
 10565  000D6E  0100               	movlb	0	; () banked
 10566  000D70  4BED               	infsnz	LTC6804_rdcv@current_cell& (0+255),f,b
 10567  000D72  2BEE               	incf	(LTC6804_rdcv@current_cell+1)& (0+255),f,b
 10568  000D74  D773               	goto	l7375
 10569  000D76                     l7389:
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;LT6804.c: 375: }
 10573                           ;LT6804.c: 377: received_pec = (cell_data[data_counter] << 8) + cell_data[data_counter+1
      +                          ];
 10574  000D76  C0EF  F0BF         	movff	LTC6804_rdcv@data_counter,??_LTC6804_rdcv
 10575  000D7A  C0F0  F0C0         	movff	LTC6804_rdcv@data_counter+1,??_LTC6804_rdcv+1
 10576  000D7E  90D8               	bcf	status,0,c
 10577  000D80  0100               	movlb	0	; () banked
 10578  000D82  37BF               	rlcf	??_LTC6804_rdcv& (0+255),f,b
 10579  000D84  37C0               	rlcf	(??_LTC6804_rdcv+1)& (0+255),f,b
 10580  000D86  0E02               	movlw	2
 10581  000D88  0100               	movlb	0	; () banked
 10582  000D8A  27BF               	addwf	??_LTC6804_rdcv& (0+255),f,b
 10583  000D8C  0E00               	movlw	0
 10584  000D8E  23C0               	addwfc	(??_LTC6804_rdcv+1)& (0+255),f,b
 10585  000D90  0EC9               	movlw	low LTC6804_rdcv@cell_data
 10586  000D92  0100               	movlb	0	; () banked
 10587  000D94  25BF               	addwf	??_LTC6804_rdcv& (0+255),w,b
 10588  000D96  6ED9               	movwf	fsr2l,c
 10589  000D98  0E00               	movlw	high LTC6804_rdcv@cell_data
 10590  000D9A  0100               	movlb	0	; () banked
 10591  000D9C  21C0               	addwfc	(??_LTC6804_rdcv+1)& (0+255),w,b
 10592  000D9E  6EDA               	movwf	fsr2h,c
 10593  000DA0  CFDE F0C1          	movff	postinc2,??_LTC6804_rdcv+2
 10594  000DA4  CFDD F0C2          	movff	postdec2,??_LTC6804_rdcv+3
 10595  000DA8  90D8               	bcf	status,0,c
 10596  000DAA  0100               	movlb	0	; () banked
 10597  000DAC  35EF               	rlcf	LTC6804_rdcv@data_counter& (0+255),w,b
 10598  000DAE  6ED9               	movwf	fsr2l,c
 10599  000DB0  0100               	movlb	0	; () banked
 10600  000DB2  35F0               	rlcf	(LTC6804_rdcv@data_counter+1)& (0+255),w,b
 10601  000DB4  6EDA               	movwf	fsr2h,c
 10602  000DB6  0EC9               	movlw	low LTC6804_rdcv@cell_data
 10603  000DB8  26D9               	addwf	fsr2l,f,c
 10604  000DBA  0E00               	movlw	high LTC6804_rdcv@cell_data
 10605  000DBC  22DA               	addwfc	fsr2h,f,c
 10606  000DBE  CFDE F0C3          	movff	postinc2,??_LTC6804_rdcv+4
 10607  000DC2  CFDD F0C4          	movff	postdec2,??_LTC6804_rdcv+5
 10608  000DC6  C0C3  F0C4         	movff	??_LTC6804_rdcv+4,??_LTC6804_rdcv+5
 10609  000DCA  0100               	movlb	0	; () banked
 10610  000DCC  6BC3               	clrf	(??_LTC6804_rdcv+4)& (0+255),b
 10611  000DCE  0100               	movlb	0	; () banked
 10612  000DD0  51C1               	movf	(??_LTC6804_rdcv+2)& (0+255),w,b
 10613  000DD2  0100               	movlb	0	; () banked
 10614  000DD4  25C3               	addwf	(??_LTC6804_rdcv+4)& (0+255),w,b
 10615  000DD6  0100               	movlb	0	; () banked
 10616  000DD8  6FE5               	movwf	LTC6804_rdcv@received_pec& (0+255),b
 10617  000DDA  0100               	movlb	0	; () banked
 10618  000DDC  51C2               	movf	(??_LTC6804_rdcv+3)& (0+255),w,b
 10619  000DDE  0100               	movlb	0	; () banked
 10620  000DE0  21C4               	addwfc	(??_LTC6804_rdcv+5)& (0+255),w,b
 10621  000DE2  0100               	movlb	0	; () banked
 10622  000DE4  6FE6               	movwf	(LTC6804_rdcv@received_pec+1)& (0+255),b
 10623                           
 10624                           ; BSR set to: 0
 10625                           ;LT6804.c: 378: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT ]);
 10626  000DE6  C0E1  F023         	movff	LTC6804_rdcv@BYT_IN_REG,pec15_calc@len
 10627  000DEA  C0E2  F024         	movff	LTC6804_rdcv@BYT_IN_REG+1,pec15_calc@len+1
 10628  000DEE  C04D  F01D         	movff	_current_ic,___wmul@multiplier
 10629  000DF2  C04E  F01E         	movff	_current_ic+1,___wmul@multiplier+1
 10630  000DF6  C0DF  F01F         	movff	LTC6804_rdcv@NUM_RX_BYT,___wmul@multiplicand
 10631  000DFA  C0E0  F020         	movff	LTC6804_rdcv@NUM_RX_BYT+1,___wmul@multiplicand+1
 10632  000DFE  EC68  F018         	call	___wmul	;wreg free
 10633  000E02  90D8               	bcf	status,0,c
 10634  000E04  361D               	rlcf	?___wmul,f,c
 10635  000E06  361E               	rlcf	?___wmul+1,f,c
 10636  000E08  0EC9               	movlw	low LTC6804_rdcv@cell_data
 10637  000E0A  241D               	addwf	?___wmul,w,c
 10638  000E0C  6E25               	movwf	pec15_calc@data,c
 10639  000E0E  0E00               	movlw	high LTC6804_rdcv@cell_data
 10640  000E10  201E               	addwfc	?___wmul+1,w,c
 10641  000E12  6E26               	movwf	pec15_calc@data+1,c
 10642  000E14  EC80  F013         	call	_pec15_calc	;wreg free
 10643  000E18  C023  F0E7         	movff	?_pec15_calc,LTC6804_rdcv@data_pec
 10644  000E1C  C024  F0E8         	movff	?_pec15_calc+1,LTC6804_rdcv@data_pec+1
 10645                           
 10646                           ;LT6804.c: 379: if(received_pec != data_pec)
 10647  000E20  0100               	movlb	0	; () banked
 10648  000E22  51E7               	movf	LTC6804_rdcv@data_pec& (0+255),w,b
 10649  000E24  0100               	movlb	0	; () banked
 10650  000E26  19E5               	xorwf	LTC6804_rdcv@received_pec& (0+255),w,b
 10651  000E28  E106               	bnz	u7440
 10652  000E2A  0100               	movlb	0	; () banked
 10653  000E2C  51E8               	movf	(LTC6804_rdcv@data_pec+1)& (0+255),w,b
 10654  000E2E  0100               	movlb	0	; () banked
 10655  000E30  19E6               	xorwf	(LTC6804_rdcv@received_pec+1)& (0+255),w,b
 10656  000E32  B4D8               	btfsc	status,2,c
 10657  000E34  D004               	goto	l7397
 10658  000E36                     u7440:
 10659                           
 10660                           ; BSR set to: 0
 10661                           ;LT6804.c: 380: {
 10662                           ;LT6804.c: 381: pec_error--;
 10663  000E36  0100               	movlb	0	; () banked
 10664  000E38  07DD               	decf	LTC6804_rdcv@pec_error& (0+255),f,b
 10665  000E3A  A0D8               	btfss	status,0,c
 10666  000E3C  07DE               	decf	(LTC6804_rdcv@pec_error+1)& (0+255),f,b
 10667  000E3E                     l7397:
 10668                           
 10669                           ; BSR set to: 0
 10670                           ;LT6804.c: 382: }
 10671                           ;LT6804.c: 383: data_counter=data_counter+2;
 10672  000E3E  0E02               	movlw	2
 10673  000E40  0100               	movlb	0	; () banked
 10674  000E42  25EF               	addwf	LTC6804_rdcv@data_counter& (0+255),w,b
 10675  000E44  0100               	movlb	0	; () banked
 10676  000E46  6FEF               	movwf	LTC6804_rdcv@data_counter& (0+255),b
 10677  000E48  0E00               	movlw	0
 10678  000E4A  0100               	movlb	0	; () banked
 10679  000E4C  21F0               	addwfc	(LTC6804_rdcv@data_counter+1)& (0+255),w,b
 10680  000E4E  0100               	movlb	0	; () banked
 10681  000E50  6FF0               	movwf	(LTC6804_rdcv@data_counter+1)& (0+255),b
 10682                           
 10683                           ; BSR set to: 0
 10684  000E52  4A4D               	infsnz	_current_ic,f,c
 10685  000E54  2A4E               	incf	_current_ic+1,f,c
 10686  000E56                     l829:
 10687  000E56  0100               	movlb	0	; () banked
 10688  000E58  51BB               	movf	LTC6804_rdcv@total_ic& (0+255),w,b
 10689  000E5A  5C4D               	subwf	_current_ic,w,c
 10690  000E5C  504E               	movf	_current_ic+1,w,c
 10691  000E5E  0A80               	xorlw	128
 10692  000E60  0100               	movlb	0	; () banked
 10693  000E62  6FBF               	movwf	??_LTC6804_rdcv& (0+255),b
 10694  000E64  0100               	movlb	0	; () banked
 10695  000E66  51BC               	movf	(LTC6804_rdcv@total_ic+1)& (0+255),w,b
 10696  000E68  0A80               	xorlw	128
 10697  000E6A  0100               	movlb	0	; () banked
 10698  000E6C  59BF               	subwfb	??_LTC6804_rdcv& (0+255),w,b
 10699  000E6E  A0D8               	btfss	status,0,c
 10700  000E70  D6F0               	goto	l7373
 10701                           
 10702                           ; BSR set to: 0
 10703                           
 10704                           ; BSR set to: 0
 10705  000E72  0100               	movlb	0	; () banked
 10706  000E74  4BE9               	infsnz	LTC6804_rdcv@cell_reg& (0+255),f,b
 10707  000E76  2BEA               	incf	(LTC6804_rdcv@cell_reg+1)& (0+255),f,b
 10708                           
 10709                           ; BSR set to: 0
 10710  000E78  0100               	movlb	0	; () banked
 10711  000E7A  BFEA               	btfsc	(LTC6804_rdcv@cell_reg+1)& (0+255),7,b
 10712  000E7C  D6D2               	goto	l7367
 10713  000E7E  0100               	movlb	0	; () banked
 10714  000E80  51EA               	movf	(LTC6804_rdcv@cell_reg+1)& (0+255),w,b
 10715  000E82  E101               	bnz	u7460
 10716  000E84  D6C7               	goto	L14
 10717  000E86                     u7460:
 10718                           
 10719                           ; BSR set to: 0
 10720                           ;LT6804.c: 384: }
 10721                           ;LT6804.c: 385: }
 10722                           ;LT6804.c: 386: }
 10723  000E86  D12B               	goto	l835
 10724  000E88                     l7405:
 10725                           
 10726                           ; BSR set to: 0
 10727                           ;LT6804.c: 388: else
 10728                           ;LT6804.c: 389: {
 10729                           ;LT6804.c: 392: LTC6804_rdcv_reg(reg, total_ic,cell_data);
 10730  000E88  C0B9  F030         	movff	LTC6804_rdcv@reg,LTC6804_rdcv_reg@reg
 10731  000E8C  C0BA  F031         	movff	LTC6804_rdcv@reg+1,LTC6804_rdcv_reg@reg+1
 10732  000E90  C0BB  F032         	movff	LTC6804_rdcv@total_ic,LTC6804_rdcv_reg@total_ic
 10733  000E94  C0BC  F033         	movff	LTC6804_rdcv@total_ic+1,LTC6804_rdcv_reg@total_ic+1
 10734  000E98  0EC9               	movlw	low LTC6804_rdcv@cell_data
 10735  000E9A  6E34               	movwf	LTC6804_rdcv_reg@data,c
 10736  000E9C  0E00               	movlw	high LTC6804_rdcv@cell_data
 10737  000E9E  6E35               	movwf	LTC6804_rdcv_reg@data+1,c
 10738  000EA0  ECCA  F010         	call	_LTC6804_rdcv_reg	;wreg free
 10739                           
 10740                           ;LT6804.c: 393: for (current_ic = 0 ; current_ic < total_ic; current_ic++)
 10741  000EA4  0E00               	movlw	0
 10742  000EA6  6E4E               	movwf	_current_ic+1,c
 10743  000EA8  0E00               	movlw	0
 10744  000EAA  6E4D               	movwf	_current_ic,c
 10745  000EAC  D10A               	goto	l7435
 10746  000EAE                     l7409:
 10747                           
 10748                           ;LT6804.c: 394: {
 10749                           ;LT6804.c: 396: for(current_cell = 0; current_cell < CELL_IN_REG; current_cell++)
 10750  000EAE  0E00               	movlw	0
 10751  000EB0  0100               	movlb	0	; () banked
 10752  000EB2  6FEE               	movwf	(LTC6804_rdcv@current_cell+1)& (0+255),b
 10753  000EB4  0E00               	movlw	0
 10754  000EB6  6FED               	movwf	LTC6804_rdcv@current_cell& (0+255),b
 10755  000EB8                     l7411:
 10756                           
 10757                           ; BSR set to: 0
 10758  000EB8  0100               	movlb	0	; () banked
 10759  000EBA  51EB               	movf	LTC6804_rdcv@CELL_IN_REG& (0+255),w,b
 10760  000EBC  0100               	movlb	0	; () banked
 10761  000EBE  5DED               	subwf	LTC6804_rdcv@current_cell& (0+255),w,b
 10762  000EC0  0100               	movlb	0	; () banked
 10763  000EC2  51EE               	movf	(LTC6804_rdcv@current_cell+1)& (0+255),w,b
 10764  000EC4  0A80               	xorlw	128
 10765  000EC6  0100               	movlb	0	; () banked
 10766  000EC8  6FBF               	movwf	??_LTC6804_rdcv& (0+255),b
 10767  000ECA  0100               	movlb	0	; () banked
 10768  000ECC  51EC               	movf	(LTC6804_rdcv@CELL_IN_REG+1)& (0+255),w,b
 10769  000ECE  0A80               	xorlw	128
 10770  000ED0  0100               	movlb	0	; () banked
 10771  000ED2  59BF               	subwfb	??_LTC6804_rdcv& (0+255),w,b
 10772  000ED4  B0D8               	btfsc	status,0,c
 10773  000ED6  D07D               	goto	l7425
 10774                           
 10775                           ; BSR set to: 0
 10776                           ;LT6804.c: 397: {
 10777                           ;LT6804.c: 398: parsed_cell = cell_data[data_counter] + (cell_data[data_counter+1]<<8);
 10778                           
 10779                           ; BSR set to: 0
 10780                           
 10781                           ; BSR set to: 0
 10782  000ED8  90D8               	bcf	status,0,c
 10783  000EDA  0100               	movlb	0	; () banked
 10784  000EDC  35EF               	rlcf	LTC6804_rdcv@data_counter& (0+255),w,b
 10785  000EDE  6ED9               	movwf	fsr2l,c
 10786  000EE0  0100               	movlb	0	; () banked
 10787  000EE2  35F0               	rlcf	(LTC6804_rdcv@data_counter+1)& (0+255),w,b
 10788  000EE4  6EDA               	movwf	fsr2h,c
 10789  000EE6  0EC9               	movlw	low LTC6804_rdcv@cell_data
 10790  000EE8  26D9               	addwf	fsr2l,f,c
 10791  000EEA  0E00               	movlw	high LTC6804_rdcv@cell_data
 10792  000EEC  22DA               	addwfc	fsr2h,f,c
 10793  000EEE  CFDE F0BF          	movff	postinc2,??_LTC6804_rdcv
 10794  000EF2  CFDD F0C0          	movff	postdec2,??_LTC6804_rdcv+1
 10795  000EF6  C0EF  F0C1         	movff	LTC6804_rdcv@data_counter,??_LTC6804_rdcv+2
 10796  000EFA  C0F0  F0C2         	movff	LTC6804_rdcv@data_counter+1,??_LTC6804_rdcv+3
 10797  000EFE  90D8               	bcf	status,0,c
 10798  000F00  0100               	movlb	0	; () banked
 10799  000F02  37C1               	rlcf	(??_LTC6804_rdcv+2)& (0+255),f,b
 10800  000F04  37C2               	rlcf	(??_LTC6804_rdcv+3)& (0+255),f,b
 10801  000F06  0E02               	movlw	2
 10802  000F08  0100               	movlb	0	; () banked
 10803  000F0A  27C1               	addwf	(??_LTC6804_rdcv+2)& (0+255),f,b
 10804  000F0C  0E00               	movlw	0
 10805  000F0E  23C2               	addwfc	(??_LTC6804_rdcv+3)& (0+255),f,b
 10806  000F10  0EC9               	movlw	low LTC6804_rdcv@cell_data
 10807  000F12  0100               	movlb	0	; () banked
 10808  000F14  25C1               	addwf	(??_LTC6804_rdcv+2)& (0+255),w,b
 10809  000F16  6ED9               	movwf	fsr2l,c
 10810  000F18  0E00               	movlw	high LTC6804_rdcv@cell_data
 10811  000F1A  0100               	movlb	0	; () banked
 10812  000F1C  21C2               	addwfc	(??_LTC6804_rdcv+3)& (0+255),w,b
 10813  000F1E  6EDA               	movwf	fsr2h,c
 10814  000F20  CFDE F0C3          	movff	postinc2,??_LTC6804_rdcv+4
 10815  000F24  CFDD F0C4          	movff	postdec2,??_LTC6804_rdcv+5
 10816  000F28  C0C3  F0C4         	movff	??_LTC6804_rdcv+4,??_LTC6804_rdcv+5
 10817  000F2C  0100               	movlb	0	; () banked
 10818  000F2E  6BC3               	clrf	(??_LTC6804_rdcv+4)& (0+255),b
 10819  000F30  0100               	movlb	0	; () banked
 10820  000F32  51BF               	movf	??_LTC6804_rdcv& (0+255),w,b
 10821  000F34  0100               	movlb	0	; () banked
 10822  000F36  25C3               	addwf	(??_LTC6804_rdcv+4)& (0+255),w,b
 10823  000F38  0100               	movlb	0	; () banked
 10824  000F3A  6FE3               	movwf	LTC6804_rdcv@parsed_cell& (0+255),b
 10825  000F3C  0100               	movlb	0	; () banked
 10826  000F3E  51C0               	movf	(??_LTC6804_rdcv+1)& (0+255),w,b
 10827  000F40  0100               	movlb	0	; () banked
 10828  000F42  21C4               	addwfc	(??_LTC6804_rdcv+5)& (0+255),w,b
 10829  000F44  0100               	movlb	0	; () banked
 10830  000F46  6FE4               	movwf	(LTC6804_rdcv@parsed_cell+1)& (0+255),b
 10831                           
 10832                           ; BSR set to: 0
 10833                           ;LT6804.c: 399: cell_codes[current_ic][current_cell + ((reg - 1) * CELL_IN_REG)] = 0x000
      +                          0FFFF & parsed_cell;
 10834  000F48  C04D  F01D         	movff	_current_ic,___wmul@multiplier
 10835  000F4C  C04E  F01E         	movff	_current_ic+1,___wmul@multiplier+1
 10836  000F50  0E00               	movlw	0
 10837  000F52  6E20               	movwf	___wmul@multiplicand+1,c
 10838  000F54  0E18               	movlw	24
 10839  000F56  6E1F               	movwf	___wmul@multiplicand,c
 10840  000F58  EC68  F018         	call	___wmul	;wreg free
 10841  000F5C  C0BD  F0BF         	movff	LTC6804_rdcv@cell_codes,??_LTC6804_rdcv
 10842  000F60  C0BE  F0C0         	movff	LTC6804_rdcv@cell_codes+1,??_LTC6804_rdcv+1
 10843  000F64  501D               	movf	?___wmul,w,c
 10844  000F66  0100               	movlb	0	; () banked
 10845  000F68  27BF               	addwf	??_LTC6804_rdcv& (0+255),f,b
 10846  000F6A  501E               	movf	?___wmul+1,w,c
 10847  000F6C  0100               	movlb	0	; () banked
 10848  000F6E  23C0               	addwfc	(??_LTC6804_rdcv+1)& (0+255),f,b
 10849  000F70  0EFF               	movlw	255
 10850  000F72  0100               	movlb	0	; () banked
 10851  000F74  25B9               	addwf	LTC6804_rdcv@reg& (0+255),w,b
 10852  000F76  6E1D               	movwf	___wmul@multiplier,c
 10853  000F78  0EFF               	movlw	255
 10854  000F7A  0100               	movlb	0	; () banked
 10855  000F7C  21BA               	addwfc	(LTC6804_rdcv@reg+1)& (0+255),w,b
 10856  000F7E  6E1E               	movwf	___wmul@multiplier+1,c
 10857  000F80  C0EB  F01F         	movff	LTC6804_rdcv@CELL_IN_REG,___wmul@multiplicand
 10858  000F84  C0EC  F020         	movff	LTC6804_rdcv@CELL_IN_REG+1,___wmul@multiplicand+1
 10859  000F88  EC68  F018         	call	___wmul	;wreg free
 10860  000F8C  0100               	movlb	0	; () banked
 10861  000F8E  51ED               	movf	LTC6804_rdcv@current_cell& (0+255),w,b
 10862  000F90  261D               	addwf	?___wmul,f,c
 10863  000F92  0100               	movlb	0	; () banked
 10864  000F94  51EE               	movf	(LTC6804_rdcv@current_cell+1)& (0+255),w,b
 10865  000F96  221E               	addwfc	?___wmul+1,f,c
 10866  000F98  90D8               	bcf	status,0,c
 10867  000F9A  361D               	rlcf	?___wmul,f,c
 10868  000F9C  361E               	rlcf	?___wmul+1,f,c
 10869  000F9E  501D               	movf	?___wmul,w,c
 10870  000FA0  0100               	movlb	0	; () banked
 10871  000FA2  25BF               	addwf	??_LTC6804_rdcv& (0+255),w,b
 10872  000FA4  6ED9               	movwf	fsr2l,c
 10873  000FA6  501E               	movf	?___wmul+1,w,c
 10874  000FA8  0100               	movlb	0	; () banked
 10875  000FAA  21C0               	addwfc	(??_LTC6804_rdcv+1)& (0+255),w,b
 10876  000FAC  6EDA               	movwf	fsr2h,c
 10877  000FAE  C0E3  FFDE         	movff	LTC6804_rdcv@parsed_cell,postinc2
 10878  000FB2  C0E4  FFDD         	movff	LTC6804_rdcv@parsed_cell+1,postdec2
 10879                           
 10880                           ; BSR set to: 0
 10881                           ;LT6804.c: 400: data_counter= data_counter + 2;
 10882  000FB6  0E02               	movlw	2
 10883  000FB8  0100               	movlb	0	; () banked
 10884  000FBA  25EF               	addwf	LTC6804_rdcv@data_counter& (0+255),w,b
 10885  000FBC  0100               	movlb	0	; () banked
 10886  000FBE  6FEF               	movwf	LTC6804_rdcv@data_counter& (0+255),b
 10887  000FC0  0E00               	movlw	0
 10888  000FC2  0100               	movlb	0	; () banked
 10889  000FC4  21F0               	addwfc	(LTC6804_rdcv@data_counter+1)& (0+255),w,b
 10890  000FC6  0100               	movlb	0	; () banked
 10891  000FC8  6FF0               	movwf	(LTC6804_rdcv@data_counter+1)& (0+255),b
 10892                           
 10893                           ; BSR set to: 0
 10894  000FCA  0100               	movlb	0	; () banked
 10895  000FCC  4BED               	infsnz	LTC6804_rdcv@current_cell& (0+255),f,b
 10896  000FCE  2BEE               	incf	(LTC6804_rdcv@current_cell+1)& (0+255),f,b
 10897  000FD0  D773               	goto	l7411
 10898  000FD2                     l7425:
 10899                           
 10900                           ; BSR set to: 0
 10901                           ;LT6804.c: 401: }
 10902                           ;LT6804.c: 403: received_pec = (cell_data[data_counter] << 8 )+ cell_data[data_counter +
      +                           1];
 10903  000FD2  C0EF  F0BF         	movff	LTC6804_rdcv@data_counter,??_LTC6804_rdcv
 10904  000FD6  C0F0  F0C0         	movff	LTC6804_rdcv@data_counter+1,??_LTC6804_rdcv+1
 10905  000FDA  90D8               	bcf	status,0,c
 10906  000FDC  0100               	movlb	0	; () banked
 10907  000FDE  37BF               	rlcf	??_LTC6804_rdcv& (0+255),f,b
 10908  000FE0  37C0               	rlcf	(??_LTC6804_rdcv+1)& (0+255),f,b
 10909  000FE2  0E02               	movlw	2
 10910  000FE4  0100               	movlb	0	; () banked
 10911  000FE6  27BF               	addwf	??_LTC6804_rdcv& (0+255),f,b
 10912  000FE8  0E00               	movlw	0
 10913  000FEA  23C0               	addwfc	(??_LTC6804_rdcv+1)& (0+255),f,b
 10914  000FEC  0EC9               	movlw	low LTC6804_rdcv@cell_data
 10915  000FEE  0100               	movlb	0	; () banked
 10916  000FF0  25BF               	addwf	??_LTC6804_rdcv& (0+255),w,b
 10917  000FF2  6ED9               	movwf	fsr2l,c
 10918  000FF4  0E00               	movlw	high LTC6804_rdcv@cell_data
 10919  000FF6  0100               	movlb	0	; () banked
 10920  000FF8  21C0               	addwfc	(??_LTC6804_rdcv+1)& (0+255),w,b
 10921  000FFA  6EDA               	movwf	fsr2h,c
 10922  000FFC  CFDE F0C1          	movff	postinc2,??_LTC6804_rdcv+2
 10923  001000  CFDD F0C2          	movff	postdec2,??_LTC6804_rdcv+3
 10924  001004  90D8               	bcf	status,0,c
 10925  001006  0100               	movlb	0	; () banked
 10926  001008  35EF               	rlcf	LTC6804_rdcv@data_counter& (0+255),w,b
 10927  00100A  6ED9               	movwf	fsr2l,c
 10928  00100C  0100               	movlb	0	; () banked
 10929  00100E  35F0               	rlcf	(LTC6804_rdcv@data_counter+1)& (0+255),w,b
 10930  001010  6EDA               	movwf	fsr2h,c
 10931  001012  0EC9               	movlw	low LTC6804_rdcv@cell_data
 10932  001014  26D9               	addwf	fsr2l,f,c
 10933  001016  0E00               	movlw	high LTC6804_rdcv@cell_data
 10934  001018  22DA               	addwfc	fsr2h,f,c
 10935  00101A  CFDE F0C3          	movff	postinc2,??_LTC6804_rdcv+4
 10936  00101E  CFDD F0C4          	movff	postdec2,??_LTC6804_rdcv+5
 10937  001022  C0C3  F0C4         	movff	??_LTC6804_rdcv+4,??_LTC6804_rdcv+5
 10938  001026  0100               	movlb	0	; () banked
 10939  001028  6BC3               	clrf	(??_LTC6804_rdcv+4)& (0+255),b
 10940  00102A  0100               	movlb	0	; () banked
 10941  00102C  51C1               	movf	(??_LTC6804_rdcv+2)& (0+255),w,b
 10942  00102E  0100               	movlb	0	; () banked
 10943  001030  25C3               	addwf	(??_LTC6804_rdcv+4)& (0+255),w,b
 10944  001032  0100               	movlb	0	; () banked
 10945  001034  6FE5               	movwf	LTC6804_rdcv@received_pec& (0+255),b
 10946  001036  0100               	movlb	0	; () banked
 10947  001038  51C2               	movf	(??_LTC6804_rdcv+3)& (0+255),w,b
 10948  00103A  0100               	movlb	0	; () banked
 10949  00103C  21C4               	addwfc	(??_LTC6804_rdcv+5)& (0+255),w,b
 10950  00103E  0100               	movlb	0	; () banked
 10951  001040  6FE6               	movwf	(LTC6804_rdcv@received_pec+1)& (0+255),b
 10952                           
 10953                           ; BSR set to: 0
 10954                           ;LT6804.c: 404: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT * (
      +                          reg-1)]);
 10955  001042  C04D  F01D         	movff	_current_ic,___wmul@multiplier
 10956  001046  C04E  F01E         	movff	_current_ic+1,___wmul@multiplier+1
 10957  00104A  C0DF  F01F         	movff	LTC6804_rdcv@NUM_RX_BYT,___wmul@multiplicand
 10958  00104E  C0E0  F020         	movff	LTC6804_rdcv@NUM_RX_BYT+1,___wmul@multiplicand+1
 10959  001052  EC68  F018         	call	___wmul	;wreg free
 10960  001056  C01D  F0C7         	movff	?___wmul,_LTC6804_rdcv$2831
 10961  00105A  C01E  F0C8         	movff	?___wmul+1,_LTC6804_rdcv$2831+1
 10962                           
 10963                           ;LT6804.c: 404: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT * (
      +                          reg-1)]);
 10964  00105E  C0E1  F023         	movff	LTC6804_rdcv@BYT_IN_REG,pec15_calc@len
 10965  001062  C0E2  F024         	movff	LTC6804_rdcv@BYT_IN_REG+1,pec15_calc@len+1
 10966  001066  0EFF               	movlw	255
 10967  001068  0100               	movlb	0	; () banked
 10968  00106A  25B9               	addwf	LTC6804_rdcv@reg& (0+255),w,b
 10969  00106C  6E1D               	movwf	___wmul@multiplier,c
 10970  00106E  0EFF               	movlw	255
 10971  001070  0100               	movlb	0	; () banked
 10972  001072  21BA               	addwfc	(LTC6804_rdcv@reg+1)& (0+255),w,b
 10973  001074  6E1E               	movwf	___wmul@multiplier+1,c
 10974  001076  C0C7  F01F         	movff	_LTC6804_rdcv$2831,___wmul@multiplicand
 10975  00107A  C0C8  F020         	movff	_LTC6804_rdcv$2831+1,___wmul@multiplicand+1
 10976  00107E  EC68  F018         	call	___wmul	;wreg free
 10977  001082  90D8               	bcf	status,0,c
 10978  001084  361D               	rlcf	?___wmul,f,c
 10979  001086  361E               	rlcf	?___wmul+1,f,c
 10980  001088  0EC9               	movlw	low LTC6804_rdcv@cell_data
 10981  00108A  241D               	addwf	?___wmul,w,c
 10982  00108C  6E25               	movwf	pec15_calc@data,c
 10983  00108E  0E00               	movlw	high LTC6804_rdcv@cell_data
 10984  001090  201E               	addwfc	?___wmul+1,w,c
 10985  001092  6E26               	movwf	pec15_calc@data+1,c
 10986  001094  EC80  F013         	call	_pec15_calc	;wreg free
 10987  001098  C023  F0E7         	movff	?_pec15_calc,LTC6804_rdcv@data_pec
 10988  00109C  C024  F0E8         	movff	?_pec15_calc+1,LTC6804_rdcv@data_pec+1
 10989                           
 10990                           ;LT6804.c: 405: if(received_pec != data_pec)
 10991  0010A0  0100               	movlb	0	; () banked
 10992  0010A2  51E7               	movf	LTC6804_rdcv@data_pec& (0+255),w,b
 10993  0010A4  0100               	movlb	0	; () banked
 10994  0010A6  19E5               	xorwf	LTC6804_rdcv@received_pec& (0+255),w,b
 10995  0010A8  E106               	bnz	u7490
 10996  0010AA  0100               	movlb	0	; () banked
 10997  0010AC  51E8               	movf	(LTC6804_rdcv@data_pec+1)& (0+255),w,b
 10998  0010AE  0100               	movlb	0	; () banked
 10999  0010B0  19E6               	xorwf	(LTC6804_rdcv@received_pec+1)& (0+255),w,b
 11000  0010B2  B4D8               	btfsc	status,2,c
 11001  0010B4  D004               	goto	l840
 11002  0010B6                     u7490:
 11003                           
 11004                           ; BSR set to: 0
 11005                           ;LT6804.c: 406: {
 11006                           ;LT6804.c: 407: pec_error--;
 11007  0010B6  0100               	movlb	0	; () banked
 11008  0010B8  07DD               	decf	LTC6804_rdcv@pec_error& (0+255),f,b
 11009  0010BA  A0D8               	btfss	status,0,c
 11010  0010BC  07DE               	decf	(LTC6804_rdcv@pec_error+1)& (0+255),f,b
 11011  0010BE                     l840:
 11012                           
 11013                           ; BSR set to: 0
 11014  0010BE  4A4D               	infsnz	_current_ic,f,c
 11015  0010C0  2A4E               	incf	_current_ic+1,f,c
 11016  0010C2                     l7435:
 11017  0010C2  0100               	movlb	0	; () banked
 11018  0010C4  51BB               	movf	LTC6804_rdcv@total_ic& (0+255),w,b
 11019  0010C6  5C4D               	subwf	_current_ic,w,c
 11020  0010C8  504E               	movf	_current_ic+1,w,c
 11021  0010CA  0A80               	xorlw	128
 11022  0010CC  0100               	movlb	0	; () banked
 11023  0010CE  6FBF               	movwf	??_LTC6804_rdcv& (0+255),b
 11024  0010D0  0100               	movlb	0	; () banked
 11025  0010D2  51BC               	movf	(LTC6804_rdcv@total_ic+1)& (0+255),w,b
 11026  0010D4  0A80               	xorlw	128
 11027  0010D6  0100               	movlb	0	; () banked
 11028  0010D8  59BF               	subwfb	??_LTC6804_rdcv& (0+255),w,b
 11029  0010DA  A0D8               	btfss	status,0,c
 11030  0010DC  D6E8               	goto	l7409
 11031  0010DE                     l835:
 11032                           
 11033                           ; BSR set to: 0
 11034                           ;LT6804.c: 408: }
 11035                           ;LT6804.c: 409: }
 11036                           ;LT6804.c: 410: }
 11037                           ;LT6804.c: 412: return(pec_error);
 11038  0010DE  C0DD  F0B9         	movff	LTC6804_rdcv@pec_error,?_LTC6804_rdcv
 11039  0010E2  C0DE  F0BA         	movff	LTC6804_rdcv@pec_error+1,?_LTC6804_rdcv+1
 11040                           
 11041                           ; BSR set to: 0
 11042  0010E6  0012               	return		;funcret
 11043  0010E8                     __end_of_LTC6804_rdcv:
 11044                           	opt stack 0
 11045                           tblptru	equ	0xFF8
 11046                           tblptrh	equ	0xFF7
 11047                           tblptrl	equ	0xFF6
 11048                           tablat	equ	0xFF5
 11049                           prodh	equ	0xFF4
 11050                           prodl	equ	0xFF3
 11051                           intcon	equ	0xFF2
 11052                           intcon2	equ	0xFF1
 11053                           postinc0	equ	0xFEE
 11054                           wreg	equ	0xFE8
 11055                           postinc1	equ	0xFE6
 11056                           postdec1	equ	0xFE5
 11057                           fsr1h	equ	0xFE2
 11058                           fsr1l	equ	0xFE1
 11059                           indf2	equ	0xFDF
 11060                           postinc2	equ	0xFDE
 11061                           postdec2	equ	0xFDD
 11062                           fsr2h	equ	0xFDA
 11063                           fsr2l	equ	0xFD9
 11064                           status	equ	0xFD8
 11065                           
 11066 ;; *************** function ___wmul *****************
 11067 ;; Defined at:
 11068 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;  multiplier      2   28[COMRAM] unsigned int 
 11071 ;;  multiplicand    2   30[COMRAM] unsigned int 
 11072 ;; Auto vars:     Size  Location     Type
 11073 ;;  product         2   32[COMRAM] unsigned int 
 11074 ;; Return value:  Size  Location     Type
 11075 ;;                  2   28[COMRAM] unsigned int 
 11076 ;; Registers used:
 11077 ;;		wreg, status,2, status,0, prodl, prodh
 11078 ;; Tracked objects:
 11079 ;;		On entry : 0/0
 11080 ;;		On exit  : 0/0
 11081 ;;		Unchanged: 0/0
 11082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11083 ;;      Params:         4       0       0       0       0       0       0
 11084 ;;      Locals:         2       0       0       0       0       0       0
 11085 ;;      Temps:          0       0       0       0       0       0       0
 11086 ;;      Totals:         6       0       0       0       0       0       0
 11087 ;;Total ram usage:        6 bytes
 11088 ;; Hardware stack levels used:    1
 11089 ;; Hardware stack levels required when called:    3
 11090 ;; This function calls:
 11091 ;;		Nothing
 11092 ;; This function is called by:
 11093 ;;		_SetTempEnable
 11094 ;;		_Set_ADC_Mode
 11095 ;;		_Set_DCC_Mode_OFF
 11096 ;;		_Set_DCTO_Mode_OFF
 11097 ;;		_Set_REFON_Pin
 11098 ;;		_LTC6804_rdcv
 11099 ;;		_LTC6804_wrcfg
 11100 ;;		_fround
 11101 ;;		_scale
 11102 ;;		_printf
 11103 ;;		_Temp_Fault
 11104 ;;		_Temp_Filter
 11105 ;;		_Temp_Convert
 11106 ;;		_Tempeture_Get
 11107 ;;		_CheckThresholdsBank
 11108 ;;		_SetBypass
 11109 ;;		_SetUnderOverVoltage
 11110 ;;		_ReadCurrentVolt
 11111 ;;		_ReadVolt
 11112 ;;		_CurrentCoulombCount
 11113 ;;		_LTC6804_rdaux
 11114 ;;		_LTC6804_rdStat
 11115 ;;		_LTC6804_rdcfg
 11116 ;;		_eval_poly
 11117 ;; This function uses a non-reentrant model
 11118 ;;
 11119                           
 11120                           	psect	text44
 11121  0030D0                     __ptext44:
 11122                           	opt stack 0
 11123  0030D0                     ___wmul:
 11124                           	opt stack 25
 11125                           
 11126                           ; BSR set to: 0
 11127                           ;incstack = 0
 11128  0030D0  501D               	movf	___wmul@multiplier,w,c
 11129  0030D2  021F               	mulwf	___wmul@multiplicand,c
 11130  0030D4  CFF3 F021          	movff	prodl,___wmul@product
 11131  0030D8  CFF4 F022          	movff	prodh,___wmul@product+1
 11132  0030DC  501D               	movf	___wmul@multiplier,w,c
 11133  0030DE  0220               	mulwf	___wmul@multiplicand+1,c
 11134  0030E0  50F3               	movf	prodl,w,c
 11135  0030E2  2622               	addwf	___wmul@product+1,f,c
 11136  0030E4  501E               	movf	___wmul@multiplier+1,w,c
 11137  0030E6  021F               	mulwf	___wmul@multiplicand,c
 11138  0030E8  50F3               	movf	prodl,w,c
 11139  0030EA  2622               	addwf	___wmul@product+1,f,c
 11140  0030EC  C021  F01D         	movff	___wmul@product,?___wmul
 11141  0030F0  C022  F01E         	movff	___wmul@product+1,?___wmul+1
 11142  0030F4  0012               	return	
 11143  0030F6                     __end_of___wmul:
 11144                           	opt stack 0
 11145                           tblptru	equ	0xFF8
 11146                           tblptrh	equ	0xFF7
 11147                           tblptrl	equ	0xFF6
 11148                           tablat	equ	0xFF5
 11149                           prodh	equ	0xFF4
 11150                           prodl	equ	0xFF3
 11151                           intcon	equ	0xFF2
 11152                           intcon2	equ	0xFF1
 11153                           postinc0	equ	0xFEE
 11154                           wreg	equ	0xFE8
 11155                           postinc1	equ	0xFE6
 11156                           postdec1	equ	0xFE5
 11157                           fsr1h	equ	0xFE2
 11158                           fsr1l	equ	0xFE1
 11159                           indf2	equ	0xFDF
 11160                           postinc2	equ	0xFDE
 11161                           postdec2	equ	0xFDD
 11162                           fsr2h	equ	0xFDA
 11163                           fsr2l	equ	0xFD9
 11164                           status	equ	0xFD8
 11165                           
 11166 ;; *************** function _LTC6804_rdcv_reg *****************
 11167 ;; Defined at:
 11168 ;;		line 451 in file "LT6804.c"
 11169 ;; Parameters:    Size  Location     Type
 11170 ;;  reg             2   47[COMRAM] int 
 11171 ;;  total_ic        2   49[COMRAM] int 
 11172 ;;  data            2   51[COMRAM] PTR int 
 11173 ;;		 -> LTC6804_rdcv@cell_data(20), 
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;  cmd             8   57[COMRAM] int [4]
 11176 ;;  temp_pec        2   55[COMRAM] int 
 11177 ;; Return value:  Size  Location     Type
 11178 ;;		None               void
 11179 ;; Registers used:
 11180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11181 ;; Tracked objects:
 11182 ;;		On entry : 0/0
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11186 ;;      Params:         6       0       0       0       0       0       0
 11187 ;;      Locals:        10       0       0       0       0       0       0
 11188 ;;      Temps:          2       0       0       0       0       0       0
 11189 ;;      Totals:        18       0       0       0       0       0       0
 11190 ;;Total ram usage:       18 bytes
 11191 ;; Hardware stack levels used:    1
 11192 ;; Hardware stack levels required when called:    5
 11193 ;; This function calls:
 11194 ;;		_pec15_calc
 11195 ;;		_spi_write_read
 11196 ;;		_wakeup_idle
 11197 ;; This function is called by:
 11198 ;;		_LTC6804_rdcv
 11199 ;; This function uses a non-reentrant model
 11200 ;;
 11201                           
 11202                           	psect	text45
 11203  002194                     __ptext45:
 11204                           	opt stack 0
 11205  002194                     _LTC6804_rdcv_reg:
 11206                           	opt stack 22
 11207                           
 11208                           ;LT6804.c: 456: int cmd[4];
 11209                           ;LT6804.c: 457: int temp_pec;
 11210                           ;LT6804.c: 460: if (reg == 1)
 11211                           
 11212                           ;incstack = 0
 11213  002194  0430               	decf	LTC6804_rdcv_reg@reg,w,c
 11214  002196  1031               	iorwf	LTC6804_rdcv_reg@reg+1,w,c
 11215  002198  A4D8               	btfss	status,2,c
 11216  00219A  D004               	goto	l7025
 11217                           
 11218                           ;LT6804.c: 461: {
 11219                           ;LT6804.c: 462: cmd[1] = 0x04;
 11220  00219C  0E00               	movlw	0
 11221  00219E  6E3D               	movwf	LTC6804_rdcv_reg@cmd+3,c
 11222  0021A0  0E04               	movlw	4
 11223  0021A2  D01A               	goto	L17
 11224  0021A4                     l7025:
 11225                           
 11226                           ;LT6804.c: 465: else if(reg == 2)
 11227  0021A4  0E02               	movlw	2
 11228  0021A6  1830               	xorwf	LTC6804_rdcv_reg@reg,w,c
 11229  0021A8  1031               	iorwf	LTC6804_rdcv_reg@reg+1,w,c
 11230  0021AA  A4D8               	btfss	status,2,c
 11231  0021AC  D004               	goto	l7029
 11232                           
 11233                           ;LT6804.c: 466: {
 11234                           ;LT6804.c: 467: cmd[1] = 0x06;
 11235  0021AE  0E00               	movlw	0
 11236  0021B0  6E3D               	movwf	LTC6804_rdcv_reg@cmd+3,c
 11237  0021B2  0E06               	movlw	6
 11238  0021B4  D011               	goto	L17
 11239  0021B6                     l7029:
 11240                           
 11241                           ;LT6804.c: 470: else if(reg == 3)
 11242  0021B6  0E03               	movlw	3
 11243  0021B8  1830               	xorwf	LTC6804_rdcv_reg@reg,w,c
 11244  0021BA  1031               	iorwf	LTC6804_rdcv_reg@reg+1,w,c
 11245  0021BC  A4D8               	btfss	status,2,c
 11246  0021BE  D004               	goto	l7033
 11247                           
 11248                           ;LT6804.c: 471: {
 11249                           ;LT6804.c: 472: cmd[1] = 0x08;
 11250  0021C0  0E00               	movlw	0
 11251  0021C2  6E3D               	movwf	LTC6804_rdcv_reg@cmd+3,c
 11252  0021C4  0E08               	movlw	8
 11253  0021C6  D008               	goto	L17
 11254  0021C8                     l7033:
 11255                           
 11256                           ;LT6804.c: 475: else if(reg == 4)
 11257  0021C8  0E04               	movlw	4
 11258  0021CA  1830               	xorwf	LTC6804_rdcv_reg@reg,w,c
 11259  0021CC  1031               	iorwf	LTC6804_rdcv_reg@reg+1,w,c
 11260  0021CE  A4D8               	btfss	status,2,c
 11261  0021D0  D008               	goto	l7037
 11262                           
 11263                           ;LT6804.c: 476: {
 11264                           ;LT6804.c: 477: cmd[1] = 0x0A;
 11265  0021D2  0E00               	movlw	0
 11266  0021D4  6E3D               	movwf	LTC6804_rdcv_reg@cmd+3,c
 11267  0021D6  0E0A               	movlw	10
 11268  0021D8                     L17:
 11269  0021D8  6E3C               	movwf	LTC6804_rdcv_reg@cmd+2,c
 11270                           
 11271                           ;LT6804.c: 478: cmd[0] = 0x00;
 11272  0021DA  0E00               	movlw	0
 11273  0021DC  6E3B               	movwf	LTC6804_rdcv_reg@cmd+1,c
 11274  0021DE  0E00               	movlw	0
 11275  0021E0  6E3A               	movwf	LTC6804_rdcv_reg@cmd,c
 11276  0021E2                     l7037:
 11277                           
 11278                           ;LT6804.c: 479: }
 11279                           ;LT6804.c: 485: wakeup_idle ();
 11280  0021E2  ECD3  F018         	call	_wakeup_idle	;wreg free
 11281                           
 11282                           ;LT6804.c: 486: LATD3 = 1;
 11283  0021E6  868C               	bsf	3980,3,c	;volatile
 11284                           
 11285                           ;LT6804.c: 488: for(current_ic = 0; current_ic<total_ic; current_ic++)
 11286  0021E8  0E00               	movlw	0
 11287  0021EA  6E4E               	movwf	_current_ic+1,c
 11288  0021EC  0E00               	movlw	0
 11289  0021EE  6E4D               	movwf	_current_ic,c
 11290  0021F0  D056               	goto	l7059
 11291  0021F2                     l7043:
 11292                           
 11293                           ;LT6804.c: 489: {
 11294                           ;LT6804.c: 490: cmd[0] = 0x80 + (current_ic<<3);
 11295  0021F2  C04D  F036         	movff	_current_ic,??_LTC6804_rdcv_reg
 11296  0021F6  C04E  F037         	movff	_current_ic+1,??_LTC6804_rdcv_reg+1
 11297  0021FA  90D8               	bcf	status,0,c
 11298  0021FC  3636               	rlcf	??_LTC6804_rdcv_reg,f,c
 11299  0021FE  3637               	rlcf	??_LTC6804_rdcv_reg+1,f,c
 11300  002200  90D8               	bcf	status,0,c
 11301  002202  3636               	rlcf	??_LTC6804_rdcv_reg,f,c
 11302  002204  3637               	rlcf	??_LTC6804_rdcv_reg+1,f,c
 11303  002206  90D8               	bcf	status,0,c
 11304  002208  3636               	rlcf	??_LTC6804_rdcv_reg,f,c
 11305  00220A  3637               	rlcf	??_LTC6804_rdcv_reg+1,f,c
 11306  00220C  0E80               	movlw	128
 11307  00220E  2436               	addwf	??_LTC6804_rdcv_reg,w,c
 11308  002210  6E3A               	movwf	LTC6804_rdcv_reg@cmd,c
 11309  002212  0E00               	movlw	0
 11310  002214  2037               	addwfc	??_LTC6804_rdcv_reg+1,w,c
 11311  002216  6E3B               	movwf	LTC6804_rdcv_reg@cmd+1,c
 11312                           
 11313                           ;LT6804.c: 491: temp_pec = pec15_calc(2, cmd);
 11314  002218  0E00               	movlw	0
 11315  00221A  6E24               	movwf	pec15_calc@len+1,c
 11316  00221C  0E02               	movlw	2
 11317  00221E  6E23               	movwf	pec15_calc@len,c
 11318  002220  0E3A               	movlw	low LTC6804_rdcv_reg@cmd
 11319  002222  6E25               	movwf	pec15_calc@data,c
 11320  002224  0E00               	movlw	high LTC6804_rdcv_reg@cmd
 11321  002226  6E26               	movwf	pec15_calc@data+1,c
 11322  002228  EC80  F013         	call	_pec15_calc	;wreg free
 11323  00222C  C023  F038         	movff	?_pec15_calc,LTC6804_rdcv_reg@temp_pec
 11324  002230  C024  F039         	movff	?_pec15_calc+1,LTC6804_rdcv_reg@temp_pec+1
 11325                           
 11326                           ;LT6804.c: 492: cmd[2] = (int)(temp_pec >> 8);
 11327  002234  C039  F036         	movff	LTC6804_rdcv_reg@temp_pec+1,??_LTC6804_rdcv_reg
 11328  002238  6A37               	clrf	(??_LTC6804_rdcv_reg+1)& (0+255),c
 11329  00223A  BE36               	btfsc	??_LTC6804_rdcv_reg& (0+255),7,c
 11330  00223C  6837               	setf	(??_LTC6804_rdcv_reg+1)& (0+255),c
 11331  00223E  C036  F03E         	movff	??_LTC6804_rdcv_reg,LTC6804_rdcv_reg@cmd+4
 11332  002242  C037  F03F         	movff	??_LTC6804_rdcv_reg+1,LTC6804_rdcv_reg@cmd+5
 11333                           
 11334                           ;LT6804.c: 493: cmd[3] = (int)(temp_pec);
 11335  002246  C038  F040         	movff	LTC6804_rdcv_reg@temp_pec,LTC6804_rdcv_reg@cmd+6
 11336  00224A  C039  F041         	movff	LTC6804_rdcv_reg@temp_pec+1,LTC6804_rdcv_reg@cmd+7
 11337                           
 11338                           ;LT6804.c: 494: LATD3 = 0;
 11339  00224E  968C               	bcf	3980,3,c	;volatile
 11340                           
 11341                           ;LT6804.c: 495: spi_write_read(cmd,4,&data[current_ic*8],8);
 11342  002250  0E3A               	movlw	low LTC6804_rdcv_reg@cmd
 11343  002252  6E11               	movwf	spi_write_read@tx_Data,c
 11344  002254  0E00               	movlw	high LTC6804_rdcv_reg@cmd
 11345  002256  6E12               	movwf	spi_write_read@tx_Data+1,c
 11346  002258  0E00               	movlw	0
 11347  00225A  6E14               	movwf	spi_write_read@tx_len+1,c
 11348  00225C  0E04               	movlw	4
 11349  00225E  6E13               	movwf	spi_write_read@tx_len,c
 11350  002260  C04D  F036         	movff	_current_ic,??_LTC6804_rdcv_reg
 11351  002264  C04E  F037         	movff	_current_ic+1,??_LTC6804_rdcv_reg+1
 11352  002268  90D8               	bcf	status,0,c
 11353  00226A  3636               	rlcf	??_LTC6804_rdcv_reg,f,c
 11354  00226C  3637               	rlcf	??_LTC6804_rdcv_reg+1,f,c
 11355  00226E  90D8               	bcf	status,0,c
 11356  002270  3636               	rlcf	??_LTC6804_rdcv_reg,f,c
 11357  002272  3637               	rlcf	??_LTC6804_rdcv_reg+1,f,c
 11358  002274  90D8               	bcf	status,0,c
 11359  002276  3636               	rlcf	??_LTC6804_rdcv_reg,f,c
 11360  002278  3637               	rlcf	??_LTC6804_rdcv_reg+1,f,c
 11361  00227A  90D8               	bcf	status,0,c
 11362  00227C  3636               	rlcf	??_LTC6804_rdcv_reg,f,c
 11363  00227E  3637               	rlcf	??_LTC6804_rdcv_reg+1,f,c
 11364  002280  5036               	movf	??_LTC6804_rdcv_reg,w,c
 11365  002282  2434               	addwf	LTC6804_rdcv_reg@data,w,c
 11366  002284  6E15               	movwf	spi_write_read@rx_data,c
 11367  002286  5037               	movf	??_LTC6804_rdcv_reg+1,w,c
 11368  002288  2035               	addwfc	LTC6804_rdcv_reg@data+1,w,c
 11369  00228A  6E16               	movwf	spi_write_read@rx_data+1,c
 11370  00228C  0E00               	movlw	0
 11371  00228E  6E18               	movwf	spi_write_read@rx_len+1,c
 11372  002290  0E08               	movlw	8
 11373  002292  6E17               	movwf	spi_write_read@rx_len,c
 11374  002294  ECE1  F014         	call	_spi_write_read	;wreg free
 11375                           
 11376                           ;LT6804.c: 496: LATD3 = 1;
 11377  002298  868C               	bsf	3980,3,c	;volatile
 11378  00229A  4A4D               	infsnz	_current_ic,f,c
 11379  00229C  2A4E               	incf	_current_ic+1,f,c
 11380  00229E                     l7059:
 11381  00229E  5032               	movf	LTC6804_rdcv_reg@total_ic,w,c
 11382  0022A0  5C4D               	subwf	_current_ic,w,c
 11383  0022A2  504E               	movf	_current_ic+1,w,c
 11384  0022A4  0A80               	xorlw	128
 11385  0022A6  6E36               	movwf	??_LTC6804_rdcv_reg& (0+255),c
 11386  0022A8  5033               	movf	LTC6804_rdcv_reg@total_ic+1,w,c
 11387  0022AA  0A80               	xorlw	128
 11388  0022AC  5836               	subwfb	??_LTC6804_rdcv_reg& (0+255),w,c
 11389  0022AE  B0D8               	btfsc	status,0,c
 11390  0022B0  0012               	return	
 11391  0022B2  D79F               	goto	l7043
 11392  0022B4                     __end_of_LTC6804_rdcv_reg:
 11393                           	opt stack 0
 11394                           tblptru	equ	0xFF8
 11395                           tblptrh	equ	0xFF7
 11396                           tblptrl	equ	0xFF6
 11397                           tablat	equ	0xFF5
 11398                           prodh	equ	0xFF4
 11399                           prodl	equ	0xFF3
 11400                           intcon	equ	0xFF2
 11401                           intcon2	equ	0xFF1
 11402                           postinc0	equ	0xFEE
 11403                           wreg	equ	0xFE8
 11404                           postinc1	equ	0xFE6
 11405                           postdec1	equ	0xFE5
 11406                           fsr1h	equ	0xFE2
 11407                           fsr1l	equ	0xFE1
 11408                           indf2	equ	0xFDF
 11409                           postinc2	equ	0xFDE
 11410                           postdec2	equ	0xFDD
 11411                           fsr2h	equ	0xFDA
 11412                           fsr2l	equ	0xFD9
 11413                           status	equ	0xFD8
 11414                           
 11415 ;; *************** function _wakeup_idle *****************
 11416 ;; Defined at:
 11417 ;;		line 1139 in file "LT6804.c"
 11418 ;; Parameters:    Size  Location     Type
 11419 ;;		None
 11420 ;; Auto vars:     Size  Location     Type
 11421 ;;		None
 11422 ;; Return value:  Size  Location     Type
 11423 ;;		None               void
 11424 ;; Registers used:
 11425 ;;		wreg, status,2, status,0, cstack
 11426 ;; Tracked objects:
 11427 ;;		On entry : 0/0
 11428 ;;		On exit  : 0/0
 11429 ;;		Unchanged: 0/0
 11430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11431 ;;      Params:         0       0       0       0       0       0       0
 11432 ;;      Locals:         0       0       0       0       0       0       0
 11433 ;;      Temps:          0       0       0       0       0       0       0
 11434 ;;      Totals:         0       0       0       0       0       0       0
 11435 ;;Total ram usage:        0 bytes
 11436 ;; Hardware stack levels used:    1
 11437 ;; Hardware stack levels required when called:    4
 11438 ;; This function calls:
 11439 ;;		_DelayMicro
 11440 ;; This function is called by:
 11441 ;;		_LTC6804_rdcv_reg
 11442 ;;		_LTC6804_wrcfg
 11443 ;;		_LTC6804_adax
 11444 ;;		_LTC6804_ADSTAT
 11445 ;;		_LTC6804_rdaux_reg
 11446 ;;		_LTC6804_rdStat_reg
 11447 ;;		_LTC6804_clrcell
 11448 ;;		_LTC6804_clraux
 11449 ;;		_LTC6804_rdcfg
 11450 ;; This function uses a non-reentrant model
 11451 ;;
 11452                           
 11453                           	psect	text46
 11454  0031A6                     __ptext46:
 11455                           	opt stack 0
 11456  0031A6                     _wakeup_idle:
 11457                           	opt stack 22
 11458                           
 11459                           ;LT6804.c: 1142: LATD3 = 0;
 11460                           
 11461                           ;incstack = 0
 11462  0031A6  968C               	bcf	3980,3,c	;volatile
 11463                           
 11464                           ;LT6804.c: 1144: DelayMicro(10);
 11465  0031A8  0E00               	movlw	0
 11466  0031AA  6E10               	movwf	DelayMicro@wait+1,c
 11467  0031AC  0E0A               	movlw	10
 11468  0031AE  6E0F               	movwf	DelayMicro@wait,c
 11469  0031B0  EC54  F018         	call	_DelayMicro	;wreg free
 11470                           
 11471                           ;LT6804.c: 1145: LATD3 = 1;
 11472  0031B4  868C               	bsf	3980,3,c	;volatile
 11473  0031B6  0012               	return		;funcret
 11474  0031B8                     __end_of_wakeup_idle:
 11475                           	opt stack 0
 11476                           tblptru	equ	0xFF8
 11477                           tblptrh	equ	0xFF7
 11478                           tblptrl	equ	0xFF6
 11479                           tablat	equ	0xFF5
 11480                           prodh	equ	0xFF4
 11481                           prodl	equ	0xFF3
 11482                           intcon	equ	0xFF2
 11483                           intcon2	equ	0xFF1
 11484                           postinc0	equ	0xFEE
 11485                           wreg	equ	0xFE8
 11486                           postinc1	equ	0xFE6
 11487                           postdec1	equ	0xFE5
 11488                           fsr1h	equ	0xFE2
 11489                           fsr1l	equ	0xFE1
 11490                           indf2	equ	0xFDF
 11491                           postinc2	equ	0xFDE
 11492                           postdec2	equ	0xFDD
 11493                           fsr2h	equ	0xFDA
 11494                           fsr2l	equ	0xFD9
 11495                           status	equ	0xFD8
 11496                           
 11497 ;; *************** function _DelayMicro *****************
 11498 ;; Defined at:
 11499 ;;		line 17 in file "Functions.c"
 11500 ;; Parameters:    Size  Location     Type
 11501 ;;  wait            2   14[COMRAM] int 
 11502 ;; Auto vars:     Size  Location     Type
 11503 ;;  x               2   17[COMRAM] int 
 11504 ;; Return value:  Size  Location     Type
 11505 ;;		None               void
 11506 ;; Registers used:
 11507 ;;		wreg, status,2, status,0
 11508 ;; Tracked objects:
 11509 ;;		On entry : 0/0
 11510 ;;		On exit  : 0/0
 11511 ;;		Unchanged: 0/0
 11512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11513 ;;      Params:         2       0       0       0       0       0       0
 11514 ;;      Locals:         2       0       0       0       0       0       0
 11515 ;;      Temps:          1       0       0       0       0       0       0
 11516 ;;      Totals:         5       0       0       0       0       0       0
 11517 ;;Total ram usage:        5 bytes
 11518 ;; Hardware stack levels used:    1
 11519 ;; Hardware stack levels required when called:    3
 11520 ;; This function calls:
 11521 ;;		Nothing
 11522 ;; This function is called by:
 11523 ;;		_wakeup_idle
 11524 ;;		_wakeup_sleep
 11525 ;; This function uses a non-reentrant model
 11526 ;;
 11527                           
 11528                           	psect	text47
 11529  0030A8                     __ptext47:
 11530                           	opt stack 0
 11531  0030A8                     _DelayMicro:
 11532                           	opt stack 22
 11533                           
 11534                           ;Functions.c: 19: int x;
 11535                           ;Functions.c: 20: for(x = 0;x<wait;x++)
 11536                           
 11537                           ;incstack = 0
 11538  0030A8  0E00               	movlw	0
 11539  0030AA  6E13               	movwf	DelayMicro@x+1,c
 11540  0030AC  0E00               	movlw	0
 11541  0030AE  6E12               	movwf	DelayMicro@x,c
 11542  0030B0  D004               	goto	l6861
 11543  0030B2                     l320:
 11544                           
 11545                           ;Functions.c: 21: {
 11546                           ;Functions.c: 22: _delay((unsigned long)((1)*(16000000/4000000.0)));
 11547  0030B2  D000               	nop2		;2 cycle nop
 11548  0030B4  D000               	nop2		;2 cycle nop
 11549  0030B6  4A12               	infsnz	DelayMicro@x,f,c
 11550  0030B8  2A13               	incf	DelayMicro@x+1,f,c
 11551  0030BA                     l6861:
 11552  0030BA  500F               	movf	DelayMicro@wait,w,c
 11553  0030BC  5C12               	subwf	DelayMicro@x,w,c
 11554  0030BE  5013               	movf	DelayMicro@x+1,w,c
 11555  0030C0  0A80               	xorlw	128
 11556  0030C2  6E11               	movwf	??_DelayMicro& (0+255),c
 11557  0030C4  5010               	movf	DelayMicro@wait+1,w,c
 11558  0030C6  0A80               	xorlw	128
 11559  0030C8  5811               	subwfb	??_DelayMicro& (0+255),w,c
 11560  0030CA  B0D8               	btfsc	status,0,c
 11561  0030CC  0012               	return	
 11562  0030CE  D7F1               	goto	l320
 11563  0030D0                     __end_of_DelayMicro:
 11564                           	opt stack 0
 11565                           tblptru	equ	0xFF8
 11566                           tblptrh	equ	0xFF7
 11567                           tblptrl	equ	0xFF6
 11568                           tablat	equ	0xFF5
 11569                           prodh	equ	0xFF4
 11570                           prodl	equ	0xFF3
 11571                           intcon	equ	0xFF2
 11572                           intcon2	equ	0xFF1
 11573                           postinc0	equ	0xFEE
 11574                           wreg	equ	0xFE8
 11575                           postinc1	equ	0xFE6
 11576                           postdec1	equ	0xFE5
 11577                           fsr1h	equ	0xFE2
 11578                           fsr1l	equ	0xFE1
 11579                           indf2	equ	0xFDF
 11580                           postinc2	equ	0xFDE
 11581                           postdec2	equ	0xFDD
 11582                           fsr2h	equ	0xFDA
 11583                           fsr2l	equ	0xFD9
 11584                           status	equ	0xFD8
 11585                           
 11586 ;; *************** function _spi_write_read *****************
 11587 ;; Defined at:
 11588 ;;		line 1218 in file "LT6804.c"
 11589 ;; Parameters:    Size  Location     Type
 11590 ;;  tx_Data         2   16[COMRAM] PTR int 
 11591 ;;		 -> LTC6804_rdcfg@cmd(8), LTC6804_clrcell@cmd(8), LTC6804_rdStat_reg@cmd(8), LTC6804_rdaux_reg@cmd(8), 
 11592 ;;		 -> LTC6804_rdcv_reg@cmd(8), 
 11593 ;;  tx_len          2   18[COMRAM] int 
 11594 ;;  rx_data         2   20[COMRAM] PTR int 
 11595 ;;		 -> RAM(1535), LTC6804_rdStat@data(150), LTC6804_rdcv@cell_data(20), NULL(0), 
 11596 ;;  rx_len          2   22[COMRAM] int 
 11597 ;; Auto vars:     Size  Location     Type
 11598 ;;  i               2   26[COMRAM] int 
 11599 ;; Return value:  Size  Location     Type
 11600 ;;		None               void
 11601 ;; Registers used:
 11602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11603 ;; Tracked objects:
 11604 ;;		On entry : 0/0
 11605 ;;		On exit  : 0/0
 11606 ;;		Unchanged: 0/0
 11607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11608 ;;      Params:         8       0       0       0       0       0       0
 11609 ;;      Locals:         2       0       0       0       0       0       0
 11610 ;;      Temps:          2       0       0       0       0       0       0
 11611 ;;      Totals:        12       0       0       0       0       0       0
 11612 ;;Total ram usage:       12 bytes
 11613 ;; Hardware stack levels used:    1
 11614 ;; Hardware stack levels required when called:    4
 11615 ;; This function calls:
 11616 ;;		_SPI2_Exchange8bit
 11617 ;; This function is called by:
 11618 ;;		_LTC6804_rdcv_reg
 11619 ;;		_LTC6804_rdaux_reg
 11620 ;;		_LTC6804_rdStat_reg
 11621 ;;		_LTC6804_clrcell
 11622 ;;		_LTC6804_rdcfg
 11623 ;; This function uses a non-reentrant model
 11624 ;;
 11625                           
 11626                           	psect	text48
 11627  0029C2                     __ptext48:
 11628                           	opt stack 0
 11629  0029C2                     _spi_write_read:
 11630                           	opt stack 22
 11631                           
 11632                           ;LT6804.c: 1225: for(i = 0; i < tx_len; i++)
 11633                           
 11634                           ;incstack = 0
 11635  0029C2  0E00               	movlw	0
 11636  0029C4  6E45               	movwf	_i+1,c
 11637  0029C6  0E00               	movlw	0
 11638  0029C8  6E44               	movwf	_i,c
 11639  0029CA  D00E               	goto	l6897
 11640  0029CC                     l6893:
 11641                           
 11642                           ;LT6804.c: 1226: {
 11643                           ;LT6804.c: 1227: SPI2_Exchange8bit(tx_Data[i]);
 11644  0029CC  90D8               	bcf	status,0,c
 11645  0029CE  3444               	rlcf	_i,w,c
 11646  0029D0  6ED9               	movwf	fsr2l,c
 11647  0029D2  3445               	rlcf	_i+1,w,c
 11648  0029D4  6EDA               	movwf	fsr2h,c
 11649  0029D6  5011               	movf	spi_write_read@tx_Data,w,c
 11650  0029D8  26D9               	addwf	fsr2l,f,c
 11651  0029DA  5012               	movf	spi_write_read@tx_Data+1,w,c
 11652  0029DC  22DA               	addwfc	fsr2h,f,c
 11653  0029DE  50DF               	movf	indf2,w,c
 11654  0029E0  ECAE  F018         	call	_SPI2_Exchange8bit
 11655  0029E4  4A44               	infsnz	_i,f,c
 11656  0029E6  2A45               	incf	_i+1,f,c
 11657  0029E8                     l6897:
 11658  0029E8  5013               	movf	spi_write_read@tx_len,w,c
 11659  0029EA  5C44               	subwf	_i,w,c
 11660  0029EC  5045               	movf	_i+1,w,c
 11661  0029EE  0A80               	xorlw	128
 11662  0029F0  6E19               	movwf	??_spi_write_read& (0+255),c
 11663  0029F2  5014               	movf	spi_write_read@tx_len+1,w,c
 11664  0029F4  0A80               	xorlw	128
 11665  0029F6  5819               	subwfb	??_spi_write_read& (0+255),w,c
 11666  0029F8  A0D8               	btfss	status,0,c
 11667  0029FA  D7E8               	goto	l6893
 11668                           
 11669                           ;LT6804.c: 1228: }
 11670                           ;LT6804.c: 1230: for(int i = 0; i < rx_len; i++)
 11671  0029FC  0E00               	movlw	0
 11672  0029FE  6E1C               	movwf	spi_write_read@i+1,c
 11673  002A00  0E00               	movlw	0
 11674  002A02  6E1B               	movwf	spi_write_read@i,c
 11675  002A04  D014               	goto	l6905
 11676  002A06                     l6901:
 11677                           
 11678                           ;LT6804.c: 1231: {
 11679                           ;LT6804.c: 1232: rx_data[i] = SPI2_Exchange8bit(0x00);
 11680  002A06  0E00               	movlw	0
 11681  002A08  ECAE  F018         	call	_SPI2_Exchange8bit
 11682  002A0C  6E19               	movwf	??_spi_write_read& (0+255),c
 11683  002A0E  6A1A               	clrf	(??_spi_write_read+1)& (0+255),c
 11684  002A10  90D8               	bcf	status,0,c
 11685  002A12  341B               	rlcf	spi_write_read@i,w,c
 11686  002A14  6ED9               	movwf	fsr2l,c
 11687  002A16  341C               	rlcf	spi_write_read@i+1,w,c
 11688  002A18  6EDA               	movwf	fsr2h,c
 11689  002A1A  5015               	movf	spi_write_read@rx_data,w,c
 11690  002A1C  26D9               	addwf	fsr2l,f,c
 11691  002A1E  5016               	movf	spi_write_read@rx_data+1,w,c
 11692  002A20  22DA               	addwfc	fsr2h,f,c
 11693  002A22  C019  FFDE         	movff	??_spi_write_read,postinc2
 11694  002A26  C01A  FFDD         	movff	??_spi_write_read+1,postdec2
 11695  002A2A  4A1B               	infsnz	spi_write_read@i,f,c
 11696  002A2C  2A1C               	incf	spi_write_read@i+1,f,c
 11697  002A2E                     l6905:
 11698  002A2E  5017               	movf	spi_write_read@rx_len,w,c
 11699  002A30  5C1B               	subwf	spi_write_read@i,w,c
 11700  002A32  501C               	movf	spi_write_read@i+1,w,c
 11701  002A34  0A80               	xorlw	128
 11702  002A36  6E19               	movwf	??_spi_write_read& (0+255),c
 11703  002A38  5018               	movf	spi_write_read@rx_len+1,w,c
 11704  002A3A  0A80               	xorlw	128
 11705  002A3C  5819               	subwfb	??_spi_write_read& (0+255),w,c
 11706  002A3E  B0D8               	btfsc	status,0,c
 11707  002A40  0012               	return	
 11708  002A42  D7E1               	goto	l6901
 11709  002A44                     __end_of_spi_write_read:
 11710                           	opt stack 0
 11711                           tblptru	equ	0xFF8
 11712                           tblptrh	equ	0xFF7
 11713                           tblptrl	equ	0xFF6
 11714                           tablat	equ	0xFF5
 11715                           prodh	equ	0xFF4
 11716                           prodl	equ	0xFF3
 11717                           intcon	equ	0xFF2
 11718                           intcon2	equ	0xFF1
 11719                           postinc0	equ	0xFEE
 11720                           wreg	equ	0xFE8
 11721                           postinc1	equ	0xFE6
 11722                           postdec1	equ	0xFE5
 11723                           fsr1h	equ	0xFE2
 11724                           fsr1l	equ	0xFE1
 11725                           indf2	equ	0xFDF
 11726                           postinc2	equ	0xFDE
 11727                           postdec2	equ	0xFDD
 11728                           fsr2h	equ	0xFDA
 11729                           fsr2l	equ	0xFD9
 11730                           status	equ	0xFD8
 11731                           
 11732 ;; *************** function _LTC6804_adcv *****************
 11733 ;; Defined at:
 11734 ;;		line 177 in file "LT6804.c"
 11735 ;; Parameters:    Size  Location     Type
 11736 ;;		None
 11737 ;; Auto vars:     Size  Location     Type
 11738 ;;  cmd             8   49[COMRAM] int [4]
 11739 ;;  temp_pec        2   57[COMRAM] int 
 11740 ;; Return value:  Size  Location     Type
 11741 ;;		None               void
 11742 ;; Registers used:
 11743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11744 ;; Tracked objects:
 11745 ;;		On entry : 0/0
 11746 ;;		On exit  : 0/0
 11747 ;;		Unchanged: 0/0
 11748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11749 ;;      Params:         0       0       0       0       0       0       0
 11750 ;;      Locals:        10       0       0       0       0       0       0
 11751 ;;      Temps:          2       0       0       0       0       0       0
 11752 ;;      Totals:        12       0       0       0       0       0       0
 11753 ;;Total ram usage:       12 bytes
 11754 ;; Hardware stack levels used:    1
 11755 ;; Hardware stack levels required when called:    5
 11756 ;; This function calls:
 11757 ;;		_SPI2_Exchange8bit
 11758 ;;		_pec15_calc
 11759 ;;		_spi_write_array
 11760 ;; This function is called by:
 11761 ;;		_Read_Battery
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           
 11765                           	psect	text49
 11766  002C22                     __ptext49:
 11767                           	opt stack 0
 11768  002C22                     _LTC6804_adcv:
 11769                           	opt stack 23
 11770                           
 11771                           ;LT6804.c: 180: int cmd[4];
 11772                           ;LT6804.c: 181: int temp_pec;
 11773                           ;LT6804.c: 184: cmd[0] = ADCV[0];
 11774                           
 11775                           ;incstack = 0
 11776  002C22  C0B1  F032         	movff	_ADCV,LTC6804_adcv@cmd
 11777  002C26  C0B2  F033         	movff	_ADCV+1,LTC6804_adcv@cmd+1
 11778                           
 11779                           ;LT6804.c: 185: cmd[1] = ADCV[1];
 11780  002C2A  C0B3  F034         	movff	_ADCV+2,LTC6804_adcv@cmd+2
 11781  002C2E  C0B4  F035         	movff	_ADCV+3,LTC6804_adcv@cmd+3
 11782                           
 11783                           ;LT6804.c: 188: temp_pec = pec15_calc(2, ADCV);
 11784  002C32  0E00               	movlw	0
 11785  002C34  6E24               	movwf	pec15_calc@len+1,c
 11786  002C36  0E02               	movlw	2
 11787  002C38  6E23               	movwf	pec15_calc@len,c
 11788  002C3A  0EB1               	movlw	low _ADCV
 11789  002C3C  6E25               	movwf	pec15_calc@data,c
 11790  002C3E  0E00               	movlw	high _ADCV
 11791  002C40  6E26               	movwf	pec15_calc@data+1,c
 11792  002C42  EC80  F013         	call	_pec15_calc	;wreg free
 11793  002C46  C023  F03A         	movff	?_pec15_calc,LTC6804_adcv@temp_pec
 11794  002C4A  C024  F03B         	movff	?_pec15_calc+1,LTC6804_adcv@temp_pec+1
 11795                           
 11796                           ;LT6804.c: 189: cmd[2] = (int)(temp_pec >> 8);
 11797  002C4E  C03B  F030         	movff	LTC6804_adcv@temp_pec+1,??_LTC6804_adcv
 11798  002C52  6A31               	clrf	(??_LTC6804_adcv+1)& (0+255),c
 11799  002C54  BE30               	btfsc	??_LTC6804_adcv& (0+255),7,c
 11800  002C56  6831               	setf	(??_LTC6804_adcv+1)& (0+255),c
 11801  002C58  C030  F036         	movff	??_LTC6804_adcv,LTC6804_adcv@cmd+4
 11802  002C5C  C031  F037         	movff	??_LTC6804_adcv+1,LTC6804_adcv@cmd+5
 11803                           
 11804                           ;LT6804.c: 190: cmd[3] = (int)(temp_pec);
 11805  002C60  C03A  F038         	movff	LTC6804_adcv@temp_pec,LTC6804_adcv@cmd+6
 11806  002C64  C03B  F039         	movff	LTC6804_adcv@temp_pec+1,LTC6804_adcv@cmd+7
 11807                           
 11808                           ;LT6804.c: 193: LATD3 = 0;
 11809  002C68  968C               	bcf	3980,3,c	;volatile
 11810                           
 11811                           ;LT6804.c: 194: SPI2_Exchange8bit(0);
 11812  002C6A  0E00               	movlw	0
 11813  002C6C  ECAE  F018         	call	_SPI2_Exchange8bit
 11814                           
 11815                           ;LT6804.c: 195: LATD3 = 1;
 11816  002C70  868C               	bsf	3980,3,c	;volatile
 11817                           
 11818                           ;LT6804.c: 199: LATD3 = 0;
 11819  002C72  968C               	bcf	3980,3,c	;volatile
 11820                           
 11821                           ;LT6804.c: 200: spi_write_array(4,cmd);
 11822  002C74  0E00               	movlw	0
 11823  002C76  6E12               	movwf	spi_write_array@len+1,c
 11824  002C78  0E04               	movlw	4
 11825  002C7A  6E11               	movwf	spi_write_array@len,c
 11826  002C7C  0E32               	movlw	low LTC6804_adcv@cmd
 11827  002C7E  6E13               	movwf	spi_write_array@data,c
 11828  002C80  0E00               	movlw	high LTC6804_adcv@cmd
 11829  002C82  6E14               	movwf	spi_write_array@data+1,c
 11830  002C84  EC9E  F017         	call	_spi_write_array	;wreg free
 11831                           
 11832                           ;LT6804.c: 201: LATD3 = 1;
 11833  002C88  868C               	bsf	3980,3,c	;volatile
 11834  002C8A  0012               	return		;funcret
 11835  002C8C                     __end_of_LTC6804_adcv:
 11836                           	opt stack 0
 11837                           tblptru	equ	0xFF8
 11838                           tblptrh	equ	0xFF7
 11839                           tblptrl	equ	0xFF6
 11840                           tablat	equ	0xFF5
 11841                           prodh	equ	0xFF4
 11842                           prodl	equ	0xFF3
 11843                           intcon	equ	0xFF2
 11844                           intcon2	equ	0xFF1
 11845                           postinc0	equ	0xFEE
 11846                           wreg	equ	0xFE8
 11847                           postinc1	equ	0xFE6
 11848                           postdec1	equ	0xFE5
 11849                           fsr1h	equ	0xFE2
 11850                           fsr1l	equ	0xFE1
 11851                           indf2	equ	0xFDF
 11852                           postinc2	equ	0xFDE
 11853                           postdec2	equ	0xFDD
 11854                           fsr2h	equ	0xFDA
 11855                           fsr2l	equ	0xFD9
 11856                           status	equ	0xFD8
 11857                           
 11858 ;; *************** function _spi_write_array *****************
 11859 ;; Defined at:
 11860 ;;		line 1199 in file "LT6804.c"
 11861 ;; Parameters:    Size  Location     Type
 11862 ;;  len             2   16[COMRAM] int 
 11863 ;;  data            2   18[COMRAM] PTR int 
 11864 ;;		 -> LTC6804_wrcfg@cmd(200), LTC6804_ADSTAT@cmd(8), LTC6804_adax@cmd(8), LTC6804_adcv@cmd(8), 
 11865 ;; Auto vars:     Size  Location     Type
 11866 ;;		None
 11867 ;; Return value:  Size  Location     Type
 11868 ;;		None               void
 11869 ;; Registers used:
 11870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11871 ;; Tracked objects:
 11872 ;;		On entry : 0/0
 11873 ;;		On exit  : 0/0
 11874 ;;		Unchanged: 0/0
 11875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11876 ;;      Params:         4       0       0       0       0       0       0
 11877 ;;      Locals:         0       0       0       0       0       0       0
 11878 ;;      Temps:          1       0       0       0       0       0       0
 11879 ;;      Totals:         5       0       0       0       0       0       0
 11880 ;;Total ram usage:        5 bytes
 11881 ;; Hardware stack levels used:    1
 11882 ;; Hardware stack levels required when called:    4
 11883 ;; This function calls:
 11884 ;;		_SPI2_Exchange8bit
 11885 ;; This function is called by:
 11886 ;;		_LTC6804_adcv
 11887 ;;		_LTC6804_wrcfg
 11888 ;;		_LTC6804_adax
 11889 ;;		_LTC6804_ADSTAT
 11890 ;; This function uses a non-reentrant model
 11891 ;;
 11892                           
 11893                           	psect	text50
 11894  002F3C                     __ptext50:
 11895                           	opt stack 0
 11896  002F3C                     _spi_write_array:
 11897                           	opt stack 22
 11898                           
 11899                           ;LT6804.c: 1203: for(i = 0; i < len; i++)
 11900                           
 11901                           ;incstack = 0
 11902  002F3C  0E00               	movlw	0
 11903  002F3E  6E45               	movwf	_i+1,c
 11904  002F40  0E00               	movlw	0
 11905  002F42  6E44               	movwf	_i,c
 11906  002F44  D00E               	goto	l6883
 11907  002F46                     l6879:
 11908                           
 11909                           ;LT6804.c: 1204: {
 11910                           ;LT6804.c: 1205: SPI2_Exchange8bit((char)data[i]);
 11911  002F46  90D8               	bcf	status,0,c
 11912  002F48  3444               	rlcf	_i,w,c
 11913  002F4A  6ED9               	movwf	fsr2l,c
 11914  002F4C  3445               	rlcf	_i+1,w,c
 11915  002F4E  6EDA               	movwf	fsr2h,c
 11916  002F50  5013               	movf	spi_write_array@data,w,c
 11917  002F52  26D9               	addwf	fsr2l,f,c
 11918  002F54  5014               	movf	spi_write_array@data+1,w,c
 11919  002F56  22DA               	addwfc	fsr2h,f,c
 11920  002F58  50DF               	movf	indf2,w,c
 11921  002F5A  ECAE  F018         	call	_SPI2_Exchange8bit
 11922  002F5E  4A44               	infsnz	_i,f,c
 11923  002F60  2A45               	incf	_i+1,f,c
 11924  002F62                     l6883:
 11925  002F62  5011               	movf	spi_write_array@len,w,c
 11926  002F64  5C44               	subwf	_i,w,c
 11927  002F66  5045               	movf	_i+1,w,c
 11928  002F68  0A80               	xorlw	128
 11929  002F6A  6E15               	movwf	??_spi_write_array& (0+255),c
 11930  002F6C  5012               	movf	spi_write_array@len+1,w,c
 11931  002F6E  0A80               	xorlw	128
 11932  002F70  5815               	subwfb	??_spi_write_array& (0+255),w,c
 11933  002F72  B0D8               	btfsc	status,0,c
 11934  002F74  0012               	return	
 11935  002F76  D7E7               	goto	l6879
 11936  002F78                     __end_of_spi_write_array:
 11937                           	opt stack 0
 11938                           tblptru	equ	0xFF8
 11939                           tblptrh	equ	0xFF7
 11940                           tblptrl	equ	0xFF6
 11941                           tablat	equ	0xFF5
 11942                           prodh	equ	0xFF4
 11943                           prodl	equ	0xFF3
 11944                           intcon	equ	0xFF2
 11945                           intcon2	equ	0xFF1
 11946                           postinc0	equ	0xFEE
 11947                           wreg	equ	0xFE8
 11948                           postinc1	equ	0xFE6
 11949                           postdec1	equ	0xFE5
 11950                           fsr1h	equ	0xFE2
 11951                           fsr1l	equ	0xFE1
 11952                           indf2	equ	0xFDF
 11953                           postinc2	equ	0xFDE
 11954                           postdec2	equ	0xFDD
 11955                           fsr2h	equ	0xFDA
 11956                           fsr2l	equ	0xFD9
 11957                           status	equ	0xFD8
 11958                           
 11959 ;; *************** function _SPI2_Exchange8bit *****************
 11960 ;; Defined at:
 11961 ;;		line 78 in file "mcc_generated_files/spi2.c"
 11962 ;; Parameters:    Size  Location     Type
 11963 ;;  stuff           1    wreg     unsigned char 
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;  stuff           1   14[COMRAM] unsigned char 
 11966 ;;  data            1   15[COMRAM] unsigned char 
 11967 ;; Return value:  Size  Location     Type
 11968 ;;                  1    wreg      unsigned char 
 11969 ;; Registers used:
 11970 ;;		wreg, status,2
 11971 ;; Tracked objects:
 11972 ;;		On entry : 0/0
 11973 ;;		On exit  : 0/0
 11974 ;;		Unchanged: 0/0
 11975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11976 ;;      Params:         0       0       0       0       0       0       0
 11977 ;;      Locals:         2       0       0       0       0       0       0
 11978 ;;      Temps:          0       0       0       0       0       0       0
 11979 ;;      Totals:         2       0       0       0       0       0       0
 11980 ;;Total ram usage:        2 bytes
 11981 ;; Hardware stack levels used:    1
 11982 ;; Hardware stack levels required when called:    3
 11983 ;; This function calls:
 11984 ;;		Nothing
 11985 ;; This function is called by:
 11986 ;;		_LTC6804_adcv
 11987 ;;		_LTC6804_rdcv
 11988 ;;		_spi_write_array
 11989 ;;		_spi_write_read
 11990 ;;		_SPI2_Exchange8bitBuffer
 11991 ;; This function uses a non-reentrant model
 11992 ;;
 11993                           
 11994                           	psect	text51
 11995  00315C                     __ptext51:
 11996                           	opt stack 0
 11997  00315C                     _SPI2_Exchange8bit:
 11998                           	opt stack 22
 11999                           
 12000                           ;incstack = 0
 12001                           ;SPI2_Exchange8bit@stuff stored from wreg
 12002  00315C  6E0F               	movwf	SPI2_Exchange8bit@stuff,c
 12003                           
 12004                           ;spi2.c: 80: char data = 0;
 12005  00315E  0E00               	movlw	0
 12006  003160  6E10               	movwf	SPI2_Exchange8bit@data,c
 12007                           
 12008                           ;spi2.c: 82: data = SSP2BUF;
 12009  003162  CF6F F010          	movff	3951,SPI2_Exchange8bit@data	;volatile
 12010                           
 12011                           ;spi2.c: 83: PIR1bits.SSP1IF =0;
 12012  003166  969E               	bcf	3998,3,c	;volatile
 12013                           
 12014                           ;spi2.c: 86: SSP2BUF = stuff;
 12015  003168  C00F  FF6F         	movff	SPI2_Exchange8bit@stuff,3951	;volatile
 12016  00316C                     l20:
 12017  00316C  A06D               	btfss	3949,0,c	;volatile
 12018  00316E  D7FE               	goto	l20
 12019                           
 12020                           ;spi2.c: 89: data = SSP2BUF;
 12021  003170  CF6F F010          	movff	3951,SPI2_Exchange8bit@data	;volatile
 12022                           
 12023                           ;spi2.c: 90: return (data);
 12024  003174  5010               	movf	SPI2_Exchange8bit@data,w,c
 12025  003176  0012               	return		;funcret
 12026  003178                     __end_of_SPI2_Exchange8bit:
 12027                           	opt stack 0
 12028                           tblptru	equ	0xFF8
 12029                           tblptrh	equ	0xFF7
 12030                           tblptrl	equ	0xFF6
 12031                           tablat	equ	0xFF5
 12032                           prodh	equ	0xFF4
 12033                           prodl	equ	0xFF3
 12034                           intcon	equ	0xFF2
 12035                           intcon2	equ	0xFF1
 12036                           postinc0	equ	0xFEE
 12037                           wreg	equ	0xFE8
 12038                           postinc1	equ	0xFE6
 12039                           postdec1	equ	0xFE5
 12040                           fsr1h	equ	0xFE2
 12041                           fsr1l	equ	0xFE1
 12042                           indf2	equ	0xFDF
 12043                           postinc2	equ	0xFDE
 12044                           postdec2	equ	0xFDD
 12045                           fsr2h	equ	0xFDA
 12046                           fsr2l	equ	0xFD9
 12047                           status	equ	0xFD8
 12048                           
 12049 ;; *************** function _pec15_calc *****************
 12050 ;; Defined at:
 12051 ;;		line 1178 in file "LT6804.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;  len             2   34[COMRAM] int 
 12054 ;;  data            2   36[COMRAM] PTR int 
 12055 ;;		 -> RAM(1535), LTC6804_rdcfg@cmd(8), LTC6804_wrcfg@cmd(200), LTC6804_clraux@cmd(8), 
 12056 ;;		 -> LTC6804_clrcell@cmd(8), LTC6804_rdStat_reg@cmd(8), LTC6804_rdStat@data(150), LTC6804_rdaux_reg@cmd(8), 
 12057 ;;		 -> LTC6804_rdcv_reg@cmd(8), LTC6804_rdcv@cell_data(20), ADSTAT(4), ADAX(4), 
 12058 ;;		 -> ADCV(4), LTC6804_DATA_ConfigBank(12), 
 12059 ;; Auto vars:     Size  Location     Type
 12060 ;;  remainder       2   45[COMRAM] int 
 12061 ;;  addr            2   43[COMRAM] int 
 12062 ;; Return value:  Size  Location     Type
 12063 ;;                  2   34[COMRAM] int 
 12064 ;; Registers used:
 12065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12066 ;; Tracked objects:
 12067 ;;		On entry : 0/0
 12068 ;;		On exit  : 0/0
 12069 ;;		Unchanged: 0/0
 12070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12071 ;;      Params:         4       0       0       0       0       0       0
 12072 ;;      Locals:         4       0       0       0       0       0       0
 12073 ;;      Temps:          5       0       0       0       0       0       0
 12074 ;;      Totals:        13       0       0       0       0       0       0
 12075 ;;Total ram usage:       13 bytes
 12076 ;; Hardware stack levels used:    1
 12077 ;; Hardware stack levels required when called:    3
 12078 ;; This function calls:
 12079 ;;		Nothing
 12080 ;; This function is called by:
 12081 ;;		_LTC6804_adcv
 12082 ;;		_LTC6804_rdcv
 12083 ;;		_LTC6804_rdcv_reg
 12084 ;;		_LTC6804_wrcfg
 12085 ;;		_LTC6804_adax
 12086 ;;		_LTC6804_ADSTAT
 12087 ;;		_LTC6804_rdaux
 12088 ;;		_LTC6804_rdaux_reg
 12089 ;;		_LTC6804_rdStat
 12090 ;;		_LTC6804_rdStat_reg
 12091 ;;		_LTC6804_clrcell
 12092 ;;		_LTC6804_clraux
 12093 ;;		_LTC6804_rdcfg
 12094 ;; This function uses a non-reentrant model
 12095 ;;
 12096                           
 12097                           	psect	text52
 12098  002700                     __ptext52:
 12099                           	opt stack 0
 12100  002700                     _pec15_calc:
 12101                           	opt stack 23
 12102                           
 12103                           ;LT6804.c: 1180: int remainder,addr;
 12104                           ;LT6804.c: 1182: remainder = 16;
 12105                           
 12106                           ;incstack = 0
 12107  002700  0E00               	movlw	0
 12108  002702  6E2F               	movwf	pec15_calc@remainder+1,c
 12109  002704  0E10               	movlw	16
 12110  002706  6E2E               	movwf	pec15_calc@remainder,c
 12111                           
 12112                           ;LT6804.c: 1183: for(i = 0; i<len;i++)
 12113  002708  0E00               	movlw	0
 12114  00270A  6E45               	movwf	_i+1,c
 12115  00270C  0E00               	movlw	0
 12116  00270E  6E44               	movwf	_i,c
 12117  002710  D039               	goto	l6871
 12118  002712                     l6865:
 12119                           
 12120                           ;LT6804.c: 1184: {
 12121                           ;LT6804.c: 1185: addr = ((remainder>>7)^data[i])&0xff;
 12122  002712  90D8               	bcf	status,0,c
 12123  002714  3444               	rlcf	_i,w,c
 12124  002716  6ED9               	movwf	fsr2l,c
 12125  002718  3445               	rlcf	_i+1,w,c
 12126  00271A  6EDA               	movwf	fsr2h,c
 12127  00271C  5025               	movf	pec15_calc@data,w,c
 12128  00271E  26D9               	addwf	fsr2l,f,c
 12129  002720  5026               	movf	pec15_calc@data+1,w,c
 12130  002722  22DA               	addwfc	fsr2h,f,c
 12131  002724  CFDE F027          	movff	postinc2,??_pec15_calc
 12132  002728  CFDD F028          	movff	postdec2,??_pec15_calc+1
 12133  00272C  C02E  F029         	movff	pec15_calc@remainder,??_pec15_calc+2
 12134  002730  C02F  F02A         	movff	pec15_calc@remainder+1,??_pec15_calc+3
 12135  002734  0E07               	movlw	7
 12136  002736  6E2B               	movwf	(??_pec15_calc+4)& (0+255),c
 12137  002738                     u6705:
 12138  002738  342A               	rlcf	??_pec15_calc+3,w,c
 12139  00273A  322A               	rrcf	??_pec15_calc+3,f,c
 12140  00273C  3229               	rrcf	??_pec15_calc+2,f,c
 12141  00273E  2E2B               	decfsz	(??_pec15_calc+4)& (0+255),f,c
 12142  002740  D7FB               	goto	u6705
 12143  002742  5027               	movf	??_pec15_calc,w,c
 12144  002744  1A29               	xorwf	??_pec15_calc+2,f,c
 12145  002746  5028               	movf	??_pec15_calc+1,w,c
 12146  002748  1A2A               	xorwf	??_pec15_calc+3,f,c
 12147  00274A  5029               	movf	??_pec15_calc+2,w,c
 12148  00274C  6E2C               	movwf	pec15_calc@addr,c
 12149  00274E  6A2D               	clrf	pec15_calc@addr+1,c
 12150                           
 12151                           ;LT6804.c: 1186: remainder = (remainder<<8)^crc15Table[addr];
 12152  002750  90D8               	bcf	status,0,c
 12153  002752  342C               	rlcf	pec15_calc@addr,w,c
 12154  002754  6EF6               	movwf	tblptrl,c
 12155  002756  342D               	rlcf	pec15_calc@addr+1,w,c
 12156  002758  6EF7               	movwf	tblptrh,c
 12157  00275A  0E31               	movlw	low LT6804@crc15Table
 12158  00275C  26F6               	addwf	tblptrl,f,c
 12159  00275E  0E7B               	movlw	high LT6804@crc15Table
 12160  002760  22F7               	addwfc	tblptrh,f,c
 12161  002762                     	if	0	;There are less than 3 active tblptr bytes
 12162  002762                     	endif
 12163  002762  0009               	tblrd		*+
 12164  002764  CFF5 F027          	movff	tablat,??_pec15_calc
 12165  002768  0009               	tblrd		*+
 12166  00276A  CFF5 F028          	movff	tablat,??_pec15_calc+1
 12167  00276E  502E               	movf	pec15_calc@remainder,w,c
 12168  002770  6E2A               	movwf	(??_pec15_calc+3)& (0+255),c
 12169  002772  6A29               	clrf	(??_pec15_calc+2)& (0+255),c
 12170  002774  5027               	movf	??_pec15_calc,w,c
 12171  002776  1829               	xorwf	??_pec15_calc+2,w,c
 12172  002778  6E2E               	movwf	pec15_calc@remainder,c
 12173  00277A  5028               	movf	??_pec15_calc+1,w,c
 12174  00277C  182A               	xorwf	??_pec15_calc+3,w,c
 12175  00277E  6E2F               	movwf	pec15_calc@remainder+1,c
 12176  002780  4A44               	infsnz	_i,f,c
 12177  002782  2A45               	incf	_i+1,f,c
 12178  002784                     l6871:
 12179  002784  5023               	movf	pec15_calc@len,w,c
 12180  002786  5C44               	subwf	_i,w,c
 12181  002788  5045               	movf	_i+1,w,c
 12182  00278A  0A80               	xorlw	128
 12183  00278C  6E27               	movwf	??_pec15_calc& (0+255),c
 12184  00278E  5024               	movf	pec15_calc@len+1,w,c
 12185  002790  0A80               	xorlw	128
 12186  002792  5827               	subwfb	??_pec15_calc& (0+255),w,c
 12187  002794  A0D8               	btfss	status,0,c
 12188  002796  D7BD               	goto	l6865
 12189                           
 12190                           ;LT6804.c: 1187: }
 12191                           ;LT6804.c: 1188: return(remainder*2);
 12192  002798  90D8               	bcf	status,0,c
 12193  00279A  342E               	rlcf	pec15_calc@remainder,w,c
 12194  00279C  6E23               	movwf	?_pec15_calc,c
 12195  00279E  342F               	rlcf	pec15_calc@remainder+1,w,c
 12196  0027A0  6E24               	movwf	?_pec15_calc+1,c
 12197  0027A2  0012               	return	
 12198  0027A4                     __end_of_pec15_calc:
 12199                           	opt stack 0
 12200                           tblptru	equ	0xFF8
 12201                           tblptrh	equ	0xFF7
 12202                           tblptrl	equ	0xFF6
 12203                           tablat	equ	0xFF5
 12204                           prodh	equ	0xFF4
 12205                           prodl	equ	0xFF3
 12206                           intcon	equ	0xFF2
 12207                           intcon2	equ	0xFF1
 12208                           postinc0	equ	0xFEE
 12209                           wreg	equ	0xFE8
 12210                           postinc1	equ	0xFE6
 12211                           postdec1	equ	0xFE5
 12212                           fsr1h	equ	0xFE2
 12213                           fsr1l	equ	0xFE1
 12214                           indf2	equ	0xFDF
 12215                           postinc2	equ	0xFDE
 12216                           postdec2	equ	0xFDD
 12217                           fsr2h	equ	0xFDA
 12218                           fsr2l	equ	0xFD9
 12219                           status	equ	0xFD8
 12220                           
 12221 ;; *************** function _Delay *****************
 12222 ;; Defined at:
 12223 ;;		line 9 in file "Functions.c"
 12224 ;; Parameters:    Size  Location     Type
 12225 ;;  wait            2   14[COMRAM] int 
 12226 ;; Auto vars:     Size  Location     Type
 12227 ;;  x               2   17[COMRAM] int 
 12228 ;; Return value:  Size  Location     Type
 12229 ;;		None               void
 12230 ;; Registers used:
 12231 ;;		wreg, status,2, status,0
 12232 ;; Tracked objects:
 12233 ;;		On entry : 0/0
 12234 ;;		On exit  : 0/0
 12235 ;;		Unchanged: 0/0
 12236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12237 ;;      Params:         2       0       0       0       0       0       0
 12238 ;;      Locals:         2       0       0       0       0       0       0
 12239 ;;      Temps:          1       0       0       0       0       0       0
 12240 ;;      Totals:         5       0       0       0       0       0       0
 12241 ;;Total ram usage:        5 bytes
 12242 ;; Hardware stack levels used:    1
 12243 ;; Hardware stack levels required when called:    3
 12244 ;; This function calls:
 12245 ;;		Nothing
 12246 ;; This function is called by:
 12247 ;;		_main
 12248 ;;		_Read_Battery
 12249 ;;		_addressFault
 12250 ;; This function uses a non-reentrant model
 12251 ;;
 12252                           
 12253                           	psect	text53
 12254  002FE8                     __ptext53:
 12255                           	opt stack 0
 12256  002FE8                     _Delay:
 12257                           	opt stack 25
 12258                           
 12259                           ;Functions.c: 11: int x;
 12260                           ;Functions.c: 12: for(x = 0;x<wait;x++)
 12261                           
 12262                           ;incstack = 0
 12263  002FE8  0E00               	movlw	0
 12264  002FEA  6E13               	movwf	Delay@x+1,c
 12265  002FEC  0E00               	movlw	0
 12266  002FEE  6E12               	movwf	Delay@x,c
 12267  002FF0  D00A               	goto	l313
 12268  002FF2                     l7263:
 12269                           
 12270                           ;Functions.c: 13: {
 12271                           ;Functions.c: 14: _delay((unsigned long)((1)*(16000000/4000.0)));
 12272  002FF2  0E06               	movlw	6
 12273  002FF4  6E11               	movwf	??_Delay& (0+255),c
 12274  002FF6  0E30               	movlw	48
 12275  002FF8                     u9837:
 12276  002FF8  2EE8               	decfsz	wreg,f,c
 12277  002FFA  D7FE               	goto	u9837
 12278  002FFC  2E11               	decfsz	??_Delay& (0+255),f,c
 12279  002FFE  D7FC               	goto	u9837
 12280  003000  D000               	nop2	
 12281  003002  4A12               	infsnz	Delay@x,f,c
 12282  003004  2A13               	incf	Delay@x+1,f,c
 12283  003006                     l313:
 12284  003006  500F               	movf	Delay@wait,w,c
 12285  003008  5C12               	subwf	Delay@x,w,c
 12286  00300A  5013               	movf	Delay@x+1,w,c
 12287  00300C  0A80               	xorlw	128
 12288  00300E  6E11               	movwf	??_Delay& (0+255),c
 12289  003010  5010               	movf	Delay@wait+1,w,c
 12290  003012  0A80               	xorlw	128
 12291  003014  5811               	subwfb	??_Delay& (0+255),w,c
 12292  003016  B0D8               	btfsc	status,0,c
 12293  003018  0012               	return	
 12294  00301A  D7EB               	goto	l7263
 12295  00301C                     __end_of_Delay:
 12296                           	opt stack 0
 12297                           tblptru	equ	0xFF8
 12298                           tblptrh	equ	0xFF7
 12299                           tblptrl	equ	0xFF6
 12300                           tablat	equ	0xFF5
 12301                           prodh	equ	0xFF4
 12302                           prodl	equ	0xFF3
 12303                           intcon	equ	0xFF2
 12304                           intcon2	equ	0xFF1
 12305                           postinc0	equ	0xFEE
 12306                           wreg	equ	0xFE8
 12307                           postinc1	equ	0xFE6
 12308                           postdec1	equ	0xFE5
 12309                           fsr1h	equ	0xFE2
 12310                           fsr1l	equ	0xFE1
 12311                           indf2	equ	0xFDF
 12312                           postinc2	equ	0xFDE
 12313                           postdec2	equ	0xFDD
 12314                           fsr2h	equ	0xFDA
 12315                           fsr2l	equ	0xFD9
 12316                           status	equ	0xFD8
 12317                           
 12318 ;; *************** function _INTERRUPT_InterruptManager *****************
 12319 ;; Defined at:
 12320 ;;		line 69 in file "mcc_generated_files/interrupt_manager.c"
 12321 ;; Parameters:    Size  Location     Type
 12322 ;;		None
 12323 ;; Auto vars:     Size  Location     Type
 12324 ;;		None
 12325 ;; Return value:  Size  Location     Type
 12326 ;;		None               void
 12327 ;; Registers used:
 12328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12329 ;; Tracked objects:
 12330 ;;		On entry : 0/0
 12331 ;;		On exit  : 0/0
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12334 ;;      Params:         0       0       0       0       0       0       0
 12335 ;;      Locals:         0       0       0       0       0       0       0
 12336 ;;      Temps:         14       0       0       0       0       0       0
 12337 ;;      Totals:        14       0       0       0       0       0       0
 12338 ;;Total ram usage:       14 bytes
 12339 ;; Hardware stack levels used:    1
 12340 ;; Hardware stack levels required when called:    2
 12341 ;; This function calls:
 12342 ;;		_ADC_ISR
 12343 ;;		_EUSART1_Receive_ISR
 12344 ;;		_EUSART1_Transmit_ISR
 12345 ;;		_TMR0_ISR
 12346 ;; This function is called by:
 12347 ;;		Interrupt level 2
 12348 ;; This function uses a non-reentrant model
 12349 ;;
 12350                           
 12351                           	psect	intcode
 12352  000008                     __pintcode:
 12353                           	opt stack 0
 12354  000008                     _INTERRUPT_InterruptManager:
 12355                           	opt stack 22
 12356                           
 12357                           ;incstack = 0
 12358  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12359  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 12360  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 12361  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 12362  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 12363  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 12364  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 12365  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 12366  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 12367  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
 12368  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
 12369  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 12370  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 12371  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 12372  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
 12373                           
 12374                           ;interrupt_manager.c: 72: if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 12375  000042  BC9D               	btfsc	3997,6,c	;volatile
 12376  000044  AC9E               	btfss	3998,6,c	;volatile
 12377  000046  D003               	goto	i2l202
 12378                           
 12379                           ;interrupt_manager.c: 73: {
 12380                           ;interrupt_manager.c: 74: ADC_ISR();
 12381  000048  EC0D  F019         	call	_ADC_ISR	;wreg free
 12382                           
 12383                           ;interrupt_manager.c: 75: }
 12384  00004C  D011               	goto	i2l210
 12385  00004E                     i2l202:
 12386                           
 12387                           ;interrupt_manager.c: 76: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 12388  00004E  BAF2               	btfsc	intcon,5,c	;volatile
 12389  000050  A4F2               	btfss	intcon,2,c	;volatile
 12390  000052  D003               	goto	i2l204
 12391                           
 12392                           ;interrupt_manager.c: 77: {
 12393                           ;interrupt_manager.c: 78: TMR0_ISR();
 12394  000054  ECE4  F018         	call	_TMR0_ISR	;wreg free
 12395                           
 12396                           ;interrupt_manager.c: 79: }
 12397  000058  D00B               	goto	i2l210
 12398  00005A                     i2l204:
 12399                           
 12400                           ;interrupt_manager.c: 80: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 12401  00005A  B89D               	btfsc	3997,4,c	;volatile
 12402  00005C  A89E               	btfss	3998,4,c	;volatile
 12403  00005E  D003               	goto	i2l206
 12404                           
 12405                           ;interrupt_manager.c: 81: {
 12406                           ;interrupt_manager.c: 82: EUSART1_Transmit_ISR();
 12407  000060  EC0E  F018         	call	_EUSART1_Transmit_ISR	;wreg free
 12408                           
 12409                           ;interrupt_manager.c: 83: }
 12410  000064  D005               	goto	i2l210
 12411  000066                     i2l206:
 12412                           
 12413                           ;interrupt_manager.c: 84: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 12414  000066  BA9D               	btfsc	3997,5,c	;volatile
 12415  000068  AA9E               	btfss	3998,5,c	;volatile
 12416  00006A  D002               	goto	i2l210
 12417                           
 12418                           ;interrupt_manager.c: 85: {
 12419                           ;interrupt_manager.c: 86: EUSART1_Receive_ISR();
 12420  00006C  EC27  F018         	call	_EUSART1_Receive_ISR	;wreg free
 12421  000070                     i2l210:
 12422  000070  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 12423  000074  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 12424  000078  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 12425  00007C  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 12426  000080  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 12427  000084  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 12428  000088  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 12429  00008C  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 12430  000090  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 12431  000094  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 12432  000098  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 12433  00009C  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 12434  0000A0  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 12435  0000A4  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 12436  0000A8  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12437  0000AA  0011               	retfie		f
 12438  0000AC                     __end_of_INTERRUPT_InterruptManager:
 12439                           	opt stack 0
 12440                           pclatu	equ	0xFFB
 12441                           pclath	equ	0xFFA
 12442                           tblptru	equ	0xFF8
 12443                           tblptrh	equ	0xFF7
 12444                           tblptrl	equ	0xFF6
 12445                           tablat	equ	0xFF5
 12446                           prodh	equ	0xFF4
 12447                           prodl	equ	0xFF3
 12448                           intcon	equ	0xFF2
 12449                           intcon2	equ	0xFF1
 12450                           postinc0	equ	0xFEE
 12451                           fsr0h	equ	0xFEA
 12452                           fsr0l	equ	0xFE9
 12453                           wreg	equ	0xFE8
 12454                           postinc1	equ	0xFE6
 12455                           postdec1	equ	0xFE5
 12456                           fsr1h	equ	0xFE2
 12457                           fsr1l	equ	0xFE1
 12458                           indf2	equ	0xFDF
 12459                           postinc2	equ	0xFDE
 12460                           postdec2	equ	0xFDD
 12461                           fsr2h	equ	0xFDA
 12462                           fsr2l	equ	0xFD9
 12463                           status	equ	0xFD8
 12464                           
 12465 ;; *************** function _TMR0_ISR *****************
 12466 ;; Defined at:
 12467 ;;		line 131 in file "mcc_generated_files/tmr0.c"
 12468 ;; Parameters:    Size  Location     Type
 12469 ;;		None
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;		None
 12472 ;; Return value:  Size  Location     Type
 12473 ;;		None               void
 12474 ;; Registers used:
 12475 ;;		wreg, status,2, cstack
 12476 ;; Tracked objects:
 12477 ;;		On entry : 0/0
 12478 ;;		On exit  : 0/0
 12479 ;;		Unchanged: 0/0
 12480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12481 ;;      Params:         0       0       0       0       0       0       0
 12482 ;;      Locals:         0       0       0       0       0       0       0
 12483 ;;      Temps:          0       0       0       0       0       0       0
 12484 ;;      Totals:         0       0       0       0       0       0       0
 12485 ;;Total ram usage:        0 bytes
 12486 ;; Hardware stack levels used:    1
 12487 ;; Hardware stack levels required when called:    1
 12488 ;; This function calls:
 12489 ;;		_TMR0_CallBack
 12490 ;; This function is called by:
 12491 ;;		_INTERRUPT_InterruptManager
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495                           	psect	text55
 12496  0031C8                     __ptext55:
 12497                           	opt stack 0
 12498  0031C8                     _TMR0_ISR:
 12499                           	opt stack 22
 12500                           
 12501                           ;tmr0.c: 135: INTCONbits.TMR0IF = 0;
 12502                           
 12503                           ;incstack = 0
 12504  0031C8  94F2               	bcf	intcon,2,c	;volatile
 12505                           
 12506                           ;tmr0.c: 139: TMR0H = timer0ReloadVal16bit >> 8;
 12507  0031CA  5050               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
 12508  0031CC  6ED7               	movwf	4055,c	;volatile
 12509                           
 12510                           ;tmr0.c: 140: TMR0L = (uint8_t) timer0ReloadVal16bit;
 12511  0031CE  C04F  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
 12512                           
 12513                           ;tmr0.c: 144: TMR0_CallBack();
 12514  0031D2  EC0F  F019         	call	_TMR0_CallBack	;wreg free
 12515  0031D6  0012               	return		;funcret
 12516  0031D8                     __end_of_TMR0_ISR:
 12517                           	opt stack 0
 12518                           pclatu	equ	0xFFB
 12519                           pclath	equ	0xFFA
 12520                           tblptru	equ	0xFF8
 12521                           tblptrh	equ	0xFF7
 12522                           tblptrl	equ	0xFF6
 12523                           tablat	equ	0xFF5
 12524                           prodh	equ	0xFF4
 12525                           prodl	equ	0xFF3
 12526                           intcon	equ	0xFF2
 12527                           intcon2	equ	0xFF1
 12528                           postinc0	equ	0xFEE
 12529                           fsr0h	equ	0xFEA
 12530                           fsr0l	equ	0xFE9
 12531                           wreg	equ	0xFE8
 12532                           postinc1	equ	0xFE6
 12533                           postdec1	equ	0xFE5
 12534                           fsr1h	equ	0xFE2
 12535                           fsr1l	equ	0xFE1
 12536                           indf2	equ	0xFDF
 12537                           postinc2	equ	0xFDE
 12538                           postdec2	equ	0xFDD
 12539                           fsr2h	equ	0xFDA
 12540                           fsr2l	equ	0xFD9
 12541                           status	equ	0xFD8
 12542                           
 12543 ;; *************** function _TMR0_CallBack *****************
 12544 ;; Defined at:
 12545 ;;		line 149 in file "mcc_generated_files/tmr0.c"
 12546 ;; Parameters:    Size  Location     Type
 12547 ;;		None
 12548 ;; Auto vars:     Size  Location     Type
 12549 ;;		None
 12550 ;; Return value:  Size  Location     Type
 12551 ;;		None               void
 12552 ;; Registers used:
 12553 ;;		None
 12554 ;; Tracked objects:
 12555 ;;		On entry : 0/0
 12556 ;;		On exit  : 0/0
 12557 ;;		Unchanged: 0/0
 12558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12559 ;;      Params:         0       0       0       0       0       0       0
 12560 ;;      Locals:         0       0       0       0       0       0       0
 12561 ;;      Temps:          0       0       0       0       0       0       0
 12562 ;;      Totals:         0       0       0       0       0       0       0
 12563 ;;Total ram usage:        0 bytes
 12564 ;; Hardware stack levels used:    1
 12565 ;; This function calls:
 12566 ;;		Nothing
 12567 ;; This function is called by:
 12568 ;;		_TMR0_ISR
 12569 ;; This function uses a non-reentrant model
 12570 ;;
 12571                           
 12572                           	psect	text56
 12573  00321E                     __ptext56:
 12574                           	opt stack 0
 12575  00321E                     _TMR0_CallBack:
 12576                           	opt stack 22
 12577                           
 12578                           ;incstack = 0
 12579  00321E  0012               	return		;funcret
 12580  003220                     __end_of_TMR0_CallBack:
 12581                           	opt stack 0
 12582                           pclatu	equ	0xFFB
 12583                           pclath	equ	0xFFA
 12584                           tblptru	equ	0xFF8
 12585                           tblptrh	equ	0xFF7
 12586                           tblptrl	equ	0xFF6
 12587                           tablat	equ	0xFF5
 12588                           prodh	equ	0xFF4
 12589                           prodl	equ	0xFF3
 12590                           intcon	equ	0xFF2
 12591                           intcon2	equ	0xFF1
 12592                           postinc0	equ	0xFEE
 12593                           fsr0h	equ	0xFEA
 12594                           fsr0l	equ	0xFE9
 12595                           wreg	equ	0xFE8
 12596                           postinc1	equ	0xFE6
 12597                           postdec1	equ	0xFE5
 12598                           fsr1h	equ	0xFE2
 12599                           fsr1l	equ	0xFE1
 12600                           indf2	equ	0xFDF
 12601                           postinc2	equ	0xFDE
 12602                           postdec2	equ	0xFDD
 12603                           fsr2h	equ	0xFDA
 12604                           fsr2l	equ	0xFD9
 12605                           status	equ	0xFD8
 12606                           
 12607 ;; *************** function _EUSART1_Transmit_ISR *****************
 12608 ;; Defined at:
 12609 ;;		line 167 in file "mcc_generated_files/eusart1.c"
 12610 ;; Parameters:    Size  Location     Type
 12611 ;;		None
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;		None
 12614 ;; Return value:  Size  Location     Type
 12615 ;;		None               void
 12616 ;; Registers used:
 12617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/0
 12620 ;;		On exit  : 0/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12623 ;;      Params:         0       0       0       0       0       0       0
 12624 ;;      Locals:         0       0       0       0       0       0       0
 12625 ;;      Temps:          0       0       0       0       0       0       0
 12626 ;;      Totals:         0       0       0       0       0       0       0
 12627 ;;Total ram usage:        0 bytes
 12628 ;; Hardware stack levels used:    1
 12629 ;; This function calls:
 12630 ;;		Nothing
 12631 ;; This function is called by:
 12632 ;;		_INTERRUPT_InterruptManager
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           	psect	text57
 12637  00301C                     __ptext57:
 12638                           	opt stack 0
 12639  00301C                     _EUSART1_Transmit_ISR:
 12640                           	opt stack 23
 12641                           
 12642                           ;eusart1.c: 171: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
 12643                           
 12644                           ;incstack = 0
 12645  00301C  0E08               	movlw	8
 12646  00301E  0100               	movlb	0	; () banked
 12647  003020  61FF               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 12648  003022  D013               	goto	i2l300
 12649                           
 12650                           ; BSR set to: 0
 12651                           ;eusart1.c: 172: {
 12652                           ;eusart1.c: 173: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
 12653  003024  504C               	movf	_eusart1TxTail,w,c
 12654  003026  0D01               	mullw	1
 12655  003028  0E86               	movlw	low _eusart1TxBuffer
 12656  00302A  24F3               	addwf	prodl,w,c
 12657  00302C  6ED9               	movwf	fsr2l,c
 12658  00302E  0E00               	movlw	high _eusart1TxBuffer
 12659  003030  20F4               	addwfc	prodh,w,c
 12660  003032  6EDA               	movwf	fsr2h,c
 12661  003034  50DF               	movf	indf2,w,c
 12662  003036  6EAD               	movwf	4013,c	;volatile
 12663                           
 12664                           ; BSR set to: 0
 12665  003038  2A4C               	incf	_eusart1TxTail,f,c
 12666                           
 12667                           ; BSR set to: 0
 12668                           ;eusart1.c: 174: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
 12669  00303A  0E07               	movlw	7
 12670  00303C  644C               	cpfsgt	_eusart1TxTail,c
 12671  00303E  D002               	goto	i2l5635
 12672                           
 12673                           ; BSR set to: 0
 12674                           ;eusart1.c: 175: {
 12675                           ;eusart1.c: 176: eusart1TxTail = 0;
 12676  003040  0E00               	movlw	0
 12677  003042  6E4C               	movwf	_eusart1TxTail,c
 12678  003044                     i2l5635:
 12679                           
 12680                           ; BSR set to: 0
 12681                           ;eusart1.c: 177: }
 12682                           ;eusart1.c: 178: eusart1TxBufferRemaining++;
 12683  003044  0100               	movlb	0	; () banked
 12684  003046  2BFF               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 12685                           
 12686                           ;eusart1.c: 179: }
 12687  003048  0012               	return	
 12688  00304A                     i2l300:
 12689                           
 12690                           ; BSR set to: 0
 12691                           ;eusart1.c: 180: else
 12692                           ;eusart1.c: 181: {
 12693                           ;eusart1.c: 182: PIE1bits.TX1IE = 0;
 12694  00304A  989D               	bcf	3997,4,c	;volatile
 12695  00304C  0012               	return	
 12696  00304E                     __end_of_EUSART1_Transmit_ISR:
 12697                           	opt stack 0
 12698                           pclatu	equ	0xFFB
 12699                           pclath	equ	0xFFA
 12700                           tblptru	equ	0xFF8
 12701                           tblptrh	equ	0xFF7
 12702                           tblptrl	equ	0xFF6
 12703                           tablat	equ	0xFF5
 12704                           prodh	equ	0xFF4
 12705                           prodl	equ	0xFF3
 12706                           intcon	equ	0xFF2
 12707                           intcon2	equ	0xFF1
 12708                           postinc0	equ	0xFEE
 12709                           fsr0h	equ	0xFEA
 12710                           fsr0l	equ	0xFE9
 12711                           wreg	equ	0xFE8
 12712                           postinc1	equ	0xFE6
 12713                           postdec1	equ	0xFE5
 12714                           fsr1h	equ	0xFE2
 12715                           fsr1l	equ	0xFE1
 12716                           indf2	equ	0xFDF
 12717                           postinc2	equ	0xFDE
 12718                           postdec2	equ	0xFDD
 12719                           fsr2h	equ	0xFDA
 12720                           fsr2l	equ	0xFD9
 12721                           status	equ	0xFD8
 12722                           
 12723 ;; *************** function _EUSART1_Receive_ISR *****************
 12724 ;; Defined at:
 12725 ;;		line 186 in file "mcc_generated_files/eusart1.c"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;		None
 12728 ;; Auto vars:     Size  Location     Type
 12729 ;;		None
 12730 ;; Return value:  Size  Location     Type
 12731 ;;		None               void
 12732 ;; Registers used:
 12733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12734 ;; Tracked objects:
 12735 ;;		On entry : 0/0
 12736 ;;		On exit  : 0/0
 12737 ;;		Unchanged: 0/0
 12738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12739 ;;      Params:         0       0       0       0       0       0       0
 12740 ;;      Locals:         0       0       0       0       0       0       0
 12741 ;;      Temps:          0       0       0       0       0       0       0
 12742 ;;      Totals:         0       0       0       0       0       0       0
 12743 ;;Total ram usage:        0 bytes
 12744 ;; Hardware stack levels used:    1
 12745 ;; This function calls:
 12746 ;;		Nothing
 12747 ;; This function is called by:
 12748 ;;		_INTERRUPT_InterruptManager
 12749 ;; This function uses a non-reentrant model
 12750 ;;
 12751                           
 12752                           	psect	text58
 12753  00304E                     __ptext58:
 12754                           	opt stack 0
 12755  00304E                     _EUSART1_Receive_ISR:
 12756                           	opt stack 23
 12757                           
 12758                           ;eusart1.c: 188: if(1 == RCSTA1bits.OERR)
 12759                           
 12760                           ; BSR set to: 0
 12761                           ;incstack = 0
 12762  00304E  A2AB               	btfss	4011,1,c	;volatile
 12763  003050  D002               	goto	i2l5641
 12764                           
 12765                           ;eusart1.c: 189: {
 12766                           ;eusart1.c: 192: RCSTA1bits.CREN = 0;
 12767  003052  98AB               	bcf	4011,4,c	;volatile
 12768                           
 12769                           ;eusart1.c: 193: RCSTA1bits.CREN = 1;
 12770  003054  88AB               	bsf	4011,4,c	;volatile
 12771  003056                     i2l5641:
 12772                           
 12773                           ;eusart1.c: 194: }
 12774                           ;eusart1.c: 197: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
 12775  003056  5049               	movf	_eusart1RxHead,w,c
 12776  003058  0D01               	mullw	1
 12777  00305A  0E7E               	movlw	low _eusart1RxBuffer
 12778  00305C  24F3               	addwf	prodl,w,c
 12779  00305E  6ED9               	movwf	fsr2l,c
 12780  003060  0E00               	movlw	high _eusart1RxBuffer
 12781  003062  20F4               	addwfc	prodh,w,c
 12782  003064  6EDA               	movwf	fsr2h,c
 12783  003066  CFAE FFDF          	movff	4014,indf2	;volatile
 12784  00306A  2A49               	incf	_eusart1RxHead,f,c
 12785                           
 12786                           ;eusart1.c: 198: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 12787  00306C  0E07               	movlw	7
 12788  00306E  6449               	cpfsgt	_eusart1RxHead,c
 12789  003070  D002               	goto	i2l5649
 12790                           
 12791                           ;eusart1.c: 199: {
 12792                           ;eusart1.c: 200: eusart1RxHead = 0;
 12793  003072  0E00               	movlw	0
 12794  003074  6E49               	movwf	_eusart1RxHead,c
 12795  003076                     i2l5649:
 12796                           
 12797                           ;eusart1.c: 201: }
 12798                           ;eusart1.c: 202: eusart1RxCount++;
 12799  003076  0100               	movlb	0	; () banked
 12800  003078  2BAA               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 12801                           
 12802                           ; BSR set to: 0
 12803  00307A  0012               	return		;funcret
 12804  00307C                     __end_of_EUSART1_Receive_ISR:
 12805                           	opt stack 0
 12806                           pclatu	equ	0xFFB
 12807                           pclath	equ	0xFFA
 12808                           tblptru	equ	0xFF8
 12809                           tblptrh	equ	0xFF7
 12810                           tblptrl	equ	0xFF6
 12811                           tablat	equ	0xFF5
 12812                           prodh	equ	0xFF4
 12813                           prodl	equ	0xFF3
 12814                           intcon	equ	0xFF2
 12815                           intcon2	equ	0xFF1
 12816                           postinc0	equ	0xFEE
 12817                           fsr0h	equ	0xFEA
 12818                           fsr0l	equ	0xFE9
 12819                           wreg	equ	0xFE8
 12820                           postinc1	equ	0xFE6
 12821                           postdec1	equ	0xFE5
 12822                           fsr1h	equ	0xFE2
 12823                           fsr1l	equ	0xFE1
 12824                           indf2	equ	0xFDF
 12825                           postinc2	equ	0xFDE
 12826                           postdec2	equ	0xFDD
 12827                           fsr2h	equ	0xFDA
 12828                           fsr2l	equ	0xFD9
 12829                           status	equ	0xFD8
 12830                           
 12831 ;; *************** function _ADC_ISR *****************
 12832 ;; Defined at:
 12833 ;;		line 128 in file "mcc_generated_files/adc.c"
 12834 ;; Parameters:    Size  Location     Type
 12835 ;;		None
 12836 ;; Auto vars:     Size  Location     Type
 12837 ;;		None
 12838 ;; Return value:  Size  Location     Type
 12839 ;;		None               void
 12840 ;; Registers used:
 12841 ;;		None
 12842 ;; Tracked objects:
 12843 ;;		On entry : 0/0
 12844 ;;		On exit  : 0/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12847 ;;      Params:         0       0       0       0       0       0       0
 12848 ;;      Locals:         0       0       0       0       0       0       0
 12849 ;;      Temps:          0       0       0       0       0       0       0
 12850 ;;      Totals:         0       0       0       0       0       0       0
 12851 ;;Total ram usage:        0 bytes
 12852 ;; Hardware stack levels used:    1
 12853 ;; This function calls:
 12854 ;;		Nothing
 12855 ;; This function is called by:
 12856 ;;		_INTERRUPT_InterruptManager
 12857 ;; This function uses a non-reentrant model
 12858 ;;
 12859                           
 12860                           	psect	text59
 12861  00321A                     __ptext59:
 12862                           	opt stack 0
 12863  00321A                     _ADC_ISR:
 12864                           	opt stack 23
 12865                           
 12866                           ;adc.c: 131: PIR1bits.ADIF = 0;
 12867                           
 12868                           ; BSR set to: 0
 12869                           ;incstack = 0
 12870  00321A  9C9E               	bcf	3998,6,c	;volatile
 12871  00321C  0012               	return		;funcret
 12872  00321E                     __end_of_ADC_ISR:
 12873                           	opt stack 0
 12874                           pclatu	equ	0xFFB
 12875                           pclath	equ	0xFFA
 12876                           tblptru	equ	0xFF8
 12877                           tblptrh	equ	0xFF7
 12878                           tblptrl	equ	0xFF6
 12879                           tablat	equ	0xFF5
 12880                           prodh	equ	0xFF4
 12881                           prodl	equ	0xFF3
 12882                           intcon	equ	0xFF2
 12883                           intcon2	equ	0xFF1
 12884                           postinc0	equ	0xFEE
 12885                           fsr0h	equ	0xFEA
 12886                           fsr0l	equ	0xFE9
 12887                           wreg	equ	0xFE8
 12888                           postinc1	equ	0xFE6
 12889                           postdec1	equ	0xFE5
 12890                           fsr1h	equ	0xFE2
 12891                           fsr1l	equ	0xFE1
 12892                           indf2	equ	0xFDF
 12893                           postinc2	equ	0xFDE
 12894                           postdec2	equ	0xFDD
 12895                           fsr2h	equ	0xFDA
 12896                           fsr2l	equ	0xFD9
 12897                           status	equ	0xFD8
 12898                           pclatu	equ	0xFFB
 12899                           pclath	equ	0xFFA
 12900                           tblptru	equ	0xFF8
 12901                           tblptrh	equ	0xFF7
 12902                           tblptrl	equ	0xFF6
 12903                           tablat	equ	0xFF5
 12904                           prodh	equ	0xFF4
 12905                           prodl	equ	0xFF3
 12906                           intcon	equ	0xFF2
 12907                           intcon2	equ	0xFF1
 12908                           postinc0	equ	0xFEE
 12909                           fsr0h	equ	0xFEA
 12910                           fsr0l	equ	0xFE9
 12911                           wreg	equ	0xFE8
 12912                           postinc1	equ	0xFE6
 12913                           postdec1	equ	0xFE5
 12914                           fsr1h	equ	0xFE2
 12915                           fsr1l	equ	0xFE1
 12916                           indf2	equ	0xFDF
 12917                           postinc2	equ	0xFDE
 12918                           postdec2	equ	0xFDD
 12919                           fsr2h	equ	0xFDA
 12920                           fsr2l	equ	0xFD9
 12921                           status	equ	0xFD8
 12922                           
 12923                           	psect	rparam
 12924  0000                     pclatu	equ	0xFFB
 12925                           pclath	equ	0xFFA
 12926                           tblptru	equ	0xFF8
 12927                           tblptrh	equ	0xFF7
 12928                           tblptrl	equ	0xFF6
 12929                           tablat	equ	0xFF5
 12930                           prodh	equ	0xFF4
 12931                           prodl	equ	0xFF3
 12932                           intcon	equ	0xFF2
 12933                           intcon2	equ	0xFF1
 12934                           postinc0	equ	0xFEE
 12935                           fsr0h	equ	0xFEA
 12936                           fsr0l	equ	0xFE9
 12937                           wreg	equ	0xFE8
 12938                           postinc1	equ	0xFE6
 12939                           postdec1	equ	0xFE5
 12940                           fsr1h	equ	0xFE2
 12941                           fsr1l	equ	0xFE1
 12942                           indf2	equ	0xFDF
 12943                           postinc2	equ	0xFDE
 12944                           postdec2	equ	0xFDD
 12945                           fsr2h	equ	0xFDA
 12946                           fsr2l	equ	0xFD9
 12947                           status	equ	0xFD8
 12948                           
 12949                           	psect	temp
 12950  000051                     btemp:
 12951                           	opt stack 0
 12952  000051                     	ds	1
 12953  0000                     int$flags	set	btemp
 12954                           pclatu	equ	0xFFB
 12955                           pclath	equ	0xFFA
 12956                           tblptru	equ	0xFF8
 12957                           tblptrh	equ	0xFF7
 12958                           tblptrl	equ	0xFF6
 12959                           tablat	equ	0xFF5
 12960                           prodh	equ	0xFF4
 12961                           prodl	equ	0xFF3
 12962                           intcon	equ	0xFF2
 12963                           intcon2	equ	0xFF1
 12964                           postinc0	equ	0xFEE
 12965                           fsr0h	equ	0xFEA
 12966                           fsr0l	equ	0xFE9
 12967                           wreg	equ	0xFE8
 12968                           postinc1	equ	0xFE6
 12969                           postdec1	equ	0xFE5
 12970                           fsr1h	equ	0xFE2
 12971                           fsr1l	equ	0xFE1
 12972                           indf2	equ	0xFDF
 12973                           postinc2	equ	0xFDE
 12974                           postdec2	equ	0xFDD
 12975                           fsr2h	equ	0xFDA
 12976                           fsr2l	equ	0xFD9
 12977                           status	equ	0xFD8


Data Sizes:
    Strings     31
    Constant    1199
    Data        22
    BSS         315
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     65      80
    BANK0           160     64     160
    BANK1           256    211     250
    BANK2           256      0     190
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    free$0	PTR void  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[26]), STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    spi_write_read@rx_data	PTR int  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), LTC6804_rdStat@data(BANK0[150]), LTC6804_rdcv@cell_data(BANK0[20]), NULL(NULL[0]), 

    spi_write_read@tx_Data	PTR int  size(2) Largest target is 8
		 -> LTC6804_rdcfg@cmd(COMRAM[8]), LTC6804_clrcell@cmd(COMRAM[8]), LTC6804_rdStat_reg@cmd(COMRAM[8]), LTC6804_rdaux_reg@cmd(COMRAM[8]), 
		 -> LTC6804_rdcv_reg@cmd(COMRAM[8]), 

    spi_write_array@data	PTR int  size(2) Largest target is 200
		 -> LTC6804_wrcfg@cmd(BANK1[200]), LTC6804_ADSTAT@cmd(COMRAM[8]), LTC6804_adax@cmd(COMRAM[8]), LTC6804_adcv@cmd(COMRAM[8]), 

    pec15_calc@data	PTR int  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), LTC6804_rdcfg@cmd(COMRAM[8]), LTC6804_wrcfg@cmd(BANK1[200]), LTC6804_clraux@cmd(COMRAM[8]), 
		 -> LTC6804_clrcell@cmd(COMRAM[8]), LTC6804_rdStat_reg@cmd(COMRAM[8]), LTC6804_rdStat@data(BANK0[150]), LTC6804_rdaux_reg@cmd(COMRAM[8]), 
		 -> LTC6804_rdcv_reg@cmd(COMRAM[8]), LTC6804_rdcv@cell_data(BANK0[20]), ADSTAT(BANK0[4]), ADAX(BANK0[4]), 
		 -> ADCV(BANK0[4]), LTC6804_DATA_ConfigBank(BANK1[12]), 

    LTC6804_wrcfg@config	PTR int [6] size(2) Largest target is 12
		 -> LTC6804_DATA_ConfigBank(BANK1[12]), 

    sp__malloc	PTR void  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    LTC6804_rdcv_reg@data	PTR int  size(2) Largest target is 20
		 -> LTC6804_rdcv@cell_data(BANK0[20]), 

    LTC6804_rdcv@cell_codes	PTR int [12] size(2) Largest target is 24
		 -> cell_codes_Bank(BANK2[24]), 

    Read_Battery@cell_codes	PTR int [12] size(2) Largest target is 24
		 -> cell_codes_Bank(BANK2[24]), 


Critical Paths under _main in COMRAM

    _Start_BMS->_Initalize_LT6804b
    _UpdateLT6804->_LTC6804_wrcfg
    _LTC6804_wrcfg->_pec15_calc
    _Set_REFON_Pin->___wmul
    _Set_DCTO_Mode_OFF->___wmul
    _Set_DCC_Mode_OFF->___wmul
    _Set_ADC_Mode->___wmul
    _SetTempEnable->___wmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _printf->___ftadd
    _printf->___fttol
    _scale->___ftmul
    _putch->_EUSART1_Write
    _fround->___ftmul
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___awtoft->___ftpack
    _LTC6804_rdcv->_LTC6804_rdcv_reg
    ___wmul->___awdiv
    _LTC6804_rdcv_reg->_pec15_calc
    _wakeup_idle->_DelayMicro
    _spi_write_read->_SPI2_Exchange8bit
    _LTC6804_adcv->_pec15_calc
    _spi_write_array->_SPI2_Exchange8bit
    _pec15_calc->___wmul

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _Run_Mode->_Read_Battery
    _printf->___ftsub
    ___ftsub->___ftadd
    _Read_Battery->_LTC6804_rdcv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _UpdateLT6804->_LTC6804_wrcfg

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5  327244
                                            206 BANK1      5     0      5
                              _Delay
                           _Run_Mode
                  _SYSTEM_Initialize
                          _Start_BMS
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Start_BMS                                            0     0      0   80449
                  _Initalize_LT6804b
 ---------------------------------------------------------------------------------
 (2) _Initalize_LT6804b                                    2     2      0   80449
                                             53 COMRAM     2     2      0
                      _SetTempEnable
                       _Set_ADC_Mode
                   _Set_DCC_Mode_OFF
                  _Set_DCTO_Mode_OFF
                      _Set_REFON_Pin
                       _UpdateLT6804
 ---------------------------------------------------------------------------------
 (3) _UpdateLT6804                                         0     0      0   17649
                      _LTC6804_wrcfg
 ---------------------------------------------------------------------------------
 (4) _LTC6804_wrcfg                                      212   208      4   17649
                                             47 COMRAM     6     2      4
                                              0 BANK1    206   206      0
                             ___wmul
                         _pec15_calc
                    _spi_write_array
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (3) _Set_REFON_Pin                                        7     4      3   12560
                                             34 COMRAM     7     4      3
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _Set_DCTO_Mode_OFF                                    6     4      2   12452
                                             34 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _Set_DCC_Mode_OFF                                     6     4      2   12476
                                             34 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _Set_ADC_Mode                                         7     4      3   12560
                                             34 COMRAM     7     4      3
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _SetTempEnable                                        7     4      3   12560
                                             34 COMRAM     7     4      3
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             14 COMRAM     2     2      0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Run_Mode                                             5     5      0  148048
                                              0 BANK1      5     5      0
                       _Read_Battery
                           ___awtoft
                            ___ftmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              44    37      7   97986
                                             12 BANK0     38    31      7
                            ___awdiv
                           ___awtoft (ARG)
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3   24945
                                             49 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                             15 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3   24666
                                             49 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    8110
                                             34 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1819
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1985
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     608
                                             14 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     827
                                             14 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2724
                                             22 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     848
                                             27 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     703
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4    1004
                                             56 COMRAM     9     5      4
                                              0 BANK0      6     6      0
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    6787
                                              6 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    6155
                                             59 COMRAM     6     0      6
                                              0 BANK0      6     6      0
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     544
                                             14 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    1886
                                             14 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3894
                                             22 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2488
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _Read_Battery                                         8     4      4   37894
                                             56 BANK0      8     4      4
                              _Delay
                       _LTC6804_adcv
                       _LTC6804_rdcv
                            _set_adc
 ---------------------------------------------------------------------------------
 (3) _set_adc                                             12     4      8    4973
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _LTC6804_rdcv                                        56    50      6   26729
                                              0 BANK0     56    50      6
                   _LTC6804_rdcv_reg
                  _SPI2_Exchange8bit
                             ___wmul
                         _pec15_calc
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4   12334
                                             28 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _LTC6804_rdcv_reg                                    18    12      6    6164
                                             47 COMRAM    18    12      6
                         _pec15_calc
                     _spi_write_read
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (5) _wakeup_idle                                          0     0      0     222
                         _DelayMicro
 ---------------------------------------------------------------------------------
 (6) _DelayMicro                                           5     3      2     222
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _spi_write_read                                      12     4      8    1803
                                             16 COMRAM    12     4      8
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _LTC6804_adcv                                        12    12      0    4308
                                             47 COMRAM    12    12      0
                  _SPI2_Exchange8bit
                         _pec15_calc
                    _spi_write_array
 ---------------------------------------------------------------------------------
 (5) _spi_write_array                                      5     1      4     903
                                             16 COMRAM     5     1      4
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI2_Exchange8bit                                    2     2      0      71
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _pec15_calc                                          13     9      4    3121
                                             34 COMRAM    13     9      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     761
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
   _Run_Mode
     _Read_Battery
       _Delay
       _LTC6804_adcv
         _SPI2_Exchange8bit
         _pec15_calc
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _spi_write_array
           _SPI2_Exchange8bit
       _LTC6804_rdcv
         _LTC6804_rdcv_reg
           _pec15_calc
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _spi_write_read
             _SPI2_Exchange8bit
           _wakeup_idle
             _DelayMicro
         _SPI2_Exchange8bit
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _pec15_calc
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _set_adc
     ___awtoft
       ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _printf
       ___awdiv
         ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _putch (ARG)
         _EUSART1_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
   _Start_BMS
     _Initalize_LT6804b
       _SetTempEnable
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _Set_ADC_Mode
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _Set_DCC_Mode_OFF
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _Set_DCTO_Mode_OFF
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _Set_REFON_Pin
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _UpdateLT6804
         _LTC6804_wrcfg
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _pec15_calc
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _spi_write_array
             _SPI2_Exchange8bit
           _wakeup_idle
             _DelayMicro
   _printf
     ___awdiv
       ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
     ___lltoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _EUSART1_Write
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      BE       8       74.2%
BITBANK1           100      0       0       5        0.0%
BANK1              100     D3      FA       6       97.7%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     40      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     41      50       1       85.1%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A8       9        0.0%
DATA                 0      0     2A8      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Jun 13 19:28:34 2016

                      ?_LTC6804_adcv 0001                        ?_LTC6804_rdcv 00B9  
           _eusart1TxBufferRemaining 00FF                                    _i 0044  
                                  _j 00A6                                    _k 00A8  
                                 l20 316C                         ___awdiv@sign 001A  
                     ?_LTC6804_wrcfg 0030                  ___wmul@multiplicand 001F  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                       ___ftadd@exp1 00BE                         ___ftadd@exp2 00BD  
                        __CFG_LVP$ON 000000                         ___ftadd@sign 00BC  
                                _CC1 008E                                  _CC2 0091  
                                _CC3 0094                                  l320 30B2  
                                l313 3006                                  l509 2650  
                                l288 2F12                                  l840 10BE  
                                l665 186A                                  l835 10DE  
                                l829 0E56                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                      __end_of_ADC_ISR 321E  
                       ___awmod@sign 0014                                  prod 000FF3  
                                wreg 000FE8             __end_ofLT6804@crc15Table 7D31  
                               l1060 0744                                 l1301 2182  
                               l1333 26E0                                 l1405 205A  
                               l1430 3130                                 l1360 1DC2  
                               l1362 1DE6                                 l1371 1EA4  
                               l1380 1EC2                                 l1356 1D88  
                               l1480 29B0                                 l1490 2CE0  
                               l1398 1FCC                                 l1399 1FF4  
                               l7001 1A0C                                 l7101 1E54  
                               l7111 1E98                                 l7103 1E60  
                               l7033 21C8                                 l7025 21A4  
                               l7201 28FE                                 l8001 0A94  
                               l7043 21F2                                 l7211 291E  
                               l7203 2902                                 l7019 1AC8  
                               l7029 21B6                                 l7037 21E2  
                               l7117 1EE0                                 l7109 1E8C  
                               l8013 0B5C                                 l8005 0AAE  
                               l8111 2FC4                                 l7127 1F14  
                               l7215 2928                                 l7231 2BC6  
                               l7143 2420                                 l8015 0B72  
                               l8023 28A8                                 l7081 1DDE  
                               l7241 2BE8                                 l7161 2462  
                               l7137 23F8                                 l8009 0AD6  
                               l8025 28B6                                 l7059 229E  
                               l7411 0EB8                                 l7091 1E0E  
                               l7075 1DD0                                 l7219 2936  
                               l7243 2BEC                                 l7251 2C0A  
                               l7235 2BD2                                 l7171 248A  
                               l7307 2E42                                 l8019 285C  
                               l7405 0E88                                 l8037 153A  
                               l8029 14E4                                 l7069 1D96  
                               l7157 2452                                 l7263 2FF2  
                               l8047 15B8                                 l7255 2C18  
                               l7247 2C00                                 l7239 2BE0  
                               l7167 247A                                 l7271 2DAE  
                               l7425 0FD2                                 l7409 0EAE  
                               l8057 1636                                 l7097 1E3A  
                               l7521 1F92                                 l7193 28E0  
                               l7505 3154                                 l7281 2DF8  
                               _ADAX 00AD                                 l7435 10C2  
                               l8075 1726                                 l8067 16B4  
                               l7099 1E46                                 l7611 2148  
                               l7515 1F66                                 l7187 28D0  
                               l8155 25C4                                 _ADCV 00B1  
                               l6901 2A06                                 l7373 0C52  
                               l8085 17A4                                 l7621 2170  
                               l7375 0C5C                                 l7367 0C22  
                               l7711 2972                                 l7623 217C  
                               l7615 2158                                 l7551 2020  
                               l7199 28F6                                 l7455 1CE4  
                               l7447 1C24                                 l8159 25DA  
                               l6905 2A2E                                 l8097 182A  
                               l6921 2670                                 l7641 2804  
                               l7561 2048                                 l6931 26CC  
                               l6923 267A                                 l7707 2962  
                               l7731 2CAE                                 l7571 208A  
                               l7563 2054                                 l7555 2030  
                               l7475 12C0                      spi_write_read@i 001B  
                               l6861 30BA                                 l7397 0E3E  
                               l7389 0D76                                 l6933 26D6  
                               l6925 2698                                 l6917 2662  
                               l7637 27D4                                 l7629 2D70  
                               l7661 22E4                                 l7709 296E  
                               l7741 2CF8                                 l7493 14B4  
                               l7469 121C                                 l6871 2784  
                               l7647 2830                                 l7719 29A2  
                               l7735 2CD2                                 l7727 2C9E  
                               l7743 2D04                                 l7591 20EA  
                               l6951 2F00                                 l7487 1410  
                               l7479 12E4                                 l7911 0726  
                               l7903 06F6                                 l7831 03B4  
                               l7823 034C                                 l7807 029E  
                               l7751 00C0                                 l8383 2EEC  
                               l6865 2712                                 l6929 26AE  
                               l7729 2CAA                                 l7577 20A8  
                               l7921 076C                                 l7905 0704  
                               l7841 0436                                 l7761 0108  
                               l6883 2F62                                 l7691 2398  
                               l7683 236E                                 l6963 2F34  
                               l7915 0748                                 l7851 049E  
                               l7835 03DA                                 l7755 00D6  
                               l6971 18BA                                 l6893 29CC  
                               l7693 23A2                                 l6965 2F38  
                               l7925 07BE                                 l7933 0898  
                               l7909 0712                                 l7861 04FC  
                               l7837 03F0                                 l7941 08C2  
                               l7781 01F6                                 l6973 18C2  
                               l6879 2F46                                 l7679 235A  
                               l7599 211A                                 l7951 0906  
                               l7935 08A6                                 l7847 0478  
                               l7839 0420                                 l7791 023E  
                               l7775 01A4                                 l6897 29E8  
                               l7697 23BE                                 l7689 2388  
                               l7865 0562                                 l7785 0206  
                               l7769 017C                                 l6985 194C  
                               l7971 0978                                 l7939 08B4  
                               l7891 062E                                 l7883 05FE  
                               l7867 0568                                 l7779 01E0  
                               l6995 19F0                                 l7957 092C  
                               l7893 0642                                 l7797 0258  
                               l7789 020C                                 l6997 19FE  
                               l7991 0A3C                                 l7975 09A0  
                               l7959 0932                                 l7887 0620  
                               l7879 05AE                                 l7993 0A46  
                               l7985 0A04                                 l7897 066A  
                               l7889 0626                                 l7979 09D0  
                               l7997 0A7E                                 l7999 0A88  
                               STR_1 7FFA                                 STR_2 7FE0  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                         printf@tmpval 00DB  
                               u7161 23E0                                 u7410 0C20  
                               u8050 02E4                                 u7181 2408  
                               u8055 02D8                                 u7440 0E36  
                               u8240 073C                                 u6705 2738  
                               u7601 1F4A                                 u7460 0E86  
                               u7621 1F76                                 u7385 24F4  
                               u7490 10B6                                 u7395 2570  
                               u7811 22C4                                 u7830 2302  
                               u6951 1D38                                 u6961 1D54  
                               u6881 19FC                                 u7835 22FA  
                               u9837 2FF8                         _Voltage_data 0218  
                               _WPUB 000F61                        _EUSART1_Write 2EFE  
             __end_of_spi_write_read 2A44                                 _main 2EBE  
                       ___ftpack@arg 000F                         ___ftpack@exp 0012  
                    _TMR0_StartTimer 3216                           _DelayMicro 30A8  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 0051  
             SPI2_Exchange8bit@stuff 000F                        __CFG_BORV$190 000000  
                _Under_Voltage_Value 00FB                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00AC                        __CFG_IESO$OFF 000000  
                     ??_LTC6804_adcv 0030                         ___ftmul@cntr 0030  
                     ??_LTC6804_rdcv 00BF                         ___param_bank 000010  
                       ___ftmul@sign 0031                         ___fttol@exp1 00BE  
                      ?_Read_Battery 00F1                         ___fttol@lval 00BA  
                Initalize_LT6804b@IC 0036              __end_of_TMR0_Initialize 30A8  
                  ?_LTC6804_rdcv_reg 0030       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 31F4                                ?_main 01CE  
                    __end_of___awdiv 2940                                _CFGR0 0046  
                              _CFGR1 01EB                                _CFGR2 01EC  
                              _CFGR3 01ED                                _CFGR4 0047  
                              _CFGR5 0048                      __end_of___ftadd 1F3A  
                    __end_of___awmod 2C22                   ??_LTC6804_rdcv_reg 0036  
                    __end_of___ftneg 313E                      __end_of___lldiv 29C2  
                    __end_of___ftmul 24C4                                _T0CON 000FD5  
                    ___awdiv@divisor 0017                      __end_of___llmod 2CF2  
                    __end_of___ftsub 2D9A                      __end_of___fttol 23D0  
                              _LATD3 007C63                                _LATD6 007C66  
                     __CFG_DEBUG$OFF 000000                                i2l210 0070  
                              i2l202 004E                                i2l300 304A  
                              i2l204 005A                                i2l206 0066  
                    ___awdiv@counter 0019                                _TMR0H 000FD7  
                              _TMR0L 000FD6                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                              _CVolt 0060                                _CarOn 00FD  
                              _Delay 2FE8                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000              __end_of_spi_write_array 2F78  
                       ___lltoft@exp 001F                 _EUSART1_Transmit_ISR 301C  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                     __end_of_TMR0_ISR 31D8  
                              _Volt1 0097                                _Volt2 009A  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                      ___awtoft@sign 001A                                _fault 009D  
                    __end_of_dpowers 7F59                                _errno 00A2  
                              _scale 10E8                      __end_of_isdigit 315C  
                 __CFG_MCLRE$EXTMCLR 000000                        ___ftpack@sign 0013  
                              _retrn 02AE                                _putch 3200  
                     ?_EUSART1_Write 0001                      __end_of_set_adc 25A0  
                              tablat 000FF5         Set_DCTO_Mode_OFF@fault_value 0027  
                    ?_spi_write_read 0011                                status 000FD8  
                     __CFG_HFOFST$ON 000000                    _LTC6804_rdcv$2831 00C7  
                     __CFG_PBADEN$ON 000000                      __initialization 2AC4  
                      _CurrentOffset 0230                    _SPI2_Exchange8bit 315C  
         __end_of_EUSART1_Initialize 2FB0                         __end_of_main 2EFE  
                    ??_LTC6804_wrcfg 0034                       ??_Read_Battery 00F5  
                         _CurrentDir 00FE                   ?_SPI2_Exchange8bit 0001  
                          ??_ADC_ISR 0001          ?_INTERRUPT_InterruptManager 0001  
                             ??_main 0042                        ___fttol@sign1 00B9  
       Read_Battery@BatteryPlacement 00F1                        __activetblptr 000002  
                     set_adc@md_bits 0019             __size_of_SPI2_Initialize 000E  
               __size_of__tdiv_to_l_ 0132                  ??_SPI2_Exchange8bit 000F  
                      ?_Set_ADC_Mode 0023                               ?_Delay 000F  
              ?_EUSART1_Transmit_ISR 0001                     _Set_DCC_Mode_OFF 2A44  
                   __end_of_Run_Mode 2652              __end_of_TMR0_StartTimer 321A  
                pec15_calc@remainder 002E                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                   ___llmod@dividend 001C                               ?_scale 0032  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                             _ADSTAT 00B5                     ___awdiv@dividend 0015  
                   __end_of___awtoft 2FE8                               _ANSELA 000F38  
                             ?_putch 0001                               _ANSELB 000F39  
                             _ANSELC 000F3A                               _ANSELD 000F3B  
                             _ANSELE 000F3C                     __end_of___ftpack 2700  
                   __end_of___lltoft 2D4E                       __CFG_WDTEN$OFF 000000  
                             Delay@x 0012                               i2l5641 3056  
                             i2l5635 3044                               i2l5649 3076  
                             _RCREG1 000FAE                               _RCSTA1 000FAB  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _SLRCON 000F60                               _TRISD3 007CAB  
                        ?_DelayMicro 000F                               _TXREG1 000FAD  
                             _TXSTA1 000FAC            __end_of_SPI2_Exchange8bit 3178  
                     __CFG_XINST$OFF 000000                     __end_of__powers_ 7FA7  
                             ___ftge 27A4                               ___wmul 30D0  
                          ??___awdiv 0019                            ??___ftadd 00B9  
                     __CFG_STVREN$ON 000000                            ??___awmod 0013  
                          ??___ftneg 0012                            ??___lldiv 0017  
                          ??___ftmul 0029                            ??___llmod 0024  
                          ??___ftsub 0042                            ??___fttol 003D  
                   ?_TMR0_Initialize 0001                               _fround 1ADE  
                             clear_0 2ACA                               clear_1 2AD6  
                             clear_2 2AE2                               clear_3 2AEE  
                   ___awdiv@quotient 001B                      ___awmod@divisor 0011  
                    ___awmod@counter 0013                               _printf 00B0  
                       ?_wakeup_idle 0001                ___ftmul@f3_as_product 002D  
                     ??_Set_ADC_Mode 0026                            ??_isdigit 000F  
             __size_of_Set_REFON_Pin 004A                         __mediumconst 7B30  
                          ??_set_adc 0017                               tblptrh 000FF7  
                   ?_spi_write_array 0011                               tblptrl 000FF6  
                             tblptru 000FF8                LTC6804_wrcfg@temp_pec 01CA  
                 __size_of_Start_BMS 0006                 __end_of_LTC6804_adcv 2C8C  
              __end_of_TMR0_CallBack 3220                      ??_EUSART1_Write 000F  
               __end_of_LTC6804_rdcv 10E8                      _eusart1RxBuffer 007E  
              LTC6804_wrcfg@total_ic 0030        __size_of_INTERRUPT_Initialize 000C  
                    _eusart1TxBuffer 0086                     __end_ofexp@coeff 7FC5  
                  _SYSTEM_Initialize 30F6                     __end_oflog@coeff 7FE0  
                 SetTempEnable@value 0025                           __accesstop 0060  
            __end_of__initialization 2B34                           ___ftadd@f1 003C  
                         ___ftadd@f2 003F                           ___ftge@ff1 000F  
                         ___ftge@ff2 0012                   ?_SYSTEM_Initialize 0001  
                      ___rparam_used 000001                           ___ftneg@f1 000F  
                    _cell_codes_Bank 0296                           ___awtoft@c 0017  
                      __end_of_Delay 301C                           ___ftmul@f1 0023  
                         ___ftmul@f2 0026                           _crc15Table 7D31  
                         ___ftsub@f1 00BF                           ___ftsub@f2 00C2  
                         ___fttol@f1 0039                       __pcstackCOMRAM 0001  
                     DelayMicro@wait 000F                         __pidataBANK0 320A  
                       __pidataBANK2 31B8                  ??_SYSTEM_Initialize 0011  
                          ?_TMR0_ISR 0001                           ___lltoft@c 0017  
                Set_DCTO_Mode_OFF@ic 0023                        __end_of_scale 14D8  
                      __end_of_putch 320A              Read_Battery@Read_Status 00F7  
           Set_REFON_Pin@fault_value 0028               ??_EUSART1_Transmit_ISR 0001  
                         __div_to_l_ 206C                  __size_of_DelayMicro 0028  
                            ??_Delay 0011          __end_of_EUSART1_Receive_ISR 307C  
                    __div_to_l_@exp1 001A                     ?_TMR0_StartTimer 0001  
                    __div_to_l_@cntr 0019                              ??_scale 0035  
          __end_of_SYSTEM_Initialize 311A                      __div_to_l_@quot 0015  
               __end_of_Read_Battery 1874                              ??_putch 0010  
                      _eusart1RxHead 0049                        _eusart1TxHead 004B  
                  ??_SPI2_Initialize 000F                        _eusart1RxTail 004A  
                         __pbssBANK0 0060                           __pbssBANK1 01D3  
                         __pbssBANK2 0200                        _eusart1TxTail 004C  
                    __CFG_PLLCFG$OFF 000000                           __pnvCOMRAM 004F  
             Read_Battery@cell_codes 00F3                           _pec15_calc 2700  
                      __div_to_l_@f1 000F                        __div_to_l_@f2 0012  
                     LTC6804_rdcv@hi 00C5                        _Set_REFON_Pin 2D9A  
         __size_of_SPI2_Exchange8bit 001C                   spi_write_array@len 0011  
                 __CFG_CCP2MX$PORTC1 000000                              ?___ftge 000F  
                  __end_of_Start_BMS 3216               LTC6804_rdcv@cell_codes 00BD  
                            ?___wmul 001D                            ?_Run_Mode 0001  
                         ??_TMR0_ISR 0001                   __CFG_CCP3MX$PORTB5 000000  
            _LTC6804_DATA_ConfigBank 01EE             LTC6804_rdcv@data_counter 00EF  
                            _ADC_ISR 321A                              ?_fround 0032  
             __size_of_SetTempEnable 004A                            ?___awtoft 0017  
                          ?___ftpack 000F                     LTC6804_wrcfg@cmd 0100  
                            ?_printf 00C5                            ?___lltoft 0017  
            __size_of_ADC_Initialize 0018                           _fault_flag 00AB  
                         _faultvalue 00A4                   _Over_Voltage_Value 00F9  
                            _OSCCON2 000FD2                              _OSCTUNE 000F9B  
                            _SPBRGH1 000FB0                     ??_spi_write_read 0019  
                            _SSP2ADD 000F6E                              _SSP2BUF 000F6F  
          __size_of_LTC6804_rdcv_reg 0120                      _aux_codes_Bank1 0266  
                    _aux_codes_Bank2 0272                       ?_Set_REFON_Pin 0023  
                            _Current 0072                      __CFG_PWRTEN$OFF 000000  
               __end_of_Set_ADC_Mode 2E2E                    __end_of__npowers_ 7F80  
                            __Hparam 0000               LTC6804_wrcfg@cmd_index 01CC  
                         _scale$2836 0035             __end_of_Set_DCC_Mode_OFF 2AC4  
                            __Lparam 0000                      __size_of___ftge 0090  
                         ??_Run_Mode 0042                 spi_write_read@rx_len 0017  
                            ___awdiv 28BC                              ___ftadd 1D24  
                            ___awmod 2BB2                 spi_write_read@tx_len 0013  
                            ___ftneg 311A                              ___lldiv 2940  
                    __size_of___wmul 0026                              ___ftmul 23D0  
                            ___llmod 2C8C                              ___ftsub 2D4E  
                            ___fttol 22B4                           _current_ic 004D  
                            __pcinit 2AC4                           ??___awtoft 001A  
                         ??___ftpack 0014                      __size_of_fround 0246  
                            __ramtop 0600                           ??___lltoft 001B  
                            __ptext0 2EBE                              __ptext1 3210  
                            __ptext2 2834                              __ptext3 3190  
                            __ptext4 1874                              __ptext5 2D9A  
                            __ptext6 2E78                              __ptext7 2A44  
                            __ptext8 2DE4                              __ptext9 2E2E  
                    __size_of_printf 0AE2                            _T0CONbits 000FD5  
              __size_of_LTC6804_adcv 006A                          ?__div_to_l_ 000F  
                      ?_UpdateLT6804 0001                __size_of_LTC6804_rdcv 0556  
                            _infault 00AC                              _dpowers 7F31  
              _OSCILLATOR_Initialize 31E6                              _isdigit 313E  
                   ___awmod@dividend 000F                 __size_of_wakeup_idle 0012  
                 _EUSART1_Initialize 2F78             ??_PIN_MANAGER_Initialize 000F  
                            _set_adc 24C4           __size_of_SYSTEM_Initialize 0024  
               end_of_initialization 2B34                            Delay@wait 000F  
                ?_EUSART1_Initialize 0001                        _SetTempEnable 2E2E  
            Set_ADC_Mode@ADCOPT_Mode 0025                        __Lmediumconst 7B30  
                       ??_DelayMicro 0011                        pec15_calc@len 0023  
                        ?_pec15_calc 0023                      ___lldiv@divisor 0013  
                    ___lldiv@counter 001B                              printf@c 00EA  
                            printf@f 00C5                         _LTC6804_adcv 2C22  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                         _LTC6804_rdcv 0B92  
                  _Initalize_LT6804b 2834                       __tdiv_to_l_@f1 000F  
                     __tdiv_to_l_@f2 0012                 ??_EUSART1_Initialize 000F  
              __end_of_LTC6804_wrcfg 1ADE                        ??__tdiv_to_l_ 0015  
                 ?_Initalize_LT6804b 0001                      _Stat_codes_Bank 025A  
                     ??_UpdateLT6804 0036                  LTC6804_rdcv_reg@cmd 003A  
                LTC6804_rdcv_reg@reg 0030                __size_of_Read_Battery 039C  
                 __end_of_DelayMicro 30D0                  ??_Initalize_LT6804b 0036  
                  _Set_DCTO_Mode_OFF 2E78                            _TRISDbits 000F95  
                 ?_Set_DCTO_Mode_OFF 0023                  EUSART1_Write@txData 000F  
                     ?_SetTempEnable 0023                      ??_Set_REFON_Pin 0026  
                        printf@width 00D9                  ??_Set_DCTO_Mode_OFF 0025  
              SPI2_Exchange8bit@data 0010                  __size_of__div_to_l_ 0128  
          __end_of_Initalize_LT6804b 28BC                          ___ftmul@exp 002C  
               _timer0ReloadVal16bit 004F         __end_of_INTERRUPT_Initialize 3200  
                     __end_of___ftge 2834                      _Read_Status_INC 00A0  
                       _Read_Battery 14D8                       __end_of___wmul 30F6  
                  __size_of_TMR0_ISR 0010                       _ADC_Initialize 3178  
             ?_OSCILLATOR_Initialize 0001                       __end_of_fround 1D24  
                    _SPI2_Initialize 31D8            __end_of_Set_DCTO_Mode_OFF 2EBE  
                     __end_of_printf 0B92                  __size_of_pec15_calc 00A4  
                start_initialization 2AC4             __size_of_TMR0_Initialize 002C  
    __size_of_PIN_MANAGER_Initialize 0070                  __end_of__tdiv_to_l_ 206C  
                   _LTC6804_rdcv_reg 2194                          putch@txData 0010  
              __end_of_EUSART1_Write 2F3C                       Set_ADC_Mode@ic 0023  
              __size_of_Set_ADC_Mode 004A             __size_of_spi_write_array 003C  
                    ___llmod@divisor 0020                      ___llmod@counter 0024  
                          _Temp_DegF 01D3                             ??___ftge 0015  
                           ??___wmul 0021               __size_of_TMR0_CallBack 0002  
             __end_of_ADC_Initialize 3190                          __pdataBANK0 00F9  
                        __pdataBANK2 02AE                             ?_ADC_ISR 0001  
                           ??_fround 0035                      LTC6804_adcv@cmd 0032  
                  __size_of_Run_Mode 00B2                            _Start_BMS 3210  
                          Run_Mode@k 0103                             ??_printf 00CC  
                     _eusart1RxCount 00AA                           fround@prec 003B  
                  __size_of___awtoft 0038                    __size_of___ftpack 00AE  
                  __size_of___lltoft 005C                          __pbssCOMRAM 0042  
                       _Set_ADC_Mode 2DE4        __size_of_EUSART1_Transmit_ISR 0032  
                      __pcstackBANK0 00B9                        __pcstackBANK1 0100  
            LTC6804_rdcv@CELL_IN_REG 00EB                      ??_SetTempEnable 0026  
                       _isdigit$2266 0010                        _PrevTemp_DegF 0200  
            Set_ADC_Mode@fault_value 0028         __size_of_EUSART1_Receive_ISR 002E  
                    LTC6804_rdcv@reg 00B9                      SetTempEnable@ic 0023  
                       _current_byte 0042                 __end_of_UpdateLT6804 31A6  
                          __pnvBANK0 00FF             __size_of_TMR0_StartTimer 0004  
                spi_write_array@data 0013               _PIN_MANAGER_Initialize 2B42  
         __size_of_Initalize_LT6804b 0088                    ?_Set_DCC_Mode_OFF 0023  
              LTC6804_rdcv@cell_data 00C9                            __pintcode 0008  
                      __pmediumconst 7B30              __end_of_SPI2_Initialize 31E6  
                           ?___awdiv 0015                             ?___ftadd 003C  
                           ?___awmod 000F                             ?___ftneg 000F  
                           ?___lldiv 000F                             ?___ftmul 0023  
                           ?___llmod 001C                             ?___ftsub 00BF  
                          __npowers_ 7F59                             ?___fttol 0039  
                 ??_Set_DCC_Mode_OFF 0025                      ?_ADC_Initialize 0001  
                         ?_Start_BMS 0001         ??_INTERRUPT_InterruptManager 0001  
                   __CFG_PRICLKEN$ON 000000                          __tdiv_to_l_ 1F3A  
                    Set_REFON_Pin@ic 0023                         ??__div_to_l_ 0015  
         __size_of_Set_DCTO_Mode_OFF 0046                             _BAUDCON1 000FB8  
                         set_adc@CHG 0015                           set_adc@DCP 0011  
                           ?_isdigit 0001                       __size_of_Delay 0034  
                           ?_set_adc 000F              Set_REFON_Pin@REFON_Mode 0025  
                 __end_of_crc15Table 7F31                        _TMR0_CallBack 321E  
                     __size_of_scale 03F0                       __size_of_putch 000A  
              LTC6804_rdcv@pec_error 00DD                 _INTERRUPT_Initialize 31F4  
                  ??_TMR0_Initialize 000F                       ___wmul@product 0021  
                           _LATCbits 000F8B                 LTC6804_adcv@temp_pec 003A  
           LTC6804_rdcv@current_cell 00ED                         ??_pec15_calc 0027  
           SetTempEnable@fault_value 0028                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D  __size_of_INTERRUPT_InterruptManager 00A4  
                           _PIR1bits 000F9E                   __end_of__div_to_l_ 2194  
                           _RCONbits 000FD0                    ??_spi_write_array 0015  
                   __CFG_WDTPS$32768 000000                             _SSP2CON1 000F6C  
                           _TMR0_ISR 31C8                             _SSP2STAT 000F6D  
                      ??_wakeup_idle 0014                     __size_of_ADC_ISR 0004  
                         _ADCON0bits 000FC2                    ___wmul@multiplier 001D  
                         printf@flag 00D7                           printf@fval 00E5  
                         printf@prec 00E8                   __end_of_pec15_calc 27A4  
                     ?_TMR0_CallBack 0001                          _INTCON2bits 000FF1  
                          copy_data0 2B08                            copy_data1 2B28  
              ?_INTERRUPT_Initialize 0001             LTC6804_rdcv_reg@temp_pec 0038  
                           _Aux_data 024E                          DelayMicro@x 0012  
           LTC6804_rdcv@received_pec 00E5             LTC6804_rdcv_reg@total_ic 0032  
                      _Run_Mode$2826 0100              __size_of_spi_write_read 0082  
                           __Hrparam 0000                     LT6804@crc15Table 7B31  
                           __Lrparam 0000                  LTC6804_wrcfg@config 0032  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTD2 000000  
                           _Run_Mode 25A0                     ?_SPI2_Initialize 0001  
            ??_OSCILLATOR_Initialize 000F             __end_of_LTC6804_rdcv_reg 22B4  
              spi_write_read@tx_Data 0011                    ??_TMR0_StartTimer 000F  
                   __size_of___awdiv 0084                     __size_of___ftadd 0216  
                   __size_of___awmod 0070                spi_write_read@rx_data 0015  
                   __size_of___ftneg 0024                     __size_of___lldiv 0082  
                   __size_of___ftmul 00F4                     __size_of___llmod 0066  
                   __size_of___ftsub 004C                     __size_of___fttol 011C  
        __size_of_EUSART1_Initialize 0038                             ___awtoft 2FB0  
                           ___ftpack 2652                          ??_Start_BMS 0038  
                        _fround$2834 0038                          _fround$2835 0035  
                           ___lltoft 2CF2                     __size_of_isdigit 001E  
               LTC6804_rdcv@data_pec 00E7                 LTC6804_rdcv@cell_reg 00E9  
                __end_of_wakeup_idle 31B8                     __size_of_set_adc 00DC  
                           __ptext10 30F6                             __ptext11 307C  
                           __ptext20 00B0                             __ptext12 3216  
                           __ptext21 10E8                             __ptext13 31D8  
                           __ptext30 206C                             __ptext22 3200  
                           __ptext14 2B42                             __ptext31 2CF2  
                           __ptext23 2EFE                             __ptext15 31E6  
                           __ptext40 2652                             __ptext32 2C8C  
                           __ptext24 313E                             __ptext16 31F4  
                           __ptext41 14D8                             __ptext33 2940  
                           __ptext25 1ADE                             __ptext17 2F78  
                           __ptext50 2F3C                             __ptext42 24C4  
                           __ptext34 22B4                             __ptext26 23D0  
                           __ptext18 3178                             __ptext51 315C  
                           __ptext43 0B92                             __ptext35 2D4E  
                           __ptext27 2BB2                             __ptext19 25A0  
                           __ptext52 2700                             __ptext44 30D0  
                           __ptext36 1D24                             __ptext28 28BC  
                           __ptext53 2FE8                             __ptext45 2194  
                           __ptext37 311A                             __ptext29 1F3A  
                           __ptext46 31A6                             __ptext38 27A4  
                           __ptext55 31C8                             __ptext47 30A8  
                           __ptext39 2FB0                             __ptext56 321E  
                           __ptext48 29C2                             __ptext57 301C  
                           __ptext49 2C22                             __ptext58 304E  
                           __ptext59 321A                             __powers_ 7F80  
                       _SSP2CON1bits 000F6C                __size_of_UpdateLT6804 0016  
                          set_adc@CH 0013                            set_adc@MD 000F  
             __size_of_LTC6804_wrcfg 026A                        __size_of_main 0040  
              __end_of_Set_REFON_Pin 2DE4                       _Aux_codes_Bank 0242  
                       _TmpTemp_DegF 027E                             int$flags 0051  
 __end_of_INTERRUPT_InterruptManager 00AC           _INTERRUPT_InterruptManager 0008  
                           main@argc 01CE                            printf@exp 00E3  
                           main@argv 01D0                            printf@val 00DF  
               LTC6804_rdcv@total_ic 00BB                  _EUSART1_Receive_ISR 304E  
                       _SSP2STATbits 000F6D                             exp@coeff 7FA7  
                           log@coeff 7FC5                         _UpdateLT6804 3190  
                         _INTCONbits 000FF2                      ??_TMR0_CallBack 0001  
                           isdigit@c 0011               ??_INTERRUPT_Initialize 000F  
            LTC6804_rdcv@parsed_cell 00E3                             scale@scl 0038  
                     pec15_calc@addr 002C                       pec15_calc@data 0025  
                           intlevel2 0000                     __tdiv_to_l_@exp1 001D  
                   __tdiv_to_l_@cntr 001C                     __tdiv_to_l_@quot 0018  
               ?_EUSART1_Receive_ISR 0001                     ___lldiv@dividend 000F  
            ?_PIN_MANAGER_Initialize 0001               LTC6804_rdcv@BYT_IN_REG 00E1  
                         _RCSTA1bits 000FAB         __end_of_EUSART1_Transmit_ISR 304E  
                   ??_ADC_Initialize 000F                             printf@ap 00D5  
                      _LTC6804_wrcfg 1874               __size_of_EUSART1_Write 003E  
                       ?__tdiv_to_l_ 000F                   Set_DCC_Mode_OFF@ic 0023  
                        _wakeup_idle 31A6                          _printf$2837 00D2  
                   ___lldiv@quotient 0017                      _TMR0_Initialize 307C  
          __size_of_Set_DCC_Mode_OFF 0080                    __CFG_T3CMX$PORTC0 000000  
          LTC6804_wrcfg@BYTES_IN_REG 01C8                __end_of_SetTempEnable 2E78  
              ??_EUSART1_Receive_ISR 0001       __end_of_PIN_MANAGER_Initialize 2BB2  
                    _spi_write_array 2F3C                 LTC6804_rdcv_reg@data 0034  
                  __CFG_FOSC$INTIO67 000000                       _spi_write_read 29C2  
             LTC6804_rdcv@NUM_RX_BYT 00DF          Set_DCC_Mode_OFF@fault_value 0027  
