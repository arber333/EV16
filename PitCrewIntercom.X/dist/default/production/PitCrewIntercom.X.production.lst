

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Aug 16 06:24:38 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  008C                     	;# 
    80  008D                     	;# 
    81  008E                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0094                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0113                     	;# 
   103  0114                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011A                     	;# 
   110  011B                     	;# 
   111  011D                     	;# 
   112  011E                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  018E                     	;# 
   116  0191                     	;# 
   117  0191                     	;# 
   118  0192                     	;# 
   119  0193                     	;# 
   120  0193                     	;# 
   121  0193                     	;# 
   122  0194                     	;# 
   123  0195                     	;# 
   124  0196                     	;# 
   125  0199                     	;# 
   126  019A                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019C                     	;# 
   130  019D                     	;# 
   131  019E                     	;# 
   132  019F                     	;# 
   133  020C                     	;# 
   134  020D                     	;# 
   135  020E                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  0212                     	;# 
   139  0212                     	;# 
   140  0213                     	;# 
   141  0213                     	;# 
   142  0214                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0216                     	;# 
   148  0216                     	;# 
   149  0217                     	;# 
   150  0217                     	;# 
   151  0219                     	;# 
   152  021A                     	;# 
   153  021B                     	;# 
   154  021C                     	;# 
   155  021D                     	;# 
   156  021E                     	;# 
   157  021F                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029D                     	;# 
   173  029E                     	;# 
   174  0311                     	;# 
   175  0311                     	;# 
   176  0312                     	;# 
   177  0313                     	;# 
   178  0318                     	;# 
   179  0318                     	;# 
   180  0319                     	;# 
   181  031A                     	;# 
   182  038C                     	;# 
   183  038D                     	;# 
   184  038E                     	;# 
   185  0391                     	;# 
   186  0392                     	;# 
   187  0393                     	;# 
   188  0394                     	;# 
   189  0395                     	;# 
   190  0396                     	;# 
   191  039A                     	;# 
   192  039C                     	;# 
   193  039D                     	;# 
   194  039E                     	;# 
   195  039F                     	;# 
   196  0415                     	;# 
   197  0416                     	;# 
   198  0417                     	;# 
   199  041C                     	;# 
   200  041D                     	;# 
   201  041E                     	;# 
   202  0FE4                     	;# 
   203  0FE5                     	;# 
   204  0FE6                     	;# 
   205  0FE7                     	;# 
   206  0FE8                     	;# 
   207  0FE9                     	;# 
   208  0FEA                     	;# 
   209  0FEB                     	;# 
   210  0FED                     	;# 
   211  0FEE                     	;# 
   212  0FEF                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  010C                     	;# 
   262  010D                     	;# 
   263  010E                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0113                     	;# 
   267  0114                     	;# 
   268  0115                     	;# 
   269  0116                     	;# 
   270  0117                     	;# 
   271  0118                     	;# 
   272  0119                     	;# 
   273  011A                     	;# 
   274  011B                     	;# 
   275  011D                     	;# 
   276  011E                     	;# 
   277  018C                     	;# 
   278  018D                     	;# 
   279  018E                     	;# 
   280  0191                     	;# 
   281  0191                     	;# 
   282  0192                     	;# 
   283  0193                     	;# 
   284  0193                     	;# 
   285  0193                     	;# 
   286  0194                     	;# 
   287  0195                     	;# 
   288  0196                     	;# 
   289  0199                     	;# 
   290  019A                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019C                     	;# 
   294  019D                     	;# 
   295  019E                     	;# 
   296  019F                     	;# 
   297  020C                     	;# 
   298  020D                     	;# 
   299  020E                     	;# 
   300  0211                     	;# 
   301  0211                     	;# 
   302  0212                     	;# 
   303  0212                     	;# 
   304  0213                     	;# 
   305  0213                     	;# 
   306  0214                     	;# 
   307  0214                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0216                     	;# 
   312  0216                     	;# 
   313  0217                     	;# 
   314  0217                     	;# 
   315  0219                     	;# 
   316  021A                     	;# 
   317  021B                     	;# 
   318  021C                     	;# 
   319  021D                     	;# 
   320  021E                     	;# 
   321  021F                     	;# 
   322  0291                     	;# 
   323  0291                     	;# 
   324  0292                     	;# 
   325  0293                     	;# 
   326  0294                     	;# 
   327  0295                     	;# 
   328  0295                     	;# 
   329  0296                     	;# 
   330  0298                     	;# 
   331  0298                     	;# 
   332  0299                     	;# 
   333  029A                     	;# 
   334  029B                     	;# 
   335  029C                     	;# 
   336  029D                     	;# 
   337  029E                     	;# 
   338  0311                     	;# 
   339  0311                     	;# 
   340  0312                     	;# 
   341  0313                     	;# 
   342  0318                     	;# 
   343  0318                     	;# 
   344  0319                     	;# 
   345  031A                     	;# 
   346  038C                     	;# 
   347  038D                     	;# 
   348  038E                     	;# 
   349  0391                     	;# 
   350  0392                     	;# 
   351  0393                     	;# 
   352  0394                     	;# 
   353  0395                     	;# 
   354  0396                     	;# 
   355  039A                     	;# 
   356  039C                     	;# 
   357  039D                     	;# 
   358  039E                     	;# 
   359  039F                     	;# 
   360  0415                     	;# 
   361  0416                     	;# 
   362  0417                     	;# 
   363  041C                     	;# 
   364  041D                     	;# 
   365  041E                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEF                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  008E                     	;# 
   410  0091                     	;# 
   411  0092                     	;# 
   412  0093                     	;# 
   413  0094                     	;# 
   414  0095                     	;# 
   415  0096                     	;# 
   416  0097                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009A                     	;# 
   420  009B                     	;# 
   421  009B                     	;# 
   422  009C                     	;# 
   423  009D                     	;# 
   424  009E                     	;# 
   425  010C                     	;# 
   426  010D                     	;# 
   427  010E                     	;# 
   428  0111                     	;# 
   429  0112                     	;# 
   430  0113                     	;# 
   431  0114                     	;# 
   432  0115                     	;# 
   433  0116                     	;# 
   434  0117                     	;# 
   435  0118                     	;# 
   436  0119                     	;# 
   437  011A                     	;# 
   438  011B                     	;# 
   439  011D                     	;# 
   440  011E                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  018E                     	;# 
   444  0191                     	;# 
   445  0191                     	;# 
   446  0192                     	;# 
   447  0193                     	;# 
   448  0193                     	;# 
   449  0193                     	;# 
   450  0194                     	;# 
   451  0195                     	;# 
   452  0196                     	;# 
   453  0199                     	;# 
   454  019A                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019C                     	;# 
   458  019D                     	;# 
   459  019E                     	;# 
   460  019F                     	;# 
   461  020C                     	;# 
   462  020D                     	;# 
   463  020E                     	;# 
   464  0211                     	;# 
   465  0211                     	;# 
   466  0212                     	;# 
   467  0212                     	;# 
   468  0213                     	;# 
   469  0213                     	;# 
   470  0214                     	;# 
   471  0214                     	;# 
   472  0215                     	;# 
   473  0215                     	;# 
   474  0215                     	;# 
   475  0216                     	;# 
   476  0216                     	;# 
   477  0217                     	;# 
   478  0217                     	;# 
   479  0219                     	;# 
   480  021A                     	;# 
   481  021B                     	;# 
   482  021C                     	;# 
   483  021D                     	;# 
   484  021E                     	;# 
   485  021F                     	;# 
   486  0291                     	;# 
   487  0291                     	;# 
   488  0292                     	;# 
   489  0293                     	;# 
   490  0294                     	;# 
   491  0295                     	;# 
   492  0295                     	;# 
   493  0296                     	;# 
   494  0298                     	;# 
   495  0298                     	;# 
   496  0299                     	;# 
   497  029A                     	;# 
   498  029B                     	;# 
   499  029C                     	;# 
   500  029D                     	;# 
   501  029E                     	;# 
   502  0311                     	;# 
   503  0311                     	;# 
   504  0312                     	;# 
   505  0313                     	;# 
   506  0318                     	;# 
   507  0318                     	;# 
   508  0319                     	;# 
   509  031A                     	;# 
   510  038C                     	;# 
   511  038D                     	;# 
   512  038E                     	;# 
   513  0391                     	;# 
   514  0392                     	;# 
   515  0393                     	;# 
   516  0394                     	;# 
   517  0395                     	;# 
   518  0396                     	;# 
   519  039A                     	;# 
   520  039C                     	;# 
   521  039D                     	;# 
   522  039E                     	;# 
   523  039F                     	;# 
   524  0415                     	;# 
   525  0416                     	;# 
   526  0417                     	;# 
   527  041C                     	;# 
   528  041D                     	;# 
   529  041E                     	;# 
   530  0FE4                     	;# 
   531  0FE5                     	;# 
   532  0FE6                     	;# 
   533  0FE7                     	;# 
   534  0FE8                     	;# 
   535  0FE9                     	;# 
   536  0FEA                     	;# 
   537  0FEB                     	;# 
   538  0FED                     	;# 
   539  0FEE                     	;# 
   540  0FEF                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  0011                     	;# 
   557  0012                     	;# 
   558  0013                     	;# 
   559  0014                     	;# 
   560  0015                     	;# 
   561  0016                     	;# 
   562  0016                     	;# 
   563  0017                     	;# 
   564  0018                     	;# 
   565  0019                     	;# 
   566  001A                     	;# 
   567  001B                     	;# 
   568  001C                     	;# 
   569  001E                     	;# 
   570  001F                     	;# 
   571  008C                     	;# 
   572  008D                     	;# 
   573  008E                     	;# 
   574  0091                     	;# 
   575  0092                     	;# 
   576  0093                     	;# 
   577  0094                     	;# 
   578  0095                     	;# 
   579  0096                     	;# 
   580  0097                     	;# 
   581  0098                     	;# 
   582  0099                     	;# 
   583  009A                     	;# 
   584  009B                     	;# 
   585  009B                     	;# 
   586  009C                     	;# 
   587  009D                     	;# 
   588  009E                     	;# 
   589  010C                     	;# 
   590  010D                     	;# 
   591  010E                     	;# 
   592  0111                     	;# 
   593  0112                     	;# 
   594  0113                     	;# 
   595  0114                     	;# 
   596  0115                     	;# 
   597  0116                     	;# 
   598  0117                     	;# 
   599  0118                     	;# 
   600  0119                     	;# 
   601  011A                     	;# 
   602  011B                     	;# 
   603  011D                     	;# 
   604  011E                     	;# 
   605  018C                     	;# 
   606  018D                     	;# 
   607  018E                     	;# 
   608  0191                     	;# 
   609  0191                     	;# 
   610  0192                     	;# 
   611  0193                     	;# 
   612  0193                     	;# 
   613  0193                     	;# 
   614  0194                     	;# 
   615  0195                     	;# 
   616  0196                     	;# 
   617  0199                     	;# 
   618  019A                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019C                     	;# 
   622  019D                     	;# 
   623  019E                     	;# 
   624  019F                     	;# 
   625  020C                     	;# 
   626  020D                     	;# 
   627  020E                     	;# 
   628  0211                     	;# 
   629  0211                     	;# 
   630  0212                     	;# 
   631  0212                     	;# 
   632  0213                     	;# 
   633  0213                     	;# 
   634  0214                     	;# 
   635  0214                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0216                     	;# 
   640  0216                     	;# 
   641  0217                     	;# 
   642  0217                     	;# 
   643  0219                     	;# 
   644  021A                     	;# 
   645  021B                     	;# 
   646  021C                     	;# 
   647  021D                     	;# 
   648  021E                     	;# 
   649  021F                     	;# 
   650  0291                     	;# 
   651  0291                     	;# 
   652  0292                     	;# 
   653  0293                     	;# 
   654  0294                     	;# 
   655  0295                     	;# 
   656  0295                     	;# 
   657  0296                     	;# 
   658  0298                     	;# 
   659  0298                     	;# 
   660  0299                     	;# 
   661  029A                     	;# 
   662  029B                     	;# 
   663  029C                     	;# 
   664  029D                     	;# 
   665  029E                     	;# 
   666  0311                     	;# 
   667  0311                     	;# 
   668  0312                     	;# 
   669  0313                     	;# 
   670  0318                     	;# 
   671  0318                     	;# 
   672  0319                     	;# 
   673  031A                     	;# 
   674  038C                     	;# 
   675  038D                     	;# 
   676  038E                     	;# 
   677  0391                     	;# 
   678  0392                     	;# 
   679  0393                     	;# 
   680  0394                     	;# 
   681  0395                     	;# 
   682  0396                     	;# 
   683  039A                     	;# 
   684  039C                     	;# 
   685  039D                     	;# 
   686  039E                     	;# 
   687  039F                     	;# 
   688  0415                     	;# 
   689  0416                     	;# 
   690  0417                     	;# 
   691  041C                     	;# 
   692  041D                     	;# 
   693  041E                     	;# 
   694  0FE4                     	;# 
   695  0FE5                     	;# 
   696  0FE6                     	;# 
   697  0FE7                     	;# 
   698  0FE8                     	;# 
   699  0FE9                     	;# 
   700  0FEA                     	;# 
   701  0FEB                     	;# 
   702  0FED                     	;# 
   703  0FEE                     	;# 
   704  0FEF                     	;# 
   705  0000                     	;# 
   706  0001                     	;# 
   707  0002                     	;# 
   708  0003                     	;# 
   709  0004                     	;# 
   710  0005                     	;# 
   711  0006                     	;# 
   712  0007                     	;# 
   713  0008                     	;# 
   714  0009                     	;# 
   715  000A                     	;# 
   716  000B                     	;# 
   717  000C                     	;# 
   718  000D                     	;# 
   719  000E                     	;# 
   720  0011                     	;# 
   721  0012                     	;# 
   722  0013                     	;# 
   723  0014                     	;# 
   724  0015                     	;# 
   725  0016                     	;# 
   726  0016                     	;# 
   727  0017                     	;# 
   728  0018                     	;# 
   729  0019                     	;# 
   730  001A                     	;# 
   731  001B                     	;# 
   732  001C                     	;# 
   733  001E                     	;# 
   734  001F                     	;# 
   735  008C                     	;# 
   736  008D                     	;# 
   737  008E                     	;# 
   738  0091                     	;# 
   739  0092                     	;# 
   740  0093                     	;# 
   741  0094                     	;# 
   742  0095                     	;# 
   743  0096                     	;# 
   744  0097                     	;# 
   745  0098                     	;# 
   746  0099                     	;# 
   747  009A                     	;# 
   748  009B                     	;# 
   749  009B                     	;# 
   750  009C                     	;# 
   751  009D                     	;# 
   752  009E                     	;# 
   753  010C                     	;# 
   754  010D                     	;# 
   755  010E                     	;# 
   756  0111                     	;# 
   757  0112                     	;# 
   758  0113                     	;# 
   759  0114                     	;# 
   760  0115                     	;# 
   761  0116                     	;# 
   762  0117                     	;# 
   763  0118                     	;# 
   764  0119                     	;# 
   765  011A                     	;# 
   766  011B                     	;# 
   767  011D                     	;# 
   768  011E                     	;# 
   769  018C                     	;# 
   770  018D                     	;# 
   771  018E                     	;# 
   772  0191                     	;# 
   773  0191                     	;# 
   774  0192                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0194                     	;# 
   779  0195                     	;# 
   780  0196                     	;# 
   781  0199                     	;# 
   782  019A                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019C                     	;# 
   786  019D                     	;# 
   787  019E                     	;# 
   788  019F                     	;# 
   789  020C                     	;# 
   790  020D                     	;# 
   791  020E                     	;# 
   792  0211                     	;# 
   793  0211                     	;# 
   794  0212                     	;# 
   795  0212                     	;# 
   796  0213                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0216                     	;# 
   804  0216                     	;# 
   805  0217                     	;# 
   806  0217                     	;# 
   807  0219                     	;# 
   808  021A                     	;# 
   809  021B                     	;# 
   810  021C                     	;# 
   811  021D                     	;# 
   812  021E                     	;# 
   813  021F                     	;# 
   814  0291                     	;# 
   815  0291                     	;# 
   816  0292                     	;# 
   817  0293                     	;# 
   818  0294                     	;# 
   819  0295                     	;# 
   820  0295                     	;# 
   821  0296                     	;# 
   822  0298                     	;# 
   823  0298                     	;# 
   824  0299                     	;# 
   825  029A                     	;# 
   826  029B                     	;# 
   827  029C                     	;# 
   828  029D                     	;# 
   829  029E                     	;# 
   830  0311                     	;# 
   831  0311                     	;# 
   832  0312                     	;# 
   833  0313                     	;# 
   834  0318                     	;# 
   835  0318                     	;# 
   836  0319                     	;# 
   837  031A                     	;# 
   838  038C                     	;# 
   839  038D                     	;# 
   840  038E                     	;# 
   841  0391                     	;# 
   842  0392                     	;# 
   843  0393                     	;# 
   844  0394                     	;# 
   845  0395                     	;# 
   846  0396                     	;# 
   847  039A                     	;# 
   848  039C                     	;# 
   849  039D                     	;# 
   850  039E                     	;# 
   851  039F                     	;# 
   852  0415                     	;# 
   853  0416                     	;# 
   854  0417                     	;# 
   855  041C                     	;# 
   856  041D                     	;# 
   857  041E                     	;# 
   858  0FE4                     	;# 
   859  0FE5                     	;# 
   860  0FE6                     	;# 
   861  0FE7                     	;# 
   862  0FE8                     	;# 
   863  0FE9                     	;# 
   864  0FEA                     	;# 
   865  0FEB                     	;# 
   866  0FED                     	;# 
   867  0FEE                     	;# 
   868  0FEF                     	;# 
   869  0000                     	;# 
   870  0001                     	;# 
   871  0002                     	;# 
   872  0003                     	;# 
   873  0004                     	;# 
   874  0005                     	;# 
   875  0006                     	;# 
   876  0007                     	;# 
   877  0008                     	;# 
   878  0009                     	;# 
   879  000A                     	;# 
   880  000B                     	;# 
   881  000C                     	;# 
   882  000D                     	;# 
   883  000E                     	;# 
   884  0011                     	;# 
   885  0012                     	;# 
   886  0013                     	;# 
   887  0014                     	;# 
   888  0015                     	;# 
   889  0016                     	;# 
   890  0016                     	;# 
   891  0017                     	;# 
   892  0018                     	;# 
   893  0019                     	;# 
   894  001A                     	;# 
   895  001B                     	;# 
   896  001C                     	;# 
   897  001E                     	;# 
   898  001F                     	;# 
   899  008C                     	;# 
   900  008D                     	;# 
   901  008E                     	;# 
   902  0091                     	;# 
   903  0092                     	;# 
   904  0093                     	;# 
   905  0094                     	;# 
   906  0095                     	;# 
   907  0096                     	;# 
   908  0097                     	;# 
   909  0098                     	;# 
   910  0099                     	;# 
   911  009A                     	;# 
   912  009B                     	;# 
   913  009B                     	;# 
   914  009C                     	;# 
   915  009D                     	;# 
   916  009E                     	;# 
   917  010C                     	;# 
   918  010D                     	;# 
   919  010E                     	;# 
   920  0111                     	;# 
   921  0112                     	;# 
   922  0113                     	;# 
   923  0114                     	;# 
   924  0115                     	;# 
   925  0116                     	;# 
   926  0117                     	;# 
   927  0118                     	;# 
   928  0119                     	;# 
   929  011A                     	;# 
   930  011B                     	;# 
   931  011D                     	;# 
   932  011E                     	;# 
   933  018C                     	;# 
   934  018D                     	;# 
   935  018E                     	;# 
   936  0191                     	;# 
   937  0191                     	;# 
   938  0192                     	;# 
   939  0193                     	;# 
   940  0193                     	;# 
   941  0193                     	;# 
   942  0194                     	;# 
   943  0195                     	;# 
   944  0196                     	;# 
   945  0199                     	;# 
   946  019A                     	;# 
   947  019B                     	;# 
   948  019B                     	;# 
   949  019C                     	;# 
   950  019D                     	;# 
   951  019E                     	;# 
   952  019F                     	;# 
   953  020C                     	;# 
   954  020D                     	;# 
   955  020E                     	;# 
   956  0211                     	;# 
   957  0211                     	;# 
   958  0212                     	;# 
   959  0212                     	;# 
   960  0213                     	;# 
   961  0213                     	;# 
   962  0214                     	;# 
   963  0214                     	;# 
   964  0215                     	;# 
   965  0215                     	;# 
   966  0215                     	;# 
   967  0216                     	;# 
   968  0216                     	;# 
   969  0217                     	;# 
   970  0217                     	;# 
   971  0219                     	;# 
   972  021A                     	;# 
   973  021B                     	;# 
   974  021C                     	;# 
   975  021D                     	;# 
   976  021E                     	;# 
   977  021F                     	;# 
   978  0291                     	;# 
   979  0291                     	;# 
   980  0292                     	;# 
   981  0293                     	;# 
   982  0294                     	;# 
   983  0295                     	;# 
   984  0295                     	;# 
   985  0296                     	;# 
   986  0298                     	;# 
   987  0298                     	;# 
   988  0299                     	;# 
   989  029A                     	;# 
   990  029B                     	;# 
   991  029C                     	;# 
   992  029D                     	;# 
   993  029E                     	;# 
   994  0311                     	;# 
   995  0311                     	;# 
   996  0312                     	;# 
   997  0313                     	;# 
   998  0318                     	;# 
   999  0318                     	;# 
  1000  0319                     	;# 
  1001  031A                     	;# 
  1002  038C                     	;# 
  1003  038D                     	;# 
  1004  038E                     	;# 
  1005  0391                     	;# 
  1006  0392                     	;# 
  1007  0393                     	;# 
  1008  0394                     	;# 
  1009  0395                     	;# 
  1010  0396                     	;# 
  1011  039A                     	;# 
  1012  039C                     	;# 
  1013  039D                     	;# 
  1014  039E                     	;# 
  1015  039F                     	;# 
  1016  0415                     	;# 
  1017  0416                     	;# 
  1018  0417                     	;# 
  1019  041C                     	;# 
  1020  041D                     	;# 
  1021  041E                     	;# 
  1022  0FE4                     	;# 
  1023  0FE5                     	;# 
  1024  0FE6                     	;# 
  1025  0FE7                     	;# 
  1026  0FE8                     	;# 
  1027  0FE9                     	;# 
  1028  0FEA                     	;# 
  1029  0FEB                     	;# 
  1030  0FED                     	;# 
  1031  0FEE                     	;# 
  1032  0FEF                     	;# 
  1033  0000                     	;# 
  1034  0001                     	;# 
  1035  0002                     	;# 
  1036  0003                     	;# 
  1037  0004                     	;# 
  1038  0005                     	;# 
  1039  0006                     	;# 
  1040  0007                     	;# 
  1041  0008                     	;# 
  1042  0009                     	;# 
  1043  000A                     	;# 
  1044  000B                     	;# 
  1045  000C                     	;# 
  1046  000D                     	;# 
  1047  000E                     	;# 
  1048  0011                     	;# 
  1049  0012                     	;# 
  1050  0013                     	;# 
  1051  0014                     	;# 
  1052  0015                     	;# 
  1053  0016                     	;# 
  1054  0016                     	;# 
  1055  0017                     	;# 
  1056  0018                     	;# 
  1057  0019                     	;# 
  1058  001A                     	;# 
  1059  001B                     	;# 
  1060  001C                     	;# 
  1061  001E                     	;# 
  1062  001F                     	;# 
  1063  008C                     	;# 
  1064  008D                     	;# 
  1065  008E                     	;# 
  1066  0091                     	;# 
  1067  0092                     	;# 
  1068  0093                     	;# 
  1069  0094                     	;# 
  1070  0095                     	;# 
  1071  0096                     	;# 
  1072  0097                     	;# 
  1073  0098                     	;# 
  1074  0099                     	;# 
  1075  009A                     	;# 
  1076  009B                     	;# 
  1077  009B                     	;# 
  1078  009C                     	;# 
  1079  009D                     	;# 
  1080  009E                     	;# 
  1081  010C                     	;# 
  1082  010D                     	;# 
  1083  010E                     	;# 
  1084  0111                     	;# 
  1085  0112                     	;# 
  1086  0113                     	;# 
  1087  0114                     	;# 
  1088  0115                     	;# 
  1089  0116                     	;# 
  1090  0117                     	;# 
  1091  0118                     	;# 
  1092  0119                     	;# 
  1093  011A                     	;# 
  1094  011B                     	;# 
  1095  011D                     	;# 
  1096  011E                     	;# 
  1097  018C                     	;# 
  1098  018D                     	;# 
  1099  018E                     	;# 
  1100  0191                     	;# 
  1101  0191                     	;# 
  1102  0192                     	;# 
  1103  0193                     	;# 
  1104  0193                     	;# 
  1105  0193                     	;# 
  1106  0194                     	;# 
  1107  0195                     	;# 
  1108  0196                     	;# 
  1109  0199                     	;# 
  1110  019A                     	;# 
  1111  019B                     	;# 
  1112  019B                     	;# 
  1113  019C                     	;# 
  1114  019D                     	;# 
  1115  019E                     	;# 
  1116  019F                     	;# 
  1117  020C                     	;# 
  1118  020D                     	;# 
  1119  020E                     	;# 
  1120  0211                     	;# 
  1121  0211                     	;# 
  1122  0212                     	;# 
  1123  0212                     	;# 
  1124  0213                     	;# 
  1125  0213                     	;# 
  1126  0214                     	;# 
  1127  0214                     	;# 
  1128  0215                     	;# 
  1129  0215                     	;# 
  1130  0215                     	;# 
  1131  0216                     	;# 
  1132  0216                     	;# 
  1133  0217                     	;# 
  1134  0217                     	;# 
  1135  0219                     	;# 
  1136  021A                     	;# 
  1137  021B                     	;# 
  1138  021C                     	;# 
  1139  021D                     	;# 
  1140  021E                     	;# 
  1141  021F                     	;# 
  1142  0291                     	;# 
  1143  0291                     	;# 
  1144  0292                     	;# 
  1145  0293                     	;# 
  1146  0294                     	;# 
  1147  0295                     	;# 
  1148  0295                     	;# 
  1149  0296                     	;# 
  1150  0298                     	;# 
  1151  0298                     	;# 
  1152  0299                     	;# 
  1153  029A                     	;# 
  1154  029B                     	;# 
  1155  029C                     	;# 
  1156  029D                     	;# 
  1157  029E                     	;# 
  1158  0311                     	;# 
  1159  0311                     	;# 
  1160  0312                     	;# 
  1161  0313                     	;# 
  1162  0318                     	;# 
  1163  0318                     	;# 
  1164  0319                     	;# 
  1165  031A                     	;# 
  1166  038C                     	;# 
  1167  038D                     	;# 
  1168  038E                     	;# 
  1169  0391                     	;# 
  1170  0392                     	;# 
  1171  0393                     	;# 
  1172  0394                     	;# 
  1173  0395                     	;# 
  1174  0396                     	;# 
  1175  039A                     	;# 
  1176  039C                     	;# 
  1177  039D                     	;# 
  1178  039E                     	;# 
  1179  039F                     	;# 
  1180  0415                     	;# 
  1181  0416                     	;# 
  1182  0417                     	;# 
  1183  041C                     	;# 
  1184  041D                     	;# 
  1185  041E                     	;# 
  1186  0FE4                     	;# 
  1187  0FE5                     	;# 
  1188  0FE6                     	;# 
  1189  0FE7                     	;# 
  1190  0FE8                     	;# 
  1191  0FE9                     	;# 
  1192  0FEA                     	;# 
  1193  0FEB                     	;# 
  1194  0FED                     	;# 
  1195  0FEE                     	;# 
  1196  0FEF                     	;# 
  1197                           
  1198                           	psect	idataCOMMON
  1199  0601                     __pidataCOMMON:	
  1200                           
  1201                           ;initializer for _Transmit_stall
  1202  0601  3401               	retlw	1
  1203  000B                     _INTCON	set	11
  1204  000B                     _INTCONbits	set	11
  1205  0011                     _PIR1bits	set	17
  1206  000C                     _PORTAbits	set	12
  1207  000E                     _PORTCbits	set	14
  1208  001B                     _PR2	set	27
  1209  001C                     _T2CON	set	28
  1210  001C                     _T2CONbits	set	28
  1211  001A                     _TMR2	set	26
  1212  009D                     _ADCON0bits	set	157
  1213  009E                     _ADCON1bits	set	158
  1214  009B                     _ADRESL	set	155
  1215  0099                     _OSCCONbits	set	153
  1216  0091                     _PIE1bits	set	145
  1217  008C                     _TRISAbits	set	140
  1218  008E                     _TRISCbits	set	142
  1219  011D                     _APFCON0bits	set	285
  1220  0117                     _FVRCONbits	set	279
  1221  018C                     _ANSELAbits	set	396
  1222  018E                     _ANSELCbits	set	398
  1223  019F                     _BAUDCON	set	415
  1224  0199                     _RCREG	set	409
  1225  019D                     _RCSTA	set	413
  1226  019D                     _RCSTAbits	set	413
  1227  019C                     _SPBRGH	set	412
  1228  019B                     _SPBRGL	set	411
  1229  019A                     _TXREG	set	410
  1230  019E                     _TXSTA	set	414
  1231                           
  1232                           	psect	stringtext
  1233  0266                     __pstringtext:	
  1234  0266                     STR_5:	
  1235  0266  3441               	retlw	65	;'A'
  1236  0267  3454               	retlw	84	;'T'
  1237  0268  342B               	retlw	43	;'+'
  1238  0269  3444               	retlw	68	;'D'
  1239  026A  344D               	retlw	77	;'M'
  1240  026B  344F               	retlw	79	;'O'
  1241  026C  3453               	retlw	83	;'S'
  1242  026D  3445               	retlw	69	;'E'
  1243  026E  3454               	retlw	84	;'T'
  1244  026F  3447               	retlw	71	;'G'
  1245  0270  3452               	retlw	82	;'R'
  1246  0271  344F               	retlw	79	;'O'
  1247  0272  3455               	retlw	85	;'U'
  1248  0273  3450               	retlw	80	;'P'
  1249  0274  343D               	retlw	61	;'='
  1250  0275  3430               	retlw	48	;'0'
  1251  0276  342C               	retlw	44	;','
  1252  0277  3431               	retlw	49	;'1'
  1253  0278  3434               	retlw	52	;'4'
  1254  0279  3435               	retlw	53	;'5'
  1255  027A  342E               	retlw	46	;'.'
  1256  027B  3435               	retlw	53	;'5'
  1257  027C  3435               	retlw	53	;'5'
  1258  027D  3430               	retlw	48	;'0'
  1259  027E  3430               	retlw	48	;'0'
  1260  027F  342C               	retlw	44	;','
  1261  0280  3431               	retlw	49	;'1'
  1262  0281  3434               	retlw	52	;'4'
  1263  0282  3435               	retlw	53	;'5'
  1264  0283  342E               	retlw	46	;'.'
  1265  0284  3435               	retlw	53	;'5'
  1266  0285  3435               	retlw	53	;'5'
  1267  0286  3430               	retlw	48	;'0'
  1268  0287  3430               	retlw	48	;'0'
  1269  0288  342C               	retlw	44	;','
  1270  0289  3434               	retlw	52	;'4'
  1271  028A  3433               	retlw	51	;'3'
  1272  028B  342C               	retlw	44	;','
  1273  028C  3438               	retlw	56	;'8'
  1274  028D  342C               	retlw	44	;','
  1275  028E  3435               	retlw	53	;'5'
  1276  028F  3431               	retlw	49	;'1'
  1277  0290  342C               	retlw	44	;','
  1278  0291  3430               	retlw	48	;'0'
  1279  0292  3400               	retlw	0
  1280  0293                     STR_8:	
  1281  0293  3441               	retlw	65	;'A'
  1282  0294  3454               	retlw	84	;'T'
  1283  0295  342B               	retlw	43	;'+'
  1284  0296  3444               	retlw	68	;'D'
  1285  0297  344D               	retlw	77	;'M'
  1286  0298  344F               	retlw	79	;'O'
  1287  0299  3441               	retlw	65	;'A'
  1288  029A  3455               	retlw	85	;'U'
  1289  029B  3454               	retlw	84	;'T'
  1290  029C  344F               	retlw	79	;'O'
  1291  029D  3450               	retlw	80	;'P'
  1292  029E  344F               	retlw	79	;'O'
  1293  029F  3457               	retlw	87	;'W'
  1294  02A0  3443               	retlw	67	;'C'
  1295  02A1  344F               	retlw	79	;'O'
  1296  02A2  344E               	retlw	78	;'N'
  1297  02A3  3454               	retlw	84	;'T'
  1298  02A4  3452               	retlw	82	;'R'
  1299  02A5  343D               	retlw	61	;'='
  1300  02A6  3425               	retlw	37	;'%'
  1301  02A7  3463               	retlw	99	;'c'
  1302  02A8  3400               	retlw	0
  1303  02A9                     STR_17:	
  1304  02A9  3441               	retlw	65	;'A'
  1305  02AA  3454               	retlw	84	;'T'
  1306  02AB  342B               	retlw	43	;'+'
  1307  02AC  3444               	retlw	68	;'D'
  1308  02AD  344D               	retlw	77	;'M'
  1309  02AE  344F               	retlw	79	;'O'
  1310  02AF  3453               	retlw	83	;'S'
  1311  02B0  3445               	retlw	69	;'E'
  1312  02B1  3454               	retlw	84	;'T'
  1313  02B2  344D               	retlw	77	;'M'
  1314  02B3  3449               	retlw	73	;'I'
  1315  02B4  3443               	retlw	67	;'C'
  1316  02B5  343D               	retlw	61	;'='
  1317  02B6  3425               	retlw	37	;'%'
  1318  02B7  3463               	retlw	99	;'c'
  1319  02B8  342C               	retlw	44	;','
  1320  02B9  3425               	retlw	37	;'%'
  1321  02BA  3463               	retlw	99	;'c'
  1322  02BB  342C               	retlw	44	;','
  1323  02BC  3430               	retlw	48	;'0'
  1324  02BD  3400               	retlw	0
  1325  02BE                     STR_11:	
  1326  02BE  3441               	retlw	65	;'A'
  1327  02BF  3454               	retlw	84	;'T'
  1328  02C0  342B               	retlw	43	;'+'
  1329  02C1  3444               	retlw	68	;'D'
  1330  02C2  344D               	retlw	77	;'M'
  1331  02C3  344F               	retlw	79	;'O'
  1332  02C4  3453               	retlw	83	;'S'
  1333  02C5  3445               	retlw	69	;'E'
  1334  02C6  3454               	retlw	84	;'T'
  1335  02C7  3456               	retlw	86	;'V'
  1336  02C8  344F               	retlw	79	;'O'
  1337  02C9  344C               	retlw	76	;'L'
  1338  02CA  3455               	retlw	85	;'U'
  1339  02CB  344D               	retlw	77	;'M'
  1340  02CC  3445               	retlw	69	;'E'
  1341  02CD  343D               	retlw	61	;'='
  1342  02CE  3425               	retlw	37	;'%'
  1343  02CF  3463               	retlw	99	;'c'
  1344  02D0  3400               	retlw	0
  1345  02D1                     STR_14:	
  1346  02D1  3441               	retlw	65	;'A'
  1347  02D2  3454               	retlw	84	;'T'
  1348  02D3  342B               	retlw	43	;'+'
  1349  02D4  3444               	retlw	68	;'D'
  1350  02D5  344D               	retlw	77	;'M'
  1351  02D6  344F               	retlw	79	;'O'
  1352  02D7  3453               	retlw	83	;'S'
  1353  02D8  3445               	retlw	69	;'E'
  1354  02D9  3454               	retlw	84	;'T'
  1355  02DA  3456               	retlw	86	;'V'
  1356  02DB  344F               	retlw	79	;'O'
  1357  02DC  3458               	retlw	88	;'X'
  1358  02DD  343D               	retlw	61	;'='
  1359  02DE  3425               	retlw	37	;'%'
  1360  02DF  3463               	retlw	99	;'c'
  1361  02E0  3400               	retlw	0
  1362  02E1                     STR_2:	
  1363  02E1  3441               	retlw	65	;'A'
  1364  02E2  3454               	retlw	84	;'T'
  1365  02E3  342B               	retlw	43	;'+'
  1366  02E4  3444               	retlw	68	;'D'
  1367  02E5  344D               	retlw	77	;'M'
  1368  02E6  344F               	retlw	79	;'O'
  1369  02E7  3443               	retlw	67	;'C'
  1370  02E8  344F               	retlw	79	;'O'
  1371  02E9  344E               	retlw	78	;'N'
  1372  02EA  344E               	retlw	78	;'N'
  1373  02EB  3445               	retlw	69	;'E'
  1374  02EC  3443               	retlw	67	;'C'
  1375  02ED  3454               	retlw	84	;'T'
  1376  02EE  3400               	retlw	0
  1377  02EF                     STR_1:	
  1378  02EF  340D               	retlw	13
  1379  02F0  340A               	retlw	10
  1380  02F1  3400               	retlw	0
  1381  02EF                     
  1382                           ; #config settings
  1383  0000                     
  1384                           	psect	cinit
  1385  0018                     start_initialization:	
  1386  0018                     __initialization:	
  1387                           
  1388                           ; Clear objects allocated to BANK0
  1389  0018  3041               	movlw	low __pbssBANK0
  1390  0019  0084               	movwf	4
  1391  001A  3000               	movlw	high __pbssBANK0
  1392  001B  0085               	movwf	5
  1393  001C  300C               	movlw	12
  1394  001D  3185  25EA  3180   	fcall	clear_ram0
  1395                           
  1396                           ; Clear objects allocated to BANK1
  1397  0020  30A0               	movlw	low __pbssBANK1
  1398  0021  0084               	movwf	4
  1399  0022  3000               	movlw	high __pbssBANK1
  1400  0023  0085               	movwf	5
  1401  0024  302E               	movlw	46
  1402  0025  3185  25EA  3180   	fcall	clear_ram0
  1403                           
  1404                           ; Clear objects allocated to BANK2
  1405  0028  3020               	movlw	low __pbssBANK2
  1406  0029  0084               	movwf	4
  1407  002A  3001               	movlw	high __pbssBANK2
  1408  002B  0085               	movwf	5
  1409  002C  302E               	movlw	46
  1410  002D  3185  25EA  3180   	fcall	clear_ram0
  1411                           
  1412                           ; Initialize objects allocated to COMMON
  1413  0030  3186  2601         	fcall	__pidataCOMMON	;fetch initializer
  1414  0032  00FC               	movwf	__pdataCOMMON& (0+127)
  1415  0033                     end_of_initialization:	
  1416                           ;End of C runtime variable initialization code
  1417                           
  1418  0033                     __end_of__initialization:	
  1419  0033  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1420  0034  0020               	movlb	0
  1421  0035  3185  2D5D         	ljmp	_main	;jump to C main() function
  1422                           
  1423                           	psect	dataCOMMON
  1424  007C                     __pdataCOMMON:	
  1425  007C                     _Transmit_stall:	
  1426  007C                     	ds	1
  1427                           
  1428                           	psect	bssBANK0
  1429  0041                     __pbssBANK0:	
  1430  0041                     _Battery:	
  1431  0041                     	ds	3
  1432  0044                     _count:	
  1433  0044                     	ds	2
  1434  0046                     _ticker:	
  1435  0046                     	ds	2
  1436  0048                     _time:	
  1437  0048                     	ds	2
  1438  004A                     _Mode:	
  1439  004A                     	ds	1
  1440  004B                     _Shutdown:	
  1441  004B                     	ds	1
  1442  004C                     _Talking:	
  1443  004C                     	ds	1
  1444                           
  1445                           	psect	bssBANK1
  1446  00A0                     __pbssBANK1:	
  1447  00A0                     _input_buffer:	
  1448  00A0                     	ds	46
  1449                           
  1450                           	psect	bssBANK2
  1451  0120                     __pbssBANK2:	
  1452  0120                     _output_buffer:	
  1453  0120                     	ds	46
  1454                           
  1455                           	psect	clrtext
  1456  05EA                     clear_ram0:	
  1457                           ;	Called with FSR0 containing the base address, and
  1458                           ;	WREG with the size to clear
  1459                           
  1460  05EA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1461  05EB                     clrloop0:	
  1462  05EB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1463  05EC  3101               	addfsr 0,1
  1464  05ED  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1465  05EE  2DEB               	goto	clrloop0	;have we reached the end yet?
  1466  05EF  3400               	retlw	0	;all done for this memory range, return
  1467                           
  1468                           	psect	cstackCOMMON
  1469  0070                     __pcstackCOMMON:	
  1470  0070                     ?_Start:	
  1471  0070                     ?_RadioBegin:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0070                     ?_LEDOff:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0070                     ?_RadioOperation:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  0070                     ?_ADC_Initialize:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483  0070                     ?_EUSART1_Initialize:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0070                     ?_INTERRUPT_Initialize:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0070                     ?_TMR2_Initialize:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0070                     ?_TMR2_ISR:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495  0070                     ??_TMR2_ISR:	
  1496                           ; 1 bytes @ 0x0
  1497                           
  1498  0070                     ?_SetCommandMode:	
  1499                           ; 1 bytes @ 0x0
  1500                           
  1501  0070                     ?_SetFrequency:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504  0070                     ?_SetPowerSave:	
  1505                           ; 1 bytes @ 0x0
  1506                           
  1507  0070                     ?_SetVolume:	
  1508                           ; 1 bytes @ 0x0
  1509                           
  1510  0070                     ?_SetADCChannel:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513  0070                     ?_INTERRUPT_InterruptManager:	
  1514                           ; 1 bytes @ 0x0
  1515                           
  1516  0070                     ??_INTERRUPT_InterruptManager:	
  1517                           ; 1 bytes @ 0x0
  1518                           
  1519  0070                     ?_ReadCharger:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0070                     ?_ClearTicker:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0070                     ?_EUSART_Write:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0070                     ?_putch:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0070                     ?_SR_FRSTalk:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0070                     ?_SR_FRSPowerDown:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0070                     ?_SR_FRSStart:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0070                     ?_main:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0070                     ?_GetTicker:	
  1544                           ; 2 bytes @ 0x0
  1545                           
  1546                           
  1547                           ; 2 bytes @ 0x0
  1548  0070                     	ds	1
  1549  0071                     ?___ftge:	
  1550  0071                     ??_Start:	
  1551                           ; 1 bit 
  1552                           
  1553  0071                     ??_LEDOff:	
  1554                           ; 1 bytes @ 0x1
  1555                           
  1556  0071                     ?_Delay:	
  1557                           ; 1 bytes @ 0x1
  1558                           
  1559  0071                     ??_ADC_Initialize:	
  1560                           ; 1 bytes @ 0x1
  1561                           
  1562  0071                     ??_EUSART1_Initialize:	
  1563                           ; 1 bytes @ 0x1
  1564                           
  1565  0071                     ??_INTERRUPT_Initialize:	
  1566                           ; 1 bytes @ 0x1
  1567                           
  1568  0071                     ??_TMR2_Initialize:	
  1569                           ; 1 bytes @ 0x1
  1570                           
  1571  0071                     ??_SetADCChannel:	
  1572                           ; 1 bytes @ 0x1
  1573                           
  1574  0071                     ??_ReadCharger:	
  1575                           ; 1 bytes @ 0x1
  1576                           
  1577  0071                     ??_ClearTicker:	
  1578                           ; 1 bytes @ 0x1
  1579                           
  1580  0071                     ??_GetTicker:	
  1581                           ; 1 bytes @ 0x1
  1582                           
  1583  0071                     ??_EUSART_Write:	
  1584                           ; 1 bytes @ 0x1
  1585                           
  1586  0071                     ??_SR_FRSTalk:	
  1587                           ; 1 bytes @ 0x1
  1588                           
  1589  0071                     ??_SR_FRSPowerDown:	
  1590                           ; 1 bytes @ 0x1
  1591                           
  1592  0071                     ?___ftpack:	
  1593                           ; 1 bytes @ 0x1
  1594                           
  1595  0071                     EUSART_Write@txData:	
  1596                           ; 3 bytes @ 0x1
  1597                           
  1598  0071                     SetADCChannel@ch:	
  1599                           ; 1 bytes @ 0x1
  1600                           
  1601  0071                     Delay@wait:	
  1602                           ; 1 bytes @ 0x1
  1603                           
  1604  0071                     ___ftpack@arg:	
  1605                           ; 2 bytes @ 0x1
  1606                           
  1607  0071                     ___ftge@ff1:	
  1608                           ; 3 bytes @ 0x1
  1609                           
  1610                           
  1611                           ; 3 bytes @ 0x1
  1612  0071                     	ds	1
  1613  0072                     ??_putch:	
  1614  0072                     ?_ReadVoltage:	
  1615                           ; 1 bytes @ 0x2
  1616                           
  1617  0072                     putch@txData:	
  1618                           ; 2 bytes @ 0x2
  1619                           
  1620                           
  1621                           ; 1 bytes @ 0x2
  1622  0072                     	ds	1
  1623  0073                     ??_Delay:	
  1624  0073                     ?_printf:	
  1625                           ; 1 bytes @ 0x3
  1626                           
  1627  0073                     printf@f:	
  1628                           ; 2 bytes @ 0x3
  1629                           
  1630                           
  1631                           ; 2 bytes @ 0x3
  1632  0073                     	ds	1
  1633  0074                     ___ftpack@exp:	
  1634  0074                     Delay@x:	
  1635                           ; 1 bytes @ 0x4
  1636                           
  1637  0074                     ___ftge@ff2:	
  1638                           ; 2 bytes @ 0x4
  1639                           
  1640                           
  1641                           ; 3 bytes @ 0x4
  1642  0074                     	ds	1
  1643  0075                     ??_ReadVoltage:	
  1644  0075                     ReadVoltage@ch:	
  1645                           ; 1 bytes @ 0x5
  1646                           
  1647  0075                     ___ftpack@sign:	
  1648                           ; 1 bytes @ 0x5
  1649                           
  1650                           
  1651                           ; 1 bytes @ 0x5
  1652  0075                     	ds	1
  1653  0076                     ??___ftpack:	
  1654                           
  1655                           ; 1 bytes @ 0x6
  1656  0076                     	ds	1
  1657  0077                     ??___ftge:	
  1658                           
  1659                           ; 1 bytes @ 0x7
  1660  0077                     	ds	2
  1661  0079                     ??_printf:	
  1662  0079                     ?___awtoft:	
  1663                           ; 1 bytes @ 0x9
  1664                           
  1665  0079                     ___awtoft@c:	
  1666                           ; 3 bytes @ 0x9
  1667                           
  1668                           
  1669                           ; 2 bytes @ 0x9
  1670  0079                     	ds	3
  1671  007C                     ??_RadioBegin:	
  1672  007C                     ??_SetCommandMode:	
  1673                           ; 1 bytes @ 0xC
  1674                           
  1675  007C                     ??_SetFrequency:	
  1676                           ; 1 bytes @ 0xC
  1677                           
  1678  007C                     ??_SetPowerSave:	
  1679                           ; 1 bytes @ 0xC
  1680                           
  1681  007C                     ??_main:	
  1682                           ; 1 bytes @ 0xC
  1683                           
  1684  007C                     ??_SR_FRSStart:	
  1685                           ; 1 bytes @ 0xC
  1686                           
  1687                           
  1688                           	psect	cstackBANK0
  1689  0020                     __pcstackBANK0:	
  1690                           ; 1 bytes @ 0xC
  1691                           
  1692  0020                     ??___awtoft:	
  1693  0020                     ?___ftmul:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  0020                     printf@flag:	
  1697                           ; 3 bytes @ 0x0
  1698                           
  1699  0020                     ___ftmul@f1:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702                           
  1703                           ; 3 bytes @ 0x0
  1704  0020                     	ds	1
  1705  0021                     printf@ap:	
  1706                           
  1707                           ; 1 bytes @ 0x1
  1708  0021                     	ds	1
  1709  0022                     printf@c:	
  1710  0022                     ___awtoft@sign:	
  1711                           ; 1 bytes @ 0x2
  1712                           
  1713                           
  1714                           ; 1 bytes @ 0x2
  1715  0022                     	ds	1
  1716  0023                     ??_SetVolume:	
  1717  0023                     ?_SetVOX:	
  1718                           ; 1 bytes @ 0x3
  1719                           
  1720  0023                     ?_SetMIC:	
  1721                           ; 1 bytes @ 0x3
  1722                           
  1723  0023                     SetMIC@scram:	
  1724                           ; 1 bytes @ 0x3
  1725                           
  1726  0023                     SetVOX@volume:	
  1727                           ; 1 bytes @ 0x3
  1728                           
  1729  0023                     ___ftmul@f2:	
  1730                           ; 2 bytes @ 0x3
  1731                           
  1732                           
  1733                           ; 3 bytes @ 0x3
  1734  0023                     	ds	1
  1735  0024                     ??_SetMIC:	
  1736                           
  1737                           ; 1 bytes @ 0x4
  1738  0024                     	ds	1
  1739  0025                     ??_SetVOX:	
  1740  0025                     SetVolume@volume:	
  1741                           ; 1 bytes @ 0x5
  1742                           
  1743                           
  1744                           ; 1 bytes @ 0x5
  1745  0025                     	ds	1
  1746  0026                     ??___ftmul:	
  1747                           
  1748                           ; 1 bytes @ 0x6
  1749  0026                     	ds	2
  1750  0028                     SetMIC@volume:	
  1751                           
  1752                           ; 1 bytes @ 0x8
  1753  0028                     	ds	2
  1754  002A                     ___ftmul@exp:	
  1755                           
  1756                           ; 1 bytes @ 0xA
  1757  002A                     	ds	1
  1758  002B                     ___ftmul@f3_as_product:	
  1759                           
  1760                           ; 3 bytes @ 0xB
  1761  002B                     	ds	3
  1762  002E                     ___ftmul@cntr:	
  1763                           
  1764                           ; 1 bytes @ 0xE
  1765  002E                     	ds	1
  1766  002F                     ___ftmul@sign:	
  1767                           
  1768                           ; 1 bytes @ 0xF
  1769  002F                     	ds	1
  1770  0030                     ?___ftdiv:	
  1771  0030                     ___ftdiv@f2:	
  1772                           ; 3 bytes @ 0x10
  1773                           
  1774                           
  1775                           ; 3 bytes @ 0x10
  1776  0030                     	ds	3
  1777  0033                     ___ftdiv@f1:	
  1778                           
  1779                           ; 3 bytes @ 0x13
  1780  0033                     	ds	3
  1781  0036                     ??___ftdiv:	
  1782                           
  1783                           ; 1 bytes @ 0x16
  1784  0036                     	ds	4
  1785  003A                     ___ftdiv@cntr:	
  1786                           
  1787                           ; 1 bytes @ 0x1A
  1788  003A                     	ds	1
  1789  003B                     ___ftdiv@f3:	
  1790                           
  1791                           ; 3 bytes @ 0x1B
  1792  003B                     	ds	3
  1793  003E                     ___ftdiv@exp:	
  1794                           
  1795                           ; 1 bytes @ 0x1E
  1796  003E                     	ds	1
  1797  003F                     ___ftdiv@sign:	
  1798                           
  1799                           ; 1 bytes @ 0x1F
  1800  003F                     	ds	1
  1801  0040                     ??_RadioOperation:	
  1802                           
  1803                           ; 1 bytes @ 0x20
  1804  0040                     	ds	1
  1805                           
  1806                           	psect	maintext
  1807  055D                     __pmaintext:	
  1808 ;;
  1809 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1810 ;;
  1811 ;; *************** function _main *****************
  1812 ;; Defined at:
  1813 ;;		line 16 in file "Main.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  2   12[None  ] int 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : B1F/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels required when called:    8
  1833 ;; This function calls:
  1834 ;;		_Delay
  1835 ;;		_LEDOff
  1836 ;;		_RadioBegin
  1837 ;;		_RadioOperation
  1838 ;;		_Start
  1839 ;; This function is called by:
  1840 ;;		Startup code after reset
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function _main
  1846  055D                     _main:	
  1847                           
  1848                           ;Main.c: 17: Start();
  1849                           
  1850                           ;incstack = 0
  1851                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1852  055D  3184  2423  3185   	fcall	_Start
  1853                           
  1854                           ;Main.c: 18: RadioBegin();
  1855  0560  3185  25FE  3185   	fcall	_RadioBegin
  1856                           
  1857                           ;Main.c: 20: LEDOff();
  1858  0563  3185  25F5  3185   	fcall	_LEDOff
  1859  0566                     l1891:	
  1860                           ;Main.c: 21: while(1){
  1861                           
  1862                           
  1863                           ;Main.c: 22: RadioOperation();
  1864  0566  3180  2037  3185   	fcall	_RadioOperation
  1865                           
  1866                           ;Main.c: 23: Delay(100);
  1867  0569  3064               	movlw	100
  1868  056A  00F1               	movwf	Delay@wait
  1869  056B  3000               	movlw	0
  1870  056C  00F2               	movwf	Delay@wait+1
  1871  056D  3185  2500  3185   	fcall	_Delay
  1872  0570  2D66               	goto	l1891
  1873  0571                     __end_of_main:	
  1874                           ;Main.c: 24: }
  1875                           ;Main.c: 25: return 0;
  1876                           ;	Return value of _main is never used
  1877                           
  1878                           
  1879                           	psect	text1
  1880  0423                     __ptext1:	
  1881 ;; *************** function _Start *****************
  1882 ;; Defined at:
  1883 ;;		line 28 in file "Function.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;		None
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      void 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0, pclath, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;Total ram usage:        0 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    3
  1904 ;; This function calls:
  1905 ;;		_ADC_Initialize
  1906 ;;		_EUSART1_Initialize
  1907 ;;		_INTERRUPT_Initialize
  1908 ;;		_TMR2_Initialize
  1909 ;; This function is called by:
  1910 ;;		_main
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           
  1915                           ;psect for function _Start
  1916  0423                     _Start:	
  1917                           
  1918                           ;Function.c: 32: OSCCONbits.IRCF = 13;
  1919                           
  1920                           ;incstack = 0
  1921                           ; Regs used in _Start: [wreg+status,2+status,0+pclath+cstack]
  1922  0423  0021               	movlb	1	; select bank1
  1923  0424  0819               	movf	25,w	;volatile
  1924  0425  3987               	andlw	-121
  1925  0426  3868               	iorlw	104
  1926  0427  0099               	movwf	25	;volatile
  1927                           
  1928                           ;Function.c: 33: OSCCONbits.SCS = 2;
  1929  0428  0819               	movf	25,w	;volatile
  1930  0429  39FC               	andlw	-4
  1931  042A  3802               	iorlw	2
  1932  042B  0099               	movwf	25	;volatile
  1933                           
  1934                           ;Function.c: 34: OSCCONbits.SPLLEN = 0;
  1935  042C  1399               	bcf	25,7	;volatile
  1936                           
  1937                           ;Function.c: 38: TRISCbits.TRISC7 = 0;
  1938  042D  138E               	bcf	14,7	;volatile
  1939                           
  1940                           ;Function.c: 39: TRISCbits.TRISC6 = 0;
  1941  042E  130E               	bcf	14,6	;volatile
  1942                           
  1943                           ;Function.c: 40: TRISCbits.TRISC5 = 0;
  1944  042F  128E               	bcf	14,5	;volatile
  1945                           
  1946                           ;Function.c: 41: TRISCbits.TRISC4 = 0;
  1947  0430  120E               	bcf	14,4	;volatile
  1948                           
  1949                           ;Function.c: 42: TRISCbits.TRISC3 = 0;
  1950  0431  118E               	bcf	14,3	;volatile
  1951                           
  1952                           ;Function.c: 43: TRISAbits.TRISA2 = 1;
  1953  0432  150C               	bsf	12,2	;volatile
  1954                           
  1955                           ;Function.c: 44: TRISCbits.TRISC0 = 1;
  1956  0433  140E               	bsf	14,0	;volatile
  1957                           
  1958                           ;Function.c: 45: TRISCbits.TRISC1 = 1;
  1959  0434  148E               	bsf	14,1	;volatile
  1960                           
  1961                           ;Function.c: 46: TRISAbits.TRISA4 = 1;
  1962  0435  160C               	bsf	12,4	;volatile
  1963                           
  1964                           ;Function.c: 50: ANSELCbits.ANSC0 = 0;
  1965  0436  0023               	movlb	3	; select bank3
  1966  0437  100E               	bcf	14,0	;volatile
  1967                           
  1968                           ;Function.c: 51: ANSELCbits.ANSC1 = 0;
  1969  0438  108E               	bcf	14,1	;volatile
  1970                           
  1971                           ;Function.c: 52: ANSELAbits.ANSA2 = 0;
  1972  0439  110C               	bcf	12,2	;volatile
  1973                           
  1974                           ;Function.c: 53: ANSELCbits.ANSC3 = 0;
  1975  043A  118E               	bcf	14,3	;volatile
  1976                           
  1977                           ;Function.c: 54: ANSELCbits.ANSC6 = 0;
  1978  043B  130E               	bcf	14,6	;volatile
  1979                           
  1980                           ;Function.c: 55: ANSELCbits.ANSC7 = 0;
  1981  043C  138E               	bcf	14,7	;volatile
  1982                           
  1983                           ;Function.c: 58: APFCON0bits.RXDTSEL = 0;
  1984  043D  0022               	movlb	2	; select bank2
  1985  043E  139D               	bcf	29,7	;volatile
  1986                           
  1987                           ;Function.c: 59: APFCON0bits.TXCKSEL = 0;
  1988  043F  111D               	bcf	29,2	;volatile
  1989                           
  1990                           ;Function.c: 63: ADC_Initialize();
  1991  0440  3185  25D1  3184   	fcall	_ADC_Initialize
  1992                           
  1993                           ;Function.c: 67: EUSART1_Initialize();
  1994  0443  3185  25B2  3184   	fcall	_EUSART1_Initialize
  1995                           
  1996                           ;Function.c: 71: INTERRUPT_Initialize();
  1997  0446  3185  25C7  3184   	fcall	_INTERRUPT_Initialize
  1998                           
  1999                           ;Function.c: 72: TMR2_Initialize();
  2000  0449  3185  25BD         	fcall	_TMR2_Initialize
  2001  044B  0008               	return
  2002  044C                     __end_of_Start:	
  2003                           
  2004                           	psect	text2
  2005  05BD                     __ptext2:	
  2006 ;; *************** function _TMR2_Initialize *****************
  2007 ;; Defined at:
  2008 ;;		line 9 in file "Timer.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2026 ;;Total ram usage:        0 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    2
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_Start
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _TMR2_Initialize
  2038  05BD                     _TMR2_Initialize:	
  2039                           
  2040                           ;Timer.c: 14: T2CON = 0x00;
  2041                           
  2042                           ;incstack = 0
  2043                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  2044  05BD  0020               	movlb	0	; select bank0
  2045  05BE  019C               	clrf	28	;volatile
  2046                           
  2047                           ;Timer.c: 15: T2CONbits.TMR2ON = 0;
  2048  05BF  111C               	bcf	28,2	;volatile
  2049                           
  2050                           ;Timer.c: 18: PR2 = 18;
  2051  05C0  3012               	movlw	18
  2052  05C1  009B               	movwf	27	;volatile
  2053                           
  2054                           ;Timer.c: 21: TMR2 = 0;
  2055  05C2  019A               	clrf	26	;volatile
  2056                           
  2057                           ;Timer.c: 24: PIR1bits.TMR2IF = 0;
  2058  05C3  1091               	bcf	17,1	;volatile
  2059                           
  2060                           ;Timer.c: 27: PIE1bits.TMR2IE = 1;
  2061  05C4  0021               	movlb	1	; select bank1
  2062  05C5  1491               	bsf	17,1	;volatile
  2063  05C6  0008               	return
  2064  05C7                     __end_of_TMR2_Initialize:	
  2065                           
  2066                           	psect	text3
  2067  05C7                     __ptext3:	
  2068 ;; *************** function _INTERRUPT_Initialize *****************
  2069 ;; Defined at:
  2070 ;;		line 83 in file "Function.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		status,2
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2088 ;;Total ram usage:        0 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:    2
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_Start
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function _INTERRUPT_Initialize
  2100  05C7                     _INTERRUPT_Initialize:	
  2101                           
  2102                           ;Function.c: 85: INTCON = 0;
  2103                           
  2104                           ;incstack = 0
  2105                           ; Regs used in _INTERRUPT_Initialize: [status,2]
  2106  05C7  018B               	clrf	11	;volatile
  2107                           
  2108                           ;Function.c: 86: INTCONbits.TMR0IE = 0;
  2109  05C8  128B               	bcf	11,5	;volatile
  2110                           
  2111                           ;Function.c: 87: PIR1bits.TMR2IF = 0;
  2112  05C9  0020               	movlb	0	; select bank0
  2113  05CA  1091               	bcf	17,1	;volatile
  2114                           
  2115                           ;Function.c: 88: PIE1bits.TMR2IE = 1;
  2116  05CB  0021               	movlb	1	; select bank1
  2117  05CC  1491               	bsf	17,1	;volatile
  2118                           
  2119                           ;Function.c: 89: INTCONbits.TMR0IF = 0;
  2120  05CD  110B               	bcf	11,2	;volatile
  2121                           
  2122                           ;Function.c: 90: INTCONbits.GIE = 1;
  2123  05CE  178B               	bsf	11,7	;volatile
  2124                           
  2125                           ;Function.c: 91: INTCONbits.PEIE = 1;
  2126  05CF  170B               	bsf	11,6	;volatile
  2127  05D0  0008               	return
  2128  05D1                     __end_of_INTERRUPT_Initialize:	
  2129                           
  2130                           	psect	text4
  2131  05B2                     __ptext4:	
  2132 ;; *************** function _EUSART1_Initialize *****************
  2133 ;; Defined at:
  2134 ;;		line 10 in file "UART.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2152 ;;Total ram usage:        0 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    2
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_Start
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           
  2163                           ;psect for function _EUSART1_Initialize
  2164  05B2                     _EUSART1_Initialize:	
  2165                           
  2166                           ;UART.c: 12: BAUDCON = 0x08;
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in _EUSART1_Initialize: [wreg+status,2]
  2170  05B2  3008               	movlw	8
  2171  05B3  0023               	movlb	3	; select bank3
  2172  05B4  009F               	movwf	31	;volatile
  2173                           
  2174                           ;UART.c: 15: RCSTA = 0x90;
  2175  05B5  3090               	movlw	144
  2176  05B6  009D               	movwf	29	;volatile
  2177                           
  2178                           ;UART.c: 18: TXSTA = 0x24;
  2179  05B7  3024               	movlw	36
  2180  05B8  009E               	movwf	30	;volatile
  2181                           
  2182                           ;UART.c: 21: SPBRGL = 0x67;
  2183  05B9  3067               	movlw	103
  2184  05BA  009B               	movwf	27	;volatile
  2185                           
  2186                           ;UART.c: 24: SPBRGH = 0x00;
  2187  05BB  019C               	clrf	28	;volatile
  2188  05BC  0008               	return
  2189  05BD                     __end_of_EUSART1_Initialize:	
  2190                           
  2191                           	psect	text5
  2192  05D1                     __ptext5:	
  2193 ;; *************** function _ADC_Initialize *****************
  2194 ;; Defined at:
  2195 ;;		line 4 in file "ADC.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		None
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;Total ram usage:        0 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:    2
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_Start
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           
  2224                           ;psect for function _ADC_Initialize
  2225  05D1                     _ADC_Initialize:	
  2226                           
  2227                           ;ADC.c: 5: FVRCONbits.ADFVR0 = 1;
  2228                           
  2229                           ;incstack = 0
  2230                           ; Regs used in _ADC_Initialize: []
  2231  05D1  0022               	movlb	2	; select bank2
  2232  05D2  1417               	bsf	23,0	;volatile
  2233                           
  2234                           ;ADC.c: 6: FVRCONbits.ADFVR1 = 1;
  2235  05D3  1497               	bsf	23,1	;volatile
  2236                           
  2237                           ;ADC.c: 7: ADCON1bits.ADFM = 1;
  2238  05D4  0021               	movlb	1	; select bank1
  2239  05D5  179E               	bsf	30,7	;volatile
  2240                           
  2241                           ;ADC.c: 8: ADCON1bits.ADCS0 = 0;
  2242  05D6  121E               	bcf	30,4	;volatile
  2243                           
  2244                           ;ADC.c: 9: ADCON1bits.ADCS1 = 0;
  2245  05D7  129E               	bcf	30,5	;volatile
  2246                           
  2247                           ;ADC.c: 10: ADCON1bits.ADCS2 = 1;
  2248  05D8  171E               	bsf	30,6	;volatile
  2249                           
  2250                           ;ADC.c: 11: ADCON0bits.ADON = 1;
  2251  05D9  141D               	bsf	29,0	;volatile
  2252  05DA  0008               	return
  2253  05DB                     __end_of_ADC_Initialize:	
  2254                           
  2255                           	psect	text6
  2256  0037                     __ptext6:	
  2257 ;; *************** function _RadioOperation *****************
  2258 ;; Defined at:
  2259 ;;		line 25 in file "Radio.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0, pclath, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2275 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2276 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2277 ;;Total ram usage:        1 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    4
  2280 ;; This function calls:
  2281 ;;		_ClearTicker
  2282 ;;		_GetTicker
  2283 ;;		_ReadCharger
  2284 ;;		_ReadVoltage
  2285 ;;		_SR_FRSPowerDown
  2286 ;;		_SR_FRSTalk
  2287 ;;		___awtoft
  2288 ;;		___ftdiv
  2289 ;;		___ftge
  2290 ;;		___ftmul
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           
  2297                           ;psect for function _RadioOperation
  2298  0037                     _RadioOperation:	
  2299                           
  2300                           ;Radio.c: 26: if(!PORTAbits.RA2 && !Talking){
  2301                           
  2302                           ;incstack = 0
  2303                           ; Regs used in _RadioOperation: [wreg+status,2+status,0+pclath+cstack]
  2304  0037  0020               	movlb	0	; select bank0
  2305  0038  190C               	btfsc	12,2	;volatile
  2306  0039  2841               	goto	l244
  2307  003A  084C               	movf	_Talking,w
  2308  003B  1D03               	btfss	3,2
  2309  003C  2841               	goto	l244
  2310                           
  2311                           ;Radio.c: 27: count++;
  2312  003D  3001               	movlw	1
  2313  003E  07C4               	addwf	_count,f
  2314  003F  3000               	movlw	0
  2315  0040  3DC5               	addwfc	_count+1,f
  2316  0041                     l244:	
  2317                           
  2318                           ;Radio.c: 28: }
  2319                           ;Radio.c: 29: if((count > 5) && !Talking){
  2320  0041  0845               	movf	_count+1,w
  2321  0042  3A80               	xorlw	128
  2322  0043  00C0               	movwf	??_RadioOperation
  2323  0044  3080               	movlw	128
  2324  0045  0240               	subwf	??_RadioOperation,w
  2325  0046  1D03               	skipz
  2326  0047  284A               	goto	u1855
  2327  0048  3006               	movlw	6
  2328  0049  0244               	subwf	_count,w
  2329  004A                     u1855:	
  2330  004A  1C03               	skipc
  2331  004B  285A               	goto	l1831
  2332  004C  0020               	movlb	0	; select bank0
  2333  004D  084C               	movf	_Talking,w
  2334  004E  1D03               	btfss	3,2
  2335  004F  285A               	goto	l1831
  2336                           
  2337                           ;Radio.c: 30: SR_FRSTalk();
  2338  0050  3185  2595  3180   	fcall	_SR_FRSTalk
  2339                           
  2340                           ;Radio.c: 31: PORTCbits.RC3 = 1;
  2341  0053  0020               	movlb	0	; select bank0
  2342  0054  158E               	bsf	14,3	;volatile
  2343                           
  2344                           ;Radio.c: 32: Talking = 1;
  2345  0055  01CC               	clrf	_Talking
  2346  0056  0ACC               	incf	_Talking,f
  2347                           
  2348                           ;Radio.c: 34: ClearTicker();
  2349  0057  3185  25FA  3180   	fcall	_ClearTicker
  2350  005A                     l1831:	
  2351                           
  2352                           ;Radio.c: 35: }
  2353                           ;Radio.c: 36: if(Talking && PORTAbits.RA2){
  2354  005A  0020               	movlb	0	; select bank0
  2355  005B  084C               	movf	_Talking,w
  2356  005C  1D03               	btfss	3,2
  2357  005D  1D0C               	btfss	12,2	;volatile
  2358  005E  2877               	goto	l1845
  2359                           
  2360                           ;Radio.c: 37: count--;
  2361  005F  30FF               	movlw	255
  2362  0060  07C4               	addwf	_count,f
  2363  0061  30FF               	movlw	255
  2364  0062  3DC5               	addwfc	_count+1,f
  2365                           
  2366                           ;Radio.c: 38: if(count < 5){
  2367  0063  0845               	movf	_count+1,w
  2368  0064  3A80               	xorlw	128
  2369  0065  00C0               	movwf	??_RadioOperation
  2370  0066  3080               	movlw	128
  2371  0067  0240               	subwf	??_RadioOperation,w
  2372  0068  1D03               	skipz
  2373  0069  286C               	goto	u1895
  2374  006A  3005               	movlw	5
  2375  006B  0244               	subwf	_count,w
  2376  006C                     u1895:	
  2377  006C  1803               	skipnc
  2378  006D  2877               	goto	l1845
  2379                           
  2380                           ;Radio.c: 39: PORTCbits.RC3 = 0;
  2381  006E  0020               	movlb	0	; select bank0
  2382  006F  118E               	bcf	14,3	;volatile
  2383                           
  2384                           ;Radio.c: 40: SR_FRSTalk();
  2385  0070  3185  2595  3180   	fcall	_SR_FRSTalk
  2386                           
  2387                           ;Radio.c: 42: count = 0;
  2388  0073  0020               	movlb	0	; select bank0
  2389  0074  01C4               	clrf	_count
  2390  0075  01C5               	clrf	_count+1
  2391                           
  2392                           ;Radio.c: 43: Talking = 0;
  2393  0076  01CC               	clrf	_Talking
  2394  0077                     l1845:	
  2395                           
  2396                           ;Radio.c: 44: }
  2397                           ;Radio.c: 45: }
  2398                           ;Radio.c: 46: if(Talking && !PORTAbits.RA2){
  2399  0077  0020               	movlb	0	; select bank0
  2400  0078  084C               	movf	_Talking,w
  2401  0079  1D03               	btfss	3,2
  2402  007A  190C               	btfsc	12,2	;volatile
  2403  007B  2880               	goto	l1851
  2404                           
  2405                           ;Radio.c: 47: count = 5;
  2406  007C  3005               	movlw	5
  2407  007D  00C4               	movwf	_count
  2408  007E  3000               	movlw	0
  2409  007F  00C5               	movwf	_count+1
  2410  0080                     l1851:	
  2411                           
  2412                           ;Radio.c: 48: }
  2413                           ;Radio.c: 49: if(GetTicker() > 100000){
  2414  0080  3186  2602  3180   	fcall	_GetTicker
  2415                           
  2416                           ;Radio.c: 53: }
  2417                           ;Radio.c: 54: if(time > 15){
  2418                           
  2419                           ;Radio.c: 52: PORTCbits.RC4 = 1;
  2420                           
  2421                           ;Radio.c: 51: SR_FRSPowerDown();
  2422  0083  0020               	movlb	0	; select bank0
  2423  0084  0849               	movf	_time+1,w
  2424  0085  3A80               	xorlw	128
  2425  0086  00C0               	movwf	??_RadioOperation
  2426  0087  3080               	movlw	128
  2427  0088  0240               	subwf	??_RadioOperation,w
  2428  0089  1D03               	skipz
  2429  008A  288D               	goto	u1925
  2430  008B  3010               	movlw	16
  2431  008C  0248               	subwf	_time,w
  2432  008D                     u1925:	
  2433  008D  1C03               	skipc
  2434  008E  28D2               	goto	l1867
  2435                           
  2436                           ;Radio.c: 55: PORTCbits.RC5 = 1;
  2437  008F  0020               	movlb	0	; select bank0
  2438  0090  168E               	bsf	14,5	;volatile
  2439                           
  2440                           ;Radio.c: 56: Battery = ReadVoltage(1);
  2441  0091  3001               	movlw	1
  2442  0092  3185  25A4  3180   	fcall	_ReadVoltage
  2443  0095  0873               	movf	?_ReadVoltage+1,w
  2444  0096  00FA               	movwf	___awtoft@c+1
  2445  0097  0872               	movf	?_ReadVoltage,w
  2446  0098  00F9               	movwf	___awtoft@c
  2447  0099  3184  24C1  3180   	fcall	___awtoft
  2448  009C  0879               	movf	?___awtoft,w
  2449  009D  0020               	movlb	0	; select bank0
  2450  009E  00C1               	movwf	_Battery
  2451  009F  087A               	movf	?___awtoft+1,w
  2452  00A0  00C2               	movwf	_Battery+1
  2453  00A1  087B               	movf	?___awtoft+2,w
  2454  00A2  00C3               	movwf	_Battery+2
  2455                           
  2456                           ;Radio.c: 57: Battery = (Battery*5.0)/1023.0;
  2457  00A3  30C0               	movlw	192
  2458  00A4  00B0               	movwf	___ftdiv@f2
  2459  00A5  307F               	movlw	127
  2460  00A6  00B1               	movwf	___ftdiv@f2+1
  2461  00A7  3044               	movlw	68
  2462  00A8  00B2               	movwf	___ftdiv@f2+2
  2463  00A9  3000               	movlw	0
  2464  00AA  00A0               	movwf	___ftmul@f1
  2465  00AB  30A0               	movlw	160
  2466  00AC  00A1               	movwf	___ftmul@f1+1
  2467  00AD  3040               	movlw	64
  2468  00AE  00A2               	movwf	___ftmul@f1+2
  2469  00AF  0841               	movf	_Battery,w
  2470  00B0  00A3               	movwf	___ftmul@f2
  2471  00B1  0842               	movf	_Battery+1,w
  2472  00B2  00A4               	movwf	___ftmul@f2+1
  2473  00B3  0843               	movf	_Battery+2,w
  2474  00B4  00A5               	movwf	___ftmul@f2+2
  2475  00B5  3181  2109  3180   	fcall	___ftmul
  2476  00B8  0020               	movlb	0	; select bank0
  2477  00B9  0820               	movf	?___ftmul,w
  2478  00BA  00B3               	movwf	___ftdiv@f1
  2479  00BB  0821               	movf	?___ftmul+1,w
  2480  00BC  00B4               	movwf	___ftdiv@f1+1
  2481  00BD  0822               	movf	?___ftmul+2,w
  2482  00BE  00B5               	movwf	___ftdiv@f1+2
  2483  00BF  3181  21BD  3180   	fcall	___ftdiv
  2484  00C2  0020               	movlb	0	; select bank0
  2485  00C3  0830               	movf	?___ftdiv,w
  2486  00C4  00C1               	movwf	_Battery
  2487  00C5  0831               	movf	?___ftdiv+1,w
  2488  00C6  00C2               	movwf	_Battery+1
  2489  00C7  0832               	movf	?___ftdiv+2,w
  2490  00C8  00C3               	movwf	_Battery+2
  2491                           
  2492                           ;Radio.c: 58: time = 0;
  2493  00C9  01C8               	clrf	_time
  2494  00CA  01C9               	clrf	_time+1
  2495                           
  2496                           ;Radio.c: 59: Mode = ReadCharger();
  2497  00CB  3185  2571  3180   	fcall	_ReadCharger
  2498  00CE  0020               	movlb	0	; select bank0
  2499  00CF  00C0               	movwf	??_RadioOperation
  2500  00D0  0840               	movf	??_RadioOperation,w
  2501  00D1  00CA               	movwf	_Mode
  2502  00D2                     l1867:	
  2503                           
  2504                           ;Radio.c: 60: }
  2505                           ;Radio.c: 61: if((time > 1) && (PORTCbits.RC5 == 1)){
  2506  00D2  0020               	movlb	0	; select bank0
  2507  00D3  0849               	movf	_time+1,w
  2508  00D4  3A80               	xorlw	128
  2509  00D5  00C0               	movwf	??_RadioOperation
  2510  00D6  3080               	movlw	128
  2511  00D7  0240               	subwf	??_RadioOperation,w
  2512  00D8  1D03               	skipz
  2513  00D9  28DC               	goto	u1935
  2514  00DA  3002               	movlw	2
  2515  00DB  0248               	subwf	_time,w
  2516  00DC                     u1935:	
  2517  00DC  1C03               	skipc
  2518  00DD  28E2               	goto	l1873
  2519  00DE  0020               	movlb	0	; select bank0
  2520  00DF  1E8E               	btfss	14,5	;volatile
  2521  00E0  28E2               	goto	l1873
  2522                           
  2523                           ;Radio.c: 62: PORTCbits.RC5 = 0;
  2524  00E1  128E               	bcf	14,5	;volatile
  2525  00E2                     l1873:	
  2526                           
  2527                           ;Radio.c: 63: }
  2528                           ;Radio.c: 64: if(Battery < 6.2){
  2529  00E2  0020               	movlb	0	; select bank0
  2530  00E3  0841               	movf	_Battery,w
  2531  00E4  00F1               	movwf	___ftge@ff1
  2532  00E5  0842               	movf	_Battery+1,w
  2533  00E6  00F2               	movwf	___ftge@ff1+1
  2534  00E7  0843               	movf	_Battery+2,w
  2535  00E8  00F3               	movwf	___ftge@ff1+2
  2536  00E9  3066               	movlw	102
  2537  00EA  00F4               	movwf	___ftge@ff2
  2538  00EB  30C6               	movlw	198
  2539  00EC  00F5               	movwf	___ftge@ff2+1
  2540  00ED  3040               	movlw	64
  2541  00EE  00F6               	movwf	___ftge@ff2+2
  2542  00EF  3183  23E8  3180   	fcall	___ftge
  2543                           
  2544                           ;Radio.c: 67: }
  2545                           ;Radio.c: 68: if(ReadCharger() == 1){
  2546  00F2  3185  2571  3180   	fcall	_ReadCharger
  2547  00F5  3A01               	xorlw	1
  2548  00F6  1D03               	skipz
  2549  00F7  28FA               	goto	l1879
  2550                           
  2551                           ;Radio.c: 70: PORTCbits.RC4 = 1;
  2552  00F8  0020               	movlb	0	; select bank0
  2553  00F9  160E               	bsf	14,4	;volatile
  2554  00FA                     l1879:	
  2555                           
  2556                           ;Radio.c: 71: }
  2557                           ;Radio.c: 72: if(ReadCharger() == 2){
  2558  00FA  3185  2571  3180   	fcall	_ReadCharger
  2559  00FD  3A02               	xorlw	2
  2560  00FE  1D03               	skipz
  2561  00FF  2903               	goto	l1883
  2562                           
  2563                           ;Radio.c: 73: PORTCbits.RC4 = 0;
  2564  0100  0020               	movlb	0	; select bank0
  2565  0101  120E               	bcf	14,4	;volatile
  2566                           
  2567                           ;Radio.c: 74: PORTCbits.RC5 = 1;
  2568  0102  168E               	bsf	14,5	;volatile
  2569  0103                     l1883:	
  2570                           
  2571                           ;Radio.c: 75: }
  2572                           ;Radio.c: 76: time++;
  2573  0103  3001               	movlw	1
  2574  0104  0020               	movlb	0	; select bank0
  2575  0105  07C8               	addwf	_time,f
  2576  0106  3000               	movlw	0
  2577  0107  3DC9               	addwfc	_time+1,f
  2578  0108  0008               	return
  2579  0109                     __end_of_RadioOperation:	
  2580                           
  2581                           	psect	text7
  2582  0109                     __ptext7:	
  2583 ;; *************** function ___ftmul *****************
  2584 ;; Defined at:
  2585 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  f1              3    0[BANK0 ] float 
  2588 ;;  f2              3    3[BANK0 ] float 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  2591 ;;  sign            1   15[BANK0 ] unsigned char 
  2592 ;;  cntr            1   14[BANK0 ] unsigned char 
  2593 ;;  exp             1   10[BANK0 ] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  3    0[BANK0 ] float 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0, pclath, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2603 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2604 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2605 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2606 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2607 ;;Total ram usage:       16 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    3
  2610 ;; This function calls:
  2611 ;;		___ftpack
  2612 ;; This function is called by:
  2613 ;;		_RadioOperation
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           
  2618                           ;psect for function ___ftmul
  2619  0109                     ___ftmul:	
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2623  0109  0020               	movlb	0	; select bank0
  2624  010A  0820               	movf	___ftmul@f1,w
  2625  010B  00A6               	movwf	??___ftmul
  2626  010C  0821               	movf	___ftmul@f1+1,w
  2627  010D  00A7               	movwf	??___ftmul+1
  2628  010E  0822               	movf	___ftmul@f1+2,w
  2629  010F  00A8               	movwf	??___ftmul+2
  2630  0110  1003               	clrc
  2631  0111  0D27               	rlf	??___ftmul+1,w
  2632  0112  0D28               	rlf	??___ftmul+2,w
  2633  0113  00A9               	movwf	??___ftmul+3
  2634  0114  0829               	movf	??___ftmul+3,w
  2635  0115  00AA               	movwf	___ftmul@exp
  2636  0116  082A               	movf	___ftmul@exp,w
  2637  0117  1D03               	btfss	3,2
  2638  0118  2920               	goto	l1769
  2639  0119  3000               	movlw	0
  2640  011A  00A0               	movwf	?___ftmul
  2641  011B  3000               	movlw	0
  2642  011C  00A1               	movwf	?___ftmul+1
  2643  011D  3000               	movlw	0
  2644  011E  00A2               	movwf	?___ftmul+2
  2645  011F  0008               	return
  2646  0120                     l1769:	
  2647  0120  0823               	movf	___ftmul@f2,w
  2648  0121  00A6               	movwf	??___ftmul
  2649  0122  0824               	movf	___ftmul@f2+1,w
  2650  0123  00A7               	movwf	??___ftmul+1
  2651  0124  0825               	movf	___ftmul@f2+2,w
  2652  0125  00A8               	movwf	??___ftmul+2
  2653  0126  1003               	clrc
  2654  0127  0D27               	rlf	??___ftmul+1,w
  2655  0128  0D28               	rlf	??___ftmul+2,w
  2656  0129  00A9               	movwf	??___ftmul+3
  2657  012A  0829               	movf	??___ftmul+3,w
  2658  012B  00AF               	movwf	___ftmul@sign
  2659  012C  082F               	movf	___ftmul@sign,w
  2660  012D  1D03               	btfss	3,2
  2661  012E  2936               	goto	l1775
  2662  012F  3000               	movlw	0
  2663  0130  00A0               	movwf	?___ftmul
  2664  0131  3000               	movlw	0
  2665  0132  00A1               	movwf	?___ftmul+1
  2666  0133  3000               	movlw	0
  2667  0134  00A2               	movwf	?___ftmul+2
  2668  0135  0008               	return
  2669  0136                     l1775:	
  2670  0136  082F               	movf	___ftmul@sign,w
  2671  0137  3E7B               	addlw	123
  2672  0138  00A6               	movwf	??___ftmul
  2673  0139  0826               	movf	??___ftmul,w
  2674  013A  07AA               	addwf	___ftmul@exp,f
  2675  013B  0820               	movf	___ftmul@f1,w
  2676  013C  00A6               	movwf	??___ftmul
  2677  013D  0821               	movf	___ftmul@f1+1,w
  2678  013E  00A7               	movwf	??___ftmul+1
  2679  013F  0822               	movf	___ftmul@f1+2,w
  2680  0140  00A8               	movwf	??___ftmul+2
  2681  0141  3010               	movlw	16
  2682  0142                     u1735:	
  2683  0142  36A8               	lsrf	??___ftmul+2,f
  2684  0143  0CA7               	rrf	??___ftmul+1,f
  2685  0144  0CA6               	rrf	??___ftmul,f
  2686  0145  0B89               	decfsz	9,f
  2687  0146  2942               	goto	u1735
  2688  0147  0826               	movf	??___ftmul,w
  2689  0148  00A9               	movwf	??___ftmul+3
  2690  0149  0829               	movf	??___ftmul+3,w
  2691  014A  00AF               	movwf	___ftmul@sign
  2692  014B  0823               	movf	___ftmul@f2,w
  2693  014C  00A6               	movwf	??___ftmul
  2694  014D  0824               	movf	___ftmul@f2+1,w
  2695  014E  00A7               	movwf	??___ftmul+1
  2696  014F  0825               	movf	___ftmul@f2+2,w
  2697  0150  00A8               	movwf	??___ftmul+2
  2698  0151  3010               	movlw	16
  2699  0152                     u1745:	
  2700  0152  36A8               	lsrf	??___ftmul+2,f
  2701  0153  0CA7               	rrf	??___ftmul+1,f
  2702  0154  0CA6               	rrf	??___ftmul,f
  2703  0155  0B89               	decfsz	9,f
  2704  0156  2952               	goto	u1745
  2705  0157  0826               	movf	??___ftmul,w
  2706  0158  00A9               	movwf	??___ftmul+3
  2707  0159  0829               	movf	??___ftmul+3,w
  2708  015A  06AF               	xorwf	___ftmul@sign,f
  2709  015B  3080               	movlw	128
  2710  015C  00A6               	movwf	??___ftmul
  2711  015D  0826               	movf	??___ftmul,w
  2712  015E  05AF               	andwf	___ftmul@sign,f
  2713  015F  17A1               	bsf	___ftmul@f1+1,7
  2714  0160  17A4               	bsf	___ftmul@f2+1,7
  2715  0161  30FF               	movlw	255
  2716  0162  05A3               	andwf	___ftmul@f2,f
  2717  0163  30FF               	movlw	255
  2718  0164  05A4               	andwf	___ftmul@f2+1,f
  2719  0165  3000               	movlw	0
  2720  0166  05A5               	andwf	___ftmul@f2+2,f
  2721  0167  3000               	movlw	0
  2722  0168  00AB               	movwf	___ftmul@f3_as_product
  2723  0169  3000               	movlw	0
  2724  016A  00AC               	movwf	___ftmul@f3_as_product+1
  2725  016B  3000               	movlw	0
  2726  016C  00AD               	movwf	___ftmul@f3_as_product+2
  2727  016D  3007               	movlw	7
  2728  016E  00A6               	movwf	??___ftmul
  2729  016F  0826               	movf	??___ftmul,w
  2730  0170  00AE               	movwf	___ftmul@cntr
  2731  0171                     l1787:	
  2732  0171  1C20               	btfss	___ftmul@f1,0
  2733  0172  2979               	goto	l1791
  2734  0173  0823               	movf	___ftmul@f2,w
  2735  0174  07AB               	addwf	___ftmul@f3_as_product,f
  2736  0175  0824               	movf	___ftmul@f2+1,w
  2737  0176  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2738  0177  0825               	movf	___ftmul@f2+2,w
  2739  0178  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2740  0179                     l1791:	
  2741  0179  3001               	movlw	1
  2742  017A                     u1765:	
  2743  017A  36A2               	lsrf	___ftmul@f1+2,f
  2744  017B  0CA1               	rrf	___ftmul@f1+1,f
  2745  017C  0CA0               	rrf	___ftmul@f1,f
  2746  017D  0B89               	decfsz	9,f
  2747  017E  297A               	goto	u1765
  2748  017F  3001               	movlw	1
  2749  0180                     u1775:	
  2750  0180  35A3               	lslf	___ftmul@f2,f
  2751  0181  0DA4               	rlf	___ftmul@f2+1,f
  2752  0182  0DA5               	rlf	___ftmul@f2+2,f
  2753  0183  0B89               	decfsz	9,f
  2754  0184  2980               	goto	u1775
  2755  0185  3001               	movlw	1
  2756  0186  02AE               	subwf	___ftmul@cntr,f
  2757  0187  1D03               	btfss	3,2
  2758  0188  2971               	goto	l1787
  2759  0189  3009               	movlw	9
  2760  018A  00A6               	movwf	??___ftmul
  2761  018B  0826               	movf	??___ftmul,w
  2762  018C  00AE               	movwf	___ftmul@cntr
  2763  018D                     l1799:	
  2764  018D  1C20               	btfss	___ftmul@f1,0
  2765  018E  2995               	goto	l1803
  2766  018F  0823               	movf	___ftmul@f2,w
  2767  0190  07AB               	addwf	___ftmul@f3_as_product,f
  2768  0191  0824               	movf	___ftmul@f2+1,w
  2769  0192  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2770  0193  0825               	movf	___ftmul@f2+2,w
  2771  0194  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2772  0195                     l1803:	
  2773  0195  3001               	movlw	1
  2774  0196                     u1805:	
  2775  0196  36A2               	lsrf	___ftmul@f1+2,f
  2776  0197  0CA1               	rrf	___ftmul@f1+1,f
  2777  0198  0CA0               	rrf	___ftmul@f1,f
  2778  0199  0B89               	decfsz	9,f
  2779  019A  2996               	goto	u1805
  2780  019B  3001               	movlw	1
  2781  019C                     u1815:	
  2782  019C  36AD               	lsrf	___ftmul@f3_as_product+2,f
  2783  019D  0CAC               	rrf	___ftmul@f3_as_product+1,f
  2784  019E  0CAB               	rrf	___ftmul@f3_as_product,f
  2785  019F  0B89               	decfsz	9,f
  2786  01A0  299C               	goto	u1815
  2787  01A1  3001               	movlw	1
  2788  01A2  02AE               	subwf	___ftmul@cntr,f
  2789  01A3  1D03               	btfss	3,2
  2790  01A4  298D               	goto	l1799
  2791  01A5  082B               	movf	___ftmul@f3_as_product,w
  2792  01A6  00F1               	movwf	___ftpack@arg
  2793  01A7  082C               	movf	___ftmul@f3_as_product+1,w
  2794  01A8  00F2               	movwf	___ftpack@arg+1
  2795  01A9  082D               	movf	___ftmul@f3_as_product+2,w
  2796  01AA  00F3               	movwf	___ftpack@arg+2
  2797  01AB  082A               	movf	___ftmul@exp,w
  2798  01AC  00A6               	movwf	??___ftmul
  2799  01AD  0826               	movf	??___ftmul,w
  2800  01AE  00F4               	movwf	___ftpack@exp
  2801  01AF  082F               	movf	___ftmul@sign,w
  2802  01B0  00A7               	movwf	??___ftmul+1
  2803  01B1  0827               	movf	??___ftmul+1,w
  2804  01B2  00F5               	movwf	___ftpack@sign
  2805  01B3  3182  22F2         	fcall	___ftpack
  2806  01B5  0871               	movf	?___ftpack,w
  2807  01B6  0020               	movlb	0	; select bank0
  2808  01B7  00A0               	movwf	?___ftmul
  2809  01B8  0872               	movf	?___ftpack+1,w
  2810  01B9  00A1               	movwf	?___ftmul+1
  2811  01BA  0873               	movf	?___ftpack+2,w
  2812  01BB  00A2               	movwf	?___ftmul+2
  2813  01BC  0008               	return
  2814  01BD                     __end_of___ftmul:	
  2815                           
  2816                           	psect	text8
  2817  03E8                     __ptext8:	
  2818 ;; *************** function ___ftge *****************
  2819 ;; Defined at:
  2820 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftge.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  ff1             3    1[COMMON] float 
  2823 ;;  ff2             3    4[COMMON] float 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;		None               void
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2835 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2837 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2838 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2839 ;;Total ram usage:        9 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    2
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_RadioOperation
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           
  2850                           ;psect for function ___ftge
  2851  03E8                     ___ftge:	
  2852                           
  2853                           ;incstack = 0
  2854                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2855  03E8  1FF3               	btfss	___ftge@ff1+2,7
  2856  03E9  2BFE               	goto	l1455
  2857  03EA  0971               	comf	___ftge@ff1,w
  2858  03EB  00F7               	movwf	??___ftge
  2859  03EC  0972               	comf	___ftge@ff1+1,w
  2860  03ED  00F8               	movwf	??___ftge+1
  2861  03EE  0973               	comf	___ftge@ff1+2,w
  2862  03EF  00F9               	movwf	??___ftge+2
  2863  03F0  0AF7               	incf	??___ftge,f
  2864  03F1  1903               	skipnz
  2865  03F2  0AF8               	incf	??___ftge+1,f
  2866  03F3  1903               	skipnz
  2867  03F4  0AF9               	incf	??___ftge+2,f
  2868  03F5  3000               	movlw	0
  2869  03F6  0777               	addwf	??___ftge,w
  2870  03F7  00F1               	movwf	___ftge@ff1
  2871  03F8  3000               	movlw	0
  2872  03F9  3D78               	addwfc	??___ftge+1,w
  2873  03FA  00F2               	movwf	___ftge@ff1+1
  2874  03FB  3080               	movlw	128
  2875  03FC  3D79               	addwfc	??___ftge+2,w
  2876  03FD  00F3               	movwf	___ftge@ff1+2
  2877  03FE                     l1455:	
  2878  03FE  1FF6               	btfss	___ftge@ff2+2,7
  2879  03FF  2C14               	goto	l1459
  2880  0400  0974               	comf	___ftge@ff2,w
  2881  0401  00F7               	movwf	??___ftge
  2882  0402  0975               	comf	___ftge@ff2+1,w
  2883  0403  00F8               	movwf	??___ftge+1
  2884  0404  0976               	comf	___ftge@ff2+2,w
  2885  0405  00F9               	movwf	??___ftge+2
  2886  0406  0AF7               	incf	??___ftge,f
  2887  0407  1903               	skipnz
  2888  0408  0AF8               	incf	??___ftge+1,f
  2889  0409  1903               	skipnz
  2890  040A  0AF9               	incf	??___ftge+2,f
  2891  040B  3000               	movlw	0
  2892  040C  0777               	addwf	??___ftge,w
  2893  040D  00F4               	movwf	___ftge@ff2
  2894  040E  3000               	movlw	0
  2895  040F  3D78               	addwfc	??___ftge+1,w
  2896  0410  00F5               	movwf	___ftge@ff2+1
  2897  0411  3080               	movlw	128
  2898  0412  3D79               	addwfc	??___ftge+2,w
  2899  0413  00F6               	movwf	___ftge@ff2+2
  2900  0414                     l1459:	
  2901  0414  3080               	movlw	128
  2902  0415  06F3               	xorwf	___ftge@ff1+2,f
  2903  0416  3080               	movlw	128
  2904  0417  06F6               	xorwf	___ftge@ff2+2,f
  2905  0418  0876               	movf	___ftge@ff2+2,w
  2906  0419  0273               	subwf	___ftge@ff1+2,w
  2907  041A  1D03               	skipz
  2908  041B  0008               	return
  2909  041C  0875               	movf	___ftge@ff2+1,w
  2910  041D  0272               	subwf	___ftge@ff1+1,w
  2911  041E  1D03               	skipz
  2912  041F  0008               	return
  2913  0420  0874               	movf	___ftge@ff2,w
  2914  0421  0271               	subwf	___ftge@ff1,w
  2915  0422  0008               	return
  2916  0423                     __end_of___ftge:	
  2917                           
  2918                           	psect	text9
  2919  01BD                     __ptext9:	
  2920 ;; *************** function ___ftdiv *****************
  2921 ;; Defined at:
  2922 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  f2              3   16[BANK0 ] float 
  2925 ;;  f1              3   19[BANK0 ] float 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  f3              3   27[BANK0 ] float 
  2928 ;;  sign            1   31[BANK0 ] unsigned char 
  2929 ;;  exp             1   30[BANK0 ] unsigned char 
  2930 ;;  cntr            1   26[BANK0 ] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  3   16[BANK0 ] float 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0, pclath, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2940 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2941 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2942 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2943 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2944 ;;Total ram usage:       16 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    3
  2947 ;; This function calls:
  2948 ;;		___ftpack
  2949 ;; This function is called by:
  2950 ;;		_RadioOperation
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           
  2955                           ;psect for function ___ftdiv
  2956  01BD                     ___ftdiv:	
  2957                           
  2958                           ;incstack = 0
  2959                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2960  01BD  0020               	movlb	0	; select bank0
  2961  01BE  0833               	movf	___ftdiv@f1,w
  2962  01BF  00B6               	movwf	??___ftdiv
  2963  01C0  0834               	movf	___ftdiv@f1+1,w
  2964  01C1  00B7               	movwf	??___ftdiv+1
  2965  01C2  0835               	movf	___ftdiv@f1+2,w
  2966  01C3  00B8               	movwf	??___ftdiv+2
  2967  01C4  1003               	clrc
  2968  01C5  0D37               	rlf	??___ftdiv+1,w
  2969  01C6  0D38               	rlf	??___ftdiv+2,w
  2970  01C7  00B9               	movwf	??___ftdiv+3
  2971  01C8  0839               	movf	??___ftdiv+3,w
  2972  01C9  00BE               	movwf	___ftdiv@exp
  2973  01CA  083E               	movf	___ftdiv@exp,w
  2974  01CB  1D03               	btfss	3,2
  2975  01CC  29D4               	goto	l1727
  2976  01CD  3000               	movlw	0
  2977  01CE  00B0               	movwf	?___ftdiv
  2978  01CF  3000               	movlw	0
  2979  01D0  00B1               	movwf	?___ftdiv+1
  2980  01D1  3000               	movlw	0
  2981  01D2  00B2               	movwf	?___ftdiv+2
  2982  01D3  0008               	return
  2983  01D4                     l1727:	
  2984  01D4  0830               	movf	___ftdiv@f2,w
  2985  01D5  00B6               	movwf	??___ftdiv
  2986  01D6  0831               	movf	___ftdiv@f2+1,w
  2987  01D7  00B7               	movwf	??___ftdiv+1
  2988  01D8  0832               	movf	___ftdiv@f2+2,w
  2989  01D9  00B8               	movwf	??___ftdiv+2
  2990  01DA  1003               	clrc
  2991  01DB  0D37               	rlf	??___ftdiv+1,w
  2992  01DC  0D38               	rlf	??___ftdiv+2,w
  2993  01DD  00B9               	movwf	??___ftdiv+3
  2994  01DE  0839               	movf	??___ftdiv+3,w
  2995  01DF  00BF               	movwf	___ftdiv@sign
  2996  01E0  083F               	movf	___ftdiv@sign,w
  2997  01E1  1D03               	btfss	3,2
  2998  01E2  29EA               	goto	l1733
  2999  01E3  3000               	movlw	0
  3000  01E4  00B0               	movwf	?___ftdiv
  3001  01E5  3000               	movlw	0
  3002  01E6  00B1               	movwf	?___ftdiv+1
  3003  01E7  3000               	movlw	0
  3004  01E8  00B2               	movwf	?___ftdiv+2
  3005  01E9  0008               	return
  3006  01EA                     l1733:	
  3007  01EA  3000               	movlw	0
  3008  01EB  00BB               	movwf	___ftdiv@f3
  3009  01EC  3000               	movlw	0
  3010  01ED  00BC               	movwf	___ftdiv@f3+1
  3011  01EE  3000               	movlw	0
  3012  01EF  00BD               	movwf	___ftdiv@f3+2
  3013  01F0  3089               	movlw	137
  3014  01F1  073F               	addwf	___ftdiv@sign,w
  3015  01F2  00B6               	movwf	??___ftdiv
  3016  01F3  0836               	movf	??___ftdiv,w
  3017  01F4  02BE               	subwf	___ftdiv@exp,f
  3018  01F5  0833               	movf	___ftdiv@f1,w
  3019  01F6  00B6               	movwf	??___ftdiv
  3020  01F7  0834               	movf	___ftdiv@f1+1,w
  3021  01F8  00B7               	movwf	??___ftdiv+1
  3022  01F9  0835               	movf	___ftdiv@f1+2,w
  3023  01FA  00B8               	movwf	??___ftdiv+2
  3024  01FB  3010               	movlw	16
  3025  01FC                     u1655:	
  3026  01FC  36B8               	lsrf	??___ftdiv+2,f
  3027  01FD  0CB7               	rrf	??___ftdiv+1,f
  3028  01FE  0CB6               	rrf	??___ftdiv,f
  3029  01FF  0B89               	decfsz	9,f
  3030  0200  29FC               	goto	u1655
  3031  0201  0836               	movf	??___ftdiv,w
  3032  0202  00B9               	movwf	??___ftdiv+3
  3033  0203  0839               	movf	??___ftdiv+3,w
  3034  0204  00BF               	movwf	___ftdiv@sign
  3035  0205  0830               	movf	___ftdiv@f2,w
  3036  0206  00B6               	movwf	??___ftdiv
  3037  0207  0831               	movf	___ftdiv@f2+1,w
  3038  0208  00B7               	movwf	??___ftdiv+1
  3039  0209  0832               	movf	___ftdiv@f2+2,w
  3040  020A  00B8               	movwf	??___ftdiv+2
  3041  020B  3010               	movlw	16
  3042  020C                     u1665:	
  3043  020C  36B8               	lsrf	??___ftdiv+2,f
  3044  020D  0CB7               	rrf	??___ftdiv+1,f
  3045  020E  0CB6               	rrf	??___ftdiv,f
  3046  020F  0B89               	decfsz	9,f
  3047  0210  2A0C               	goto	u1665
  3048  0211  0836               	movf	??___ftdiv,w
  3049  0212  00B9               	movwf	??___ftdiv+3
  3050  0213  0839               	movf	??___ftdiv+3,w
  3051  0214  06BF               	xorwf	___ftdiv@sign,f
  3052  0215  3080               	movlw	128
  3053  0216  00B6               	movwf	??___ftdiv
  3054  0217  0836               	movf	??___ftdiv,w
  3055  0218  05BF               	andwf	___ftdiv@sign,f
  3056  0219  17B4               	bsf	___ftdiv@f1+1,7
  3057  021A  30FF               	movlw	255
  3058  021B  05B3               	andwf	___ftdiv@f1,f
  3059  021C  30FF               	movlw	255
  3060  021D  05B4               	andwf	___ftdiv@f1+1,f
  3061  021E  3000               	movlw	0
  3062  021F  05B5               	andwf	___ftdiv@f1+2,f
  3063  0220  17B1               	bsf	___ftdiv@f2+1,7
  3064  0221  30FF               	movlw	255
  3065  0222  05B0               	andwf	___ftdiv@f2,f
  3066  0223  30FF               	movlw	255
  3067  0224  05B1               	andwf	___ftdiv@f2+1,f
  3068  0225  3000               	movlw	0
  3069  0226  05B2               	andwf	___ftdiv@f2+2,f
  3070  0227  3018               	movlw	24
  3071  0228  00B6               	movwf	??___ftdiv
  3072  0229  0836               	movf	??___ftdiv,w
  3073  022A  00BA               	movwf	___ftdiv@cntr
  3074  022B                     l1747:	
  3075  022B  3001               	movlw	1
  3076  022C                     u1675:	
  3077  022C  35BB               	lslf	___ftdiv@f3,f
  3078  022D  0DBC               	rlf	___ftdiv@f3+1,f
  3079  022E  0DBD               	rlf	___ftdiv@f3+2,f
  3080  022F  0B89               	decfsz	9,f
  3081  0230  2A2C               	goto	u1675
  3082  0231  0832               	movf	___ftdiv@f2+2,w
  3083  0232  0235               	subwf	___ftdiv@f1+2,w
  3084  0233  1D03               	skipz
  3085  0234  2A3B               	goto	u1685
  3086  0235  0831               	movf	___ftdiv@f2+1,w
  3087  0236  0234               	subwf	___ftdiv@f1+1,w
  3088  0237  1D03               	skipz
  3089  0238  2A3B               	goto	u1685
  3090  0239  0830               	movf	___ftdiv@f2,w
  3091  023A  0233               	subwf	___ftdiv@f1,w
  3092  023B                     u1685:	
  3093  023B  1C03               	skipc
  3094  023C  2A44               	goto	l1755
  3095  023D  0830               	movf	___ftdiv@f2,w
  3096  023E  02B3               	subwf	___ftdiv@f1,f
  3097  023F  0831               	movf	___ftdiv@f2+1,w
  3098  0240  3BB4               	subwfb	___ftdiv@f1+1,f
  3099  0241  0832               	movf	___ftdiv@f2+2,w
  3100  0242  3BB5               	subwfb	___ftdiv@f1+2,f
  3101  0243  143B               	bsf	___ftdiv@f3,0
  3102  0244                     l1755:	
  3103  0244  3001               	movlw	1
  3104  0245                     u1695:	
  3105  0245  35B3               	lslf	___ftdiv@f1,f
  3106  0246  0DB4               	rlf	___ftdiv@f1+1,f
  3107  0247  0DB5               	rlf	___ftdiv@f1+2,f
  3108  0248  0B89               	decfsz	9,f
  3109  0249  2A45               	goto	u1695
  3110  024A  3001               	movlw	1
  3111  024B  02BA               	subwf	___ftdiv@cntr,f
  3112  024C  1D03               	btfss	3,2
  3113  024D  2A2B               	goto	l1747
  3114  024E  083B               	movf	___ftdiv@f3,w
  3115  024F  00F1               	movwf	___ftpack@arg
  3116  0250  083C               	movf	___ftdiv@f3+1,w
  3117  0251  00F2               	movwf	___ftpack@arg+1
  3118  0252  083D               	movf	___ftdiv@f3+2,w
  3119  0253  00F3               	movwf	___ftpack@arg+2
  3120  0254  083E               	movf	___ftdiv@exp,w
  3121  0255  00B6               	movwf	??___ftdiv
  3122  0256  0836               	movf	??___ftdiv,w
  3123  0257  00F4               	movwf	___ftpack@exp
  3124  0258  083F               	movf	___ftdiv@sign,w
  3125  0259  00B7               	movwf	??___ftdiv+1
  3126  025A  0837               	movf	??___ftdiv+1,w
  3127  025B  00F5               	movwf	___ftpack@sign
  3128  025C  3182  22F2         	fcall	___ftpack
  3129  025E  0871               	movf	?___ftpack,w
  3130  025F  0020               	movlb	0	; select bank0
  3131  0260  00B0               	movwf	?___ftdiv
  3132  0261  0872               	movf	?___ftpack+1,w
  3133  0262  00B1               	movwf	?___ftdiv+1
  3134  0263  0873               	movf	?___ftpack+2,w
  3135  0264  00B2               	movwf	?___ftdiv+2
  3136  0265  0008               	return
  3137  0266                     __end_of___ftdiv:	
  3138                           
  3139                           	psect	text10
  3140  04C1                     __ptext10:	
  3141 ;; *************** function ___awtoft *****************
  3142 ;; Defined at:
  3143 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  c               2    9[COMMON] int 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  sign            1    2[BANK0 ] unsigned char 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  3    9[COMMON] float 
  3150 ;; Registers used:
  3151 ;;		wreg, status,2, status,0, pclath, cstack
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3157 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3159 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3160 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;Total ram usage:        6 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:    3
  3164 ;; This function calls:
  3165 ;;		___ftpack
  3166 ;; This function is called by:
  3167 ;;		_RadioOperation
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           
  3172                           ;psect for function ___awtoft
  3173  04C1                     ___awtoft:	
  3174                           
  3175                           ;incstack = 0
  3176                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3177  04C1  0020               	movlb	0	; select bank0
  3178  04C2  01A2               	clrf	___awtoft@sign
  3179  04C3  1FFA               	btfss	___awtoft@c+1,7
  3180  04C4  2CCC               	goto	l1717
  3181  04C5  09F9               	comf	___awtoft@c,f
  3182  04C6  09FA               	comf	___awtoft@c+1,f
  3183  04C7  0AF9               	incf	___awtoft@c,f
  3184  04C8  1903               	skipnz
  3185  04C9  0AFA               	incf	___awtoft@c+1,f
  3186  04CA  01A2               	clrf	___awtoft@sign
  3187  04CB  0AA2               	incf	___awtoft@sign,f
  3188  04CC                     l1717:	
  3189  04CC  0879               	movf	___awtoft@c,w
  3190  04CD  00F1               	movwf	___ftpack@arg
  3191  04CE  087A               	movf	___awtoft@c+1,w
  3192  04CF  00F2               	movwf	___ftpack@arg+1
  3193  04D0  01F3               	clrf	___ftpack@arg+2
  3194  04D1  308E               	movlw	142
  3195  04D2  00A0               	movwf	??___awtoft
  3196  04D3  0820               	movf	??___awtoft,w
  3197  04D4  00F4               	movwf	___ftpack@exp
  3198  04D5  0822               	movf	___awtoft@sign,w
  3199  04D6  00A1               	movwf	??___awtoft+1
  3200  04D7  0821               	movf	??___awtoft+1,w
  3201  04D8  00F5               	movwf	___ftpack@sign
  3202  04D9  3182  22F2         	fcall	___ftpack
  3203  04DB  0871               	movf	?___ftpack,w
  3204  04DC  00F9               	movwf	?___awtoft
  3205  04DD  0872               	movf	?___ftpack+1,w
  3206  04DE  00FA               	movwf	?___awtoft+1
  3207  04DF  0873               	movf	?___ftpack+2,w
  3208  04E0  00FB               	movwf	?___awtoft+2
  3209  04E1  0008               	return
  3210  04E2                     __end_of___awtoft:	
  3211                           
  3212                           	psect	text11
  3213  02F2                     __ptext11:	
  3214 ;; *************** function ___ftpack *****************
  3215 ;; Defined at:
  3216 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  arg             3    1[COMMON] unsigned um
  3219 ;;  exp             1    4[COMMON] unsigned char 
  3220 ;;  sign            1    5[COMMON] unsigned char 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;		None
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  3    1[COMMON] float 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3232 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3234 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3235 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3236 ;;Total ram usage:        8 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    2
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		___awtoft
  3243 ;;		___ftdiv
  3244 ;;		___ftmul
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           
  3249                           ;psect for function ___ftpack
  3250  02F2                     ___ftpack:	
  3251                           
  3252                           ;incstack = 0
  3253                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3254  02F2  0874               	movf	___ftpack@exp,w
  3255  02F3  1903               	btfsc	3,2
  3256  02F4  2AFA               	goto	l1663
  3257  02F5  0873               	movf	___ftpack@arg+2,w
  3258  02F6  0472               	iorwf	___ftpack@arg+1,w
  3259  02F7  0471               	iorwf	___ftpack@arg,w
  3260  02F8  1D03               	skipz
  3261  02F9  2B0B               	goto	l1669
  3262  02FA                     l1663:	
  3263  02FA  3000               	movlw	0
  3264  02FB  00F1               	movwf	?___ftpack
  3265  02FC  3000               	movlw	0
  3266  02FD  00F2               	movwf	?___ftpack+1
  3267  02FE  3000               	movlw	0
  3268  02FF  00F3               	movwf	?___ftpack+2
  3269  0300  0008               	return
  3270  0301                     l1667:	
  3271  0301  3001               	movlw	1
  3272  0302  00F6               	movwf	??___ftpack
  3273  0303  0876               	movf	??___ftpack,w
  3274  0304  07F4               	addwf	___ftpack@exp,f
  3275  0305  3001               	movlw	1
  3276  0306                     u1525:	
  3277  0306  36F3               	lsrf	___ftpack@arg+2,f
  3278  0307  0CF2               	rrf	___ftpack@arg+1,f
  3279  0308  0CF1               	rrf	___ftpack@arg,f
  3280  0309  0B89               	decfsz	9,f
  3281  030A  2B06               	goto	u1525
  3282  030B                     l1669:	
  3283  030B  30FE               	movlw	254
  3284  030C  0573               	andwf	___ftpack@arg+2,w
  3285  030D  1903               	btfsc	3,2
  3286  030E  2B24               	goto	l546
  3287  030F  2B01               	goto	l1667
  3288  0310                     l1671:	
  3289  0310  3001               	movlw	1
  3290  0311  00F6               	movwf	??___ftpack
  3291  0312  0876               	movf	??___ftpack,w
  3292  0313  07F4               	addwf	___ftpack@exp,f
  3293  0314  3001               	movlw	1
  3294  0315  07F1               	addwf	___ftpack@arg,f
  3295  0316  3000               	movlw	0
  3296  0317  1803               	skipnc
  3297  0318  3001               	movlw	1
  3298  0319  07F2               	addwf	___ftpack@arg+1,f
  3299  031A  3000               	movlw	0
  3300  031B  1803               	skipnc
  3301  031C  3001               	movlw	1
  3302  031D  07F3               	addwf	___ftpack@arg+2,f
  3303  031E  3001               	movlw	1
  3304  031F                     u1545:	
  3305  031F  36F3               	lsrf	___ftpack@arg+2,f
  3306  0320  0CF2               	rrf	___ftpack@arg+1,f
  3307  0321  0CF1               	rrf	___ftpack@arg,f
  3308  0322  0B89               	decfsz	9,f
  3309  0323  2B1F               	goto	u1545
  3310  0324                     l546:	
  3311  0324  30FF               	movlw	255
  3312  0325  0573               	andwf	___ftpack@arg+2,w
  3313  0326  1903               	btfsc	3,2
  3314  0327  2B31               	goto	l1679
  3315  0328  2B10               	goto	l1671
  3316  0329                     l1677:	
  3317  0329  3001               	movlw	1
  3318  032A  02F4               	subwf	___ftpack@exp,f
  3319  032B  3001               	movlw	1
  3320  032C                     u1565:	
  3321  032C  35F1               	lslf	___ftpack@arg,f
  3322  032D  0DF2               	rlf	___ftpack@arg+1,f
  3323  032E  0DF3               	rlf	___ftpack@arg+2,f
  3324  032F  0B89               	decfsz	9,f
  3325  0330  2B2C               	goto	u1565
  3326  0331                     l1679:	
  3327  0331  1BF2               	btfsc	___ftpack@arg+1,7
  3328  0332  2B37               	goto	l553
  3329  0333  3002               	movlw	2
  3330  0334  0274               	subwf	___ftpack@exp,w
  3331  0335  1803               	skipnc
  3332  0336  2B29               	goto	l1677
  3333  0337                     l553:	
  3334  0337  1874               	btfsc	___ftpack@exp,0
  3335  0338  2B3F               	goto	l554
  3336  0339  30FF               	movlw	255
  3337  033A  05F1               	andwf	___ftpack@arg,f
  3338  033B  307F               	movlw	127
  3339  033C  05F2               	andwf	___ftpack@arg+1,f
  3340  033D  30FF               	movlw	255
  3341  033E  05F3               	andwf	___ftpack@arg+2,f
  3342  033F                     l554:	
  3343  033F  1003               	clrc
  3344  0340  0CF4               	rrf	___ftpack@exp,f
  3345  0341  0874               	movf	___ftpack@exp,w
  3346  0342  00F6               	movwf	??___ftpack
  3347  0343  01F7               	clrf	??___ftpack+1
  3348  0344  01F8               	clrf	??___ftpack+2
  3349  0345  3010               	movlw	16
  3350  0346                     u1605:	
  3351  0346  35F6               	lslf	??___ftpack,f
  3352  0347  0DF7               	rlf	??___ftpack+1,f
  3353  0348  0DF8               	rlf	??___ftpack+2,f
  3354  0349  0B89               	decfsz	9,f
  3355  034A  2B46               	goto	u1605
  3356  034B  0876               	movf	??___ftpack,w
  3357  034C  04F1               	iorwf	___ftpack@arg,f
  3358  034D  0877               	movf	??___ftpack+1,w
  3359  034E  04F2               	iorwf	___ftpack@arg+1,f
  3360  034F  0878               	movf	??___ftpack+2,w
  3361  0350  04F3               	iorwf	___ftpack@arg+2,f
  3362  0351  0875               	movf	___ftpack@sign,w
  3363  0352  1903               	btfsc	3,2
  3364  0353  0008               	return
  3365  0354  17F3               	bsf	___ftpack@arg+2,7
  3366  0355  0008               	return
  3367  0356                     __end_of___ftpack:	
  3368                           
  3369                           	psect	text12
  3370  0595                     __ptext12:	
  3371 ;; *************** function _SR_FRSTalk *****************
  3372 ;; Defined at:
  3373 ;;		line 10 in file "SR_FRS.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;		None
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;		None
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      void 
  3380 ;; Registers used:
  3381 ;;		wreg, status,2, status,0
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3391 ;;Total ram usage:        1 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    2
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_RadioOperation
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           
  3402                           ;psect for function _SR_FRSTalk
  3403  0595                     _SR_FRSTalk:	
  3404                           
  3405                           ;SR_FRS.c: 11: PORTCbits.RC7 ^= 1;
  3406                           
  3407                           ;incstack = 0
  3408                           ; Regs used in _SR_FRSTalk: [wreg+status,2+status,0]
  3409  0595  0020               	movlb	0	; select bank0
  3410  0596  0D0E               	rlf	14,w	;volatile
  3411  0597  0D0E               	rlf	14,w	;volatile
  3412  0598  3901               	andlw	1
  3413  0599  00F1               	movwf	??_SR_FRSTalk
  3414  059A  3001               	movlw	1
  3415  059B  06F1               	xorwf	??_SR_FRSTalk,f
  3416  059C  0CF1               	rrf	??_SR_FRSTalk,f
  3417  059D  0CF1               	rrf	??_SR_FRSTalk,f
  3418  059E  080E               	movf	14,w	;volatile
  3419  059F  0671               	xorwf	??_SR_FRSTalk,w
  3420  05A0  397F               	andlw	-129
  3421  05A1  0671               	xorwf	??_SR_FRSTalk,w
  3422  05A2  008E               	movwf	14	;volatile
  3423  05A3  0008               	return
  3424  05A4                     __end_of_SR_FRSTalk:	
  3425                           
  3426                           	psect	text13
  3427  05A4                     __ptext13:	
  3428 ;; *************** function _ReadVoltage *****************
  3429 ;; Defined at:
  3430 ;;		line 14 in file "ADC.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  ch              1    wreg     unsigned char 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  ch              1    5[COMMON] unsigned char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  2    2[COMMON] int 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0, pclath, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3444 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3447 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3448 ;;Total ram usage:        4 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    3
  3451 ;; This function calls:
  3452 ;;		_SetADCChannel
  3453 ;; This function is called by:
  3454 ;;		_RadioOperation
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           
  3459                           ;psect for function _ReadVoltage
  3460  05A4                     _ReadVoltage:	
  3461                           
  3462                           ;incstack = 0
  3463                           ; Regs used in _ReadVoltage: [wreg+status,2+status,0+pclath+cstack]
  3464                           ;ReadVoltage@ch stored from wreg
  3465  05A4  00F5               	movwf	ReadVoltage@ch
  3466                           
  3467                           ;ADC.c: 15: SetADCChannel(ch);
  3468  05A5  0875               	movf	ReadVoltage@ch,w
  3469  05A6  3184  24E2  3185   	fcall	_SetADCChannel
  3470                           
  3471                           ;ADC.c: 16: ADCON0bits.GO_nDONE = 1;
  3472  05A9  0021               	movlb	1	; select bank1
  3473  05AA  149D               	bsf	29,1	;volatile
  3474  05AB                     l271:	
  3475                           ;ADC.c: 17: while(ADCON0bits.GO_nDONE);
  3476                           
  3477  05AB  189D               	btfsc	29,1	;volatile
  3478  05AC  2DAB               	goto	l271
  3479                           
  3480                           ;ADC.c: 18: return ((ADRESL << 8) + ADRESL);
  3481  05AD  081B               	movf	27,w	;volatile
  3482  05AE  00F3               	movwf	?_ReadVoltage+1
  3483  05AF  081B               	movf	27,w	;volatile
  3484  05B0  00F2               	movwf	?_ReadVoltage
  3485  05B1  0008               	return
  3486  05B2                     __end_of_ReadVoltage:	
  3487                           
  3488                           	psect	text14
  3489  04E2                     __ptext14:	
  3490 ;; *************** function _SetADCChannel *****************
  3491 ;; Defined at:
  3492 ;;		line 21 in file "ADC.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  ch              1    wreg     unsigned char 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  ch              1    1[COMMON] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3509 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3510 ;;Total ram usage:        1 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    2
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_ReadVoltage
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           
  3521                           ;psect for function _SetADCChannel
  3522  04E2                     _SetADCChannel:	
  3523                           
  3524                           ;incstack = 0
  3525                           ; Regs used in _SetADCChannel: [wreg+status,2+status,0]
  3526                           ;SetADCChannel@ch stored from wreg
  3527  04E2  00F1               	movwf	SetADCChannel@ch
  3528                           
  3529                           ;ADC.c: 22: if(ch == 1){
  3530  04E3  0371               	decf	SetADCChannel@ch,w
  3531  04E4  1D03               	btfss	3,2
  3532  04E5  2CEC               	goto	l1299
  3533                           
  3534                           ;ADC.c: 23: ADCON0bits.CHS = 6;
  3535  04E6  0021               	movlb	1	; select bank1
  3536  04E7  081D               	movf	29,w	;volatile
  3537  04E8  3983               	andlw	-125
  3538  04E9  3818               	iorlw	24
  3539  04EA  009D               	movwf	29	;volatile
  3540                           
  3541                           ;ADC.c: 24: }
  3542  04EB  0008               	return
  3543  04EC                     l1299:	
  3544                           
  3545                           ;ADC.c: 25: else if(ch == 2){
  3546  04EC  3002               	movlw	2
  3547  04ED  0671               	xorwf	SetADCChannel@ch,w
  3548  04EE  1D03               	btfss	3,2
  3549  04EF  2CF6               	goto	l1303
  3550                           
  3551                           ;ADC.c: 26: ADCON0bits.CHS = 29;
  3552  04F0  0021               	movlb	1	; select bank1
  3553  04F1  081D               	movf	29,w	;volatile
  3554  04F2  3983               	andlw	-125
  3555  04F3  3874               	iorlw	116
  3556  04F4  009D               	movwf	29	;volatile
  3557                           
  3558                           ;ADC.c: 27: }
  3559  04F5  0008               	return
  3560  04F6                     l1303:	
  3561                           
  3562                           ;ADC.c: 28: else if(ch == 3){
  3563  04F6  3003               	movlw	3
  3564  04F7  0671               	xorwf	SetADCChannel@ch,w
  3565  04F8  1D03               	btfss	3,2
  3566  04F9  0008               	return
  3567                           
  3568                           ;ADC.c: 29: ADCON0bits.CHS = 3;
  3569  04FA  0021               	movlb	1	; select bank1
  3570  04FB  081D               	movf	29,w	;volatile
  3571  04FC  3983               	andlw	-125
  3572  04FD  380C               	iorlw	12
  3573  04FE  009D               	movwf	29	;volatile
  3574  04FF  0008               	return
  3575  0500                     __end_of_SetADCChannel:	
  3576                           
  3577                           	psect	text15
  3578  0571                     __ptext15:	
  3579 ;; *************** function _ReadCharger *****************
  3580 ;; Defined at:
  3581 ;;		line 106 in file "Function.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;		None
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;		None
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      unsigned char 
  3588 ;; Registers used:
  3589 ;;		wreg
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3599 ;;Total ram usage:        0 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    2
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_RadioOperation
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           
  3610                           ;psect for function _ReadCharger
  3611  0571                     _ReadCharger:	
  3612                           
  3613                           ;Function.c: 108: if(!PORTCbits.RC0 && PORTCbits.RC1){
  3614                           
  3615                           ;incstack = 0
  3616                           ; Regs used in _ReadCharger: [wreg]
  3617  0571  0020               	movlb	0	; select bank0
  3618  0572  1C0E               	btfss	14,0	;volatile
  3619  0573  1C8E               	btfss	14,1	;volatile
  3620  0574  2D77               	goto	l76
  3621                           
  3622                           ;Function.c: 109: return 1;
  3623  0575  3001               	movlw	1
  3624  0576  0008               	return
  3625  0577                     l76:	
  3626                           
  3627                           ;Function.c: 110: }
  3628                           ;Function.c: 112: if(PORTCbits.RC0 && !PORTCbits.RC1){
  3629  0577  180E               	btfsc	14,0	;volatile
  3630  0578  188E               	btfsc	14,1	;volatile
  3631  0579  2D7C               	goto	l78
  3632                           
  3633                           ;Function.c: 113: return 2;
  3634  057A  3002               	movlw	2
  3635  057B  0008               	return
  3636  057C                     l78:	
  3637                           
  3638                           ;Function.c: 114: }
  3639                           ;Function.c: 116: if(PORTCbits.RC0 && PORTCbits.RC1){
  3640  057C  180E               	btfsc	14,0	;volatile
  3641  057D  1C8E               	btfss	14,1	;volatile
  3642  057E  2D81               	goto	l1361
  3643                           
  3644                           ;Function.c: 117: return 0;
  3645  057F  3000               	movlw	0
  3646                           
  3647                           ;Function.c: 118: }
  3648  0580  0008               	return
  3649  0581                     l1361:	
  3650                           
  3651                           ;Function.c: 119: else{
  3652                           ;Function.c: 120: return 255;
  3653  0581  30FF               	movlw	255
  3654  0582  0008               	return
  3655  0583                     __end_of_ReadCharger:	
  3656                           
  3657                           	psect	text16
  3658  0602                     __ptext16:	
  3659 ;; *************** function _GetTicker *****************
  3660 ;; Defined at:
  3661 ;;		line 61 in file "Timer.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;		None
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  2  114[None  ] unsigned int 
  3668 ;; Registers used:
  3669 ;;		None
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3679 ;;Total ram usage:        0 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    2
  3682 ;; This function calls:
  3683 ;;		Nothing
  3684 ;; This function is called by:
  3685 ;;		_RadioOperation
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           
  3690                           ;psect for function _GetTicker
  3691  0602                     _GetTicker:	
  3692                           
  3693                           ;Timer.c: 62: return ticker;
  3694                           ;	Return value of _GetTicker is never used
  3695                           
  3696                           ;incstack = 0
  3697                           ; Regs used in _GetTicker: []
  3698  0602  0008               	return
  3699  0603                     __end_of_GetTicker:	
  3700                           
  3701                           	psect	text17
  3702  05FA                     __ptext17:	
  3703 ;; *************** function _ClearTicker *****************
  3704 ;; Defined at:
  3705 ;;		line 57 in file "Timer.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;		None
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      void 
  3712 ;; Registers used:
  3713 ;;		status,2
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3723 ;;Total ram usage:        0 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    2
  3726 ;; This function calls:
  3727 ;;		Nothing
  3728 ;; This function is called by:
  3729 ;;		_RadioOperation
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           
  3734                           ;psect for function _ClearTicker
  3735  05FA                     _ClearTicker:	
  3736                           
  3737                           ;Timer.c: 58: ticker = 0;
  3738                           
  3739                           ;incstack = 0
  3740                           ; Regs used in _ClearTicker: [status,2]
  3741  05FA  0020               	movlb	0	; select bank0
  3742  05FB  01C6               	clrf	_ticker
  3743  05FC  01C7               	clrf	_ticker+1
  3744  05FD  0008               	return
  3745  05FE                     __end_of_ClearTicker:	
  3746                           
  3747                           	psect	text18
  3748  05FE                     __ptext18:	
  3749 ;; *************** function _RadioBegin *****************
  3750 ;; Defined at:
  3751 ;;		line 21 in file "Radio.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3769 ;;Total ram usage:        0 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    7
  3772 ;; This function calls:
  3773 ;;		_SR_FRSStart
  3774 ;; This function is called by:
  3775 ;;		_main
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           
  3780                           ;psect for function _RadioBegin
  3781  05FE                     _RadioBegin:	
  3782                           
  3783                           ;Radio.c: 22: SR_FRSStart();
  3784                           
  3785                           ;incstack = 0
  3786                           ; Regs used in _RadioBegin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3787  05FE  3183  23A1         	fcall	_SR_FRSStart
  3788  0600  0008               	return
  3789  0601                     __end_of_RadioBegin:	
  3790                           
  3791                           	psect	text19
  3792  03A1                     __ptext19:	
  3793 ;; *************** function _SR_FRSStart *****************
  3794 ;; Defined at:
  3795 ;;		line 18 in file "SR_FRS.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;		None
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;		None
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3813 ;;Total ram usage:        0 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    6
  3816 ;; This function calls:
  3817 ;;		_Delay
  3818 ;;		_SR_FRSPowerDown
  3819 ;;		_SetCommandMode
  3820 ;;		_SetFrequency
  3821 ;;		_SetMIC
  3822 ;;		_SetPowerSave
  3823 ;;		_SetVOX
  3824 ;;		_SetVolume
  3825 ;; This function is called by:
  3826 ;;		_RadioBegin
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           
  3831                           ;psect for function _SR_FRSStart
  3832  03A1                     _SR_FRSStart:	
  3833                           
  3834                           ;SR_FRS.c: 19: SR_FRSPowerDown();
  3835                           
  3836                           ;incstack = 0
  3837                           ; Regs used in _SR_FRSStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3838  03A1  3185  2583  3183   	fcall	_SR_FRSPowerDown
  3839                           
  3840                           ;SR_FRS.c: 20: Delay(500);
  3841  03A4  30F4               	movlw	244
  3842  03A5  00F1               	movwf	Delay@wait
  3843  03A6  3001               	movlw	1
  3844  03A7  00F2               	movwf	Delay@wait+1
  3845  03A8  3185  2500  3183   	fcall	_Delay
  3846                           
  3847                           ;SR_FRS.c: 21: SetCommandMode();
  3848  03AB  3185  2548  3183   	fcall	_SetCommandMode
  3849                           
  3850                           ;SR_FRS.c: 22: Delay(1000);
  3851  03AE  30E8               	movlw	232
  3852  03AF  00F1               	movwf	Delay@wait
  3853  03B0  3003               	movlw	3
  3854  03B1  00F2               	movwf	Delay@wait+1
  3855  03B2  3185  2500  3183   	fcall	_Delay
  3856                           
  3857                           ;SR_FRS.c: 24: SetFrequency();
  3858  03B5  3185  2533  3183   	fcall	_SetFrequency
  3859                           
  3860                           ;SR_FRS.c: 25: Delay(1000);
  3861  03B8  30E8               	movlw	232
  3862  03B9  00F1               	movwf	Delay@wait
  3863  03BA  3003               	movlw	3
  3864  03BB  00F2               	movwf	Delay@wait+1
  3865  03BC  3185  2500  3183   	fcall	_Delay
  3866                           
  3867                           ;SR_FRS.c: 27: SetPowerSave();
  3868  03BF  3185  251A  3183   	fcall	_SetPowerSave
  3869                           
  3870                           ;SR_FRS.c: 28: Delay(1000);
  3871  03C2  30E8               	movlw	232
  3872  03C3  00F1               	movwf	Delay@wait
  3873  03C4  3003               	movlw	3
  3874  03C5  00F2               	movwf	Delay@wait+1
  3875  03C6  3185  2500  3183   	fcall	_Delay
  3876                           
  3877                           ;SR_FRS.c: 30: SetVolume(5);
  3878  03C9  3005               	movlw	5
  3879  03CA  3184  2474  3183   	fcall	_SetVolume
  3880                           
  3881                           ;SR_FRS.c: 31: Delay(1000);
  3882  03CD  30E8               	movlw	232
  3883  03CE  00F1               	movwf	Delay@wait
  3884  03CF  3003               	movlw	3
  3885  03D0  00F2               	movwf	Delay@wait+1
  3886  03D1  3185  2500  3183   	fcall	_Delay
  3887                           
  3888                           ;SR_FRS.c: 33: SetVOX(0);
  3889  03D4  3000               	movlw	0
  3890  03D5  0020               	movlb	0	; select bank0
  3891  03D6  00A3               	movwf	SetVOX@volume
  3892  03D7  00A4               	movwf	SetVOX@volume+1
  3893  03D8  3184  244C  3183   	fcall	_SetVOX
  3894                           
  3895                           ;SR_FRS.c: 34: Delay(1000);
  3896  03DB  30E8               	movlw	232
  3897  03DC  00F1               	movwf	Delay@wait
  3898  03DD  3003               	movlw	3
  3899  03DE  00F2               	movwf	Delay@wait+1
  3900  03DF  3185  2500  3183   	fcall	_Delay
  3901                           
  3902                           ;SR_FRS.c: 36: SetMIC(8,0);
  3903  03E2  0020               	movlb	0	; select bank0
  3904  03E3  01A3               	clrf	SetMIC@scram
  3905  03E4  3008               	movlw	8
  3906  03E5  3184  249B         	fcall	_SetMIC
  3907  03E7  0008               	return
  3908  03E8                     __end_of_SR_FRSStart:	
  3909                           
  3910                           	psect	text20
  3911  0474                     __ptext20:	
  3912 ;; *************** function _SetVolume *****************
  3913 ;; Defined at:
  3914 ;;		line 58 in file "SR_FRS.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  volume          1    wreg     unsigned char 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  volume          1    5[BANK0 ] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3929 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3930 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3931 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3932 ;;Total ram usage:        3 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    5
  3935 ;; This function calls:
  3936 ;;		_printf
  3937 ;; This function is called by:
  3938 ;;		_SR_FRSStart
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           
  3943                           ;psect for function _SetVolume
  3944  0474                     _SetVolume:	
  3945                           
  3946                           ;incstack = 0
  3947                           ; Regs used in _SetVolume: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3948                           ;SetVolume@volume stored from wreg
  3949  0474  0020               	movlb	0	; select bank0
  3950  0475  00A5               	movwf	SetVolume@volume
  3951                           
  3952                           ;SR_FRS.c: 59: if((volume < 9) && (volume > 1)){
  3953  0476  3009               	movlw	9
  3954  0477  0225               	subwf	SetVolume@volume,w
  3955  0478  1803               	skipnc
  3956  0479  0008               	return
  3957  047A  3002               	movlw	2
  3958  047B  0225               	subwf	SetVolume@volume,w
  3959  047C  1C03               	skipc
  3960  047D  0008               	return
  3961                           
  3962                           ;SR_FRS.c: 60: printf("\r\n");
  3963  047E  30EF               	movlw	low (STR_1| (0+32768))
  3964  047F  00F3               	movwf	printf@f
  3965  0480  3082               	movlw	high (STR_1| (0+32768))
  3966  0481  00F4               	movwf	printf@f+1
  3967  0482  3183  2356  3184   	fcall	_printf
  3968                           
  3969                           ;SR_FRS.c: 61: printf("AT+DMOSETVOLUME=%c",volume);
  3970  0485  30BE               	movlw	low (STR_11| (0+32768))
  3971  0486  00F3               	movwf	printf@f
  3972  0487  3082               	movlw	high (STR_11| (0+32768))
  3973  0488  00F4               	movwf	printf@f+1
  3974  0489  0020               	movlb	0	; select bank0
  3975  048A  0825               	movf	SetVolume@volume,w
  3976  048B  00A3               	movwf	??_SetVolume
  3977  048C  01A4               	clrf	??_SetVolume+1
  3978  048D  0823               	movf	??_SetVolume,w
  3979  048E  00F5               	movwf	?_printf+2
  3980  048F  0824               	movf	??_SetVolume+1,w
  3981  0490  00F6               	movwf	?_printf+3
  3982  0491  3183  2356  3184   	fcall	_printf
  3983                           
  3984                           ;SR_FRS.c: 62: printf("\r\n");
  3985  0494  30EF               	movlw	low (STR_1| (0+32768))
  3986  0495  00F3               	movwf	printf@f
  3987  0496  3082               	movlw	high (STR_1| (0+32768))
  3988  0497  00F4               	movwf	printf@f+1
  3989  0498  3183  2356         	fcall	_printf
  3990  049A  0008               	return
  3991  049B                     __end_of_SetVolume:	
  3992                           
  3993                           	psect	text21
  3994  044C                     __ptext21:	
  3995 ;; *************** function _SetVOX *****************
  3996 ;; Defined at:
  3997 ;;		line 66 in file "SR_FRS.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  volume          2    3[BANK0 ] int 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;		None
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  1    wreg      void 
  4004 ;; Registers used:
  4005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4011 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4013 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4014 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4015 ;;Total ram usage:        3 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; Hardware stack levels required when called:    5
  4018 ;; This function calls:
  4019 ;;		_printf
  4020 ;; This function is called by:
  4021 ;;		_SR_FRSStart
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           
  4026                           ;psect for function _SetVOX
  4027  044C                     _SetVOX:	
  4028                           
  4029                           ;SR_FRS.c: 67: if((volume < 8) && (volume >= 0)){
  4030                           
  4031                           ;incstack = 0
  4032                           ; Regs used in _SetVOX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4033  044C  0020               	movlb	0	; select bank0
  4034  044D  0824               	movf	SetVOX@volume+1,w
  4035  044E  3A80               	xorlw	128
  4036  044F  00A5               	movwf	??_SetVOX
  4037  0450  3080               	movlw	128
  4038  0451  0225               	subwf	??_SetVOX,w
  4039  0452  3008               	movlw	8
  4040  0453  1903               	btfsc	3,2
  4041  0454  0223               	subwf	SetVOX@volume,w
  4042  0455  1803               	skipnc
  4043  0456  0008               	return
  4044  0457  0020               	movlb	0	; select bank0
  4045  0458  1BA4               	btfsc	SetVOX@volume+1,7
  4046  0459  0008               	return
  4047                           
  4048                           ;SR_FRS.c: 68: printf("\r\n");
  4049  045A  30EF               	movlw	low (STR_1| (0+32768))
  4050  045B  00F3               	movwf	printf@f
  4051  045C  3082               	movlw	high (STR_1| (0+32768))
  4052  045D  00F4               	movwf	printf@f+1
  4053  045E  3183  2356  3184   	fcall	_printf
  4054                           
  4055                           ;SR_FRS.c: 69: printf("AT+DMOSETVOX=%c",volume);
  4056  0461  30D1               	movlw	low (STR_14| (0+32768))
  4057  0462  00F3               	movwf	printf@f
  4058  0463  3082               	movlw	high (STR_14| (0+32768))
  4059  0464  00F4               	movwf	printf@f+1
  4060  0465  0020               	movlb	0	; select bank0
  4061  0466  0824               	movf	SetVOX@volume+1,w
  4062  0467  00F6               	movwf	?_printf+3
  4063  0468  0823               	movf	SetVOX@volume,w
  4064  0469  00F5               	movwf	?_printf+2
  4065  046A  3183  2356  3184   	fcall	_printf
  4066                           
  4067                           ;SR_FRS.c: 70: printf("\r\n");
  4068  046D  30EF               	movlw	low (STR_1| (0+32768))
  4069  046E  00F3               	movwf	printf@f
  4070  046F  3082               	movlw	high (STR_1| (0+32768))
  4071  0470  00F4               	movwf	printf@f+1
  4072  0471  3183  2356         	fcall	_printf
  4073  0473  0008               	return
  4074  0474                     __end_of_SetVOX:	
  4075                           
  4076                           	psect	text22
  4077  051A                     __ptext22:	
  4078 ;; *************** function _SetPowerSave *****************
  4079 ;; Defined at:
  4080 ;;		line 51 in file "SR_FRS.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;Total ram usage:        0 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    5
  4101 ;; This function calls:
  4102 ;;		_printf
  4103 ;; This function is called by:
  4104 ;;		_SR_FRSStart
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           
  4109                           ;psect for function _SetPowerSave
  4110  051A                     _SetPowerSave:	
  4111                           
  4112                           ;SR_FRS.c: 53: printf("\r\n");
  4113                           
  4114                           ;incstack = 0
  4115                           ; Regs used in _SetPowerSave: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4116  051A  30EF               	movlw	low (STR_1| (0+32768))
  4117  051B  00F3               	movwf	printf@f
  4118  051C  3082               	movlw	high (STR_1| (0+32768))
  4119  051D  00F4               	movwf	printf@f+1
  4120  051E  3183  2356  3185   	fcall	_printf
  4121                           
  4122                           ;SR_FRS.c: 54: printf("AT+DMOAUTOPOWCONTR=%c",1);
  4123  0521  3093               	movlw	low (STR_8| (0+32768))
  4124  0522  00F3               	movwf	printf@f
  4125  0523  3082               	movlw	high (STR_8| (0+32768))
  4126  0524  00F4               	movwf	printf@f+1
  4127  0525  3001               	movlw	1
  4128  0526  00F5               	movwf	?_printf+2
  4129  0527  3000               	movlw	0
  4130  0528  00F6               	movwf	?_printf+3
  4131  0529  3183  2356  3185   	fcall	_printf
  4132                           
  4133                           ;SR_FRS.c: 55: printf("\r\n");
  4134  052C  30EF               	movlw	low (STR_1| (0+32768))
  4135  052D  00F3               	movwf	printf@f
  4136  052E  3082               	movlw	high (STR_1| (0+32768))
  4137  052F  00F4               	movwf	printf@f+1
  4138  0530  3183  2356         	fcall	_printf
  4139  0532  0008               	return
  4140  0533                     __end_of_SetPowerSave:	
  4141                           
  4142                           	psect	text23
  4143  049B                     __ptext23:	
  4144 ;; *************** function _SetMIC *****************
  4145 ;; Defined at:
  4146 ;;		line 74 in file "SR_FRS.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  volume          1    wreg     unsigned char 
  4149 ;;  scram           1    3[BANK0 ] unsigned char 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  volume          1    8[BANK0 ] unsigned char 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4161 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4164 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4165 ;;Total ram usage:        6 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    5
  4168 ;; This function calls:
  4169 ;;		_printf
  4170 ;; This function is called by:
  4171 ;;		_SR_FRSStart
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           
  4176                           ;psect for function _SetMIC
  4177  049B                     _SetMIC:	
  4178                           
  4179                           ;incstack = 0
  4180                           ; Regs used in _SetMIC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4181                           ;SetMIC@volume stored from wreg
  4182  049B  0020               	movlb	0	; select bank0
  4183  049C  00A8               	movwf	SetMIC@volume
  4184                           
  4185                           ;SR_FRS.c: 75: printf("\r\n");
  4186  049D  30EF               	movlw	low (STR_1| (0+32768))
  4187  049E  00F3               	movwf	printf@f
  4188  049F  3082               	movlw	high (STR_1| (0+32768))
  4189  04A0  00F4               	movwf	printf@f+1
  4190  04A1  3183  2356  3184   	fcall	_printf
  4191                           
  4192                           ;SR_FRS.c: 76: printf("AT+DMOSETMIC=%c,%c,0",volume,scram);
  4193  04A4  30A9               	movlw	low (STR_17| (0+32768))
  4194  04A5  00F3               	movwf	printf@f
  4195  04A6  3082               	movlw	high (STR_17| (0+32768))
  4196  04A7  00F4               	movwf	printf@f+1
  4197  04A8  0020               	movlb	0	; select bank0
  4198  04A9  0828               	movf	SetMIC@volume,w
  4199  04AA  00A4               	movwf	??_SetMIC
  4200  04AB  01A5               	clrf	??_SetMIC+1
  4201  04AC  0824               	movf	??_SetMIC,w
  4202  04AD  00F5               	movwf	?_printf+2
  4203  04AE  0825               	movf	??_SetMIC+1,w
  4204  04AF  00F6               	movwf	?_printf+3
  4205  04B0  0823               	movf	SetMIC@scram,w
  4206  04B1  00A6               	movwf	??_SetMIC+2
  4207  04B2  01A7               	clrf	??_SetMIC+3
  4208  04B3  0826               	movf	??_SetMIC+2,w
  4209  04B4  00F7               	movwf	?_printf+4
  4210  04B5  0827               	movf	??_SetMIC+3,w
  4211  04B6  00F8               	movwf	?_printf+5
  4212  04B7  3183  2356  3184   	fcall	_printf
  4213                           
  4214                           ;SR_FRS.c: 77: printf("\r\n");
  4215  04BA  30EF               	movlw	low (STR_1| (0+32768))
  4216  04BB  00F3               	movwf	printf@f
  4217  04BC  3082               	movlw	high (STR_1| (0+32768))
  4218  04BD  00F4               	movwf	printf@f+1
  4219  04BE  3183  2356         	fcall	_printf
  4220  04C0  0008               	return
  4221  04C1                     __end_of_SetMIC:	
  4222                           
  4223                           	psect	text24
  4224  0533                     __ptext24:	
  4225 ;; *************** function _SetFrequency *****************
  4226 ;; Defined at:
  4227 ;;		line 45 in file "SR_FRS.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4245 ;;Total ram usage:        0 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    5
  4248 ;; This function calls:
  4249 ;;		_printf
  4250 ;; This function is called by:
  4251 ;;		_SR_FRSStart
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           
  4256                           ;psect for function _SetFrequency
  4257  0533                     _SetFrequency:	
  4258                           
  4259                           ;SR_FRS.c: 46: printf("\r\n");
  4260                           
  4261                           ;incstack = 0
  4262                           ; Regs used in _SetFrequency: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4263  0533  30EF               	movlw	low (STR_1| (0+32768))
  4264  0534  00F3               	movwf	printf@f
  4265  0535  3082               	movlw	high (STR_1| (0+32768))
  4266  0536  00F4               	movwf	printf@f+1
  4267  0537  3183  2356  3185   	fcall	_printf
  4268                           
  4269                           ;SR_FRS.c: 47: printf("AT+DMOSETGROUP=0,145.5500,145.5500,43,8,51,0");
  4270  053A  3066               	movlw	low (STR_5| (0+32768))
  4271  053B  00F3               	movwf	printf@f
  4272  053C  3082               	movlw	high (STR_5| (0+32768))
  4273  053D  00F4               	movwf	printf@f+1
  4274  053E  3183  2356  3185   	fcall	_printf
  4275                           
  4276                           ;SR_FRS.c: 48: printf("\r\n");
  4277  0541  30EF               	movlw	low (STR_1| (0+32768))
  4278  0542  00F3               	movwf	printf@f
  4279  0543  3082               	movlw	high (STR_1| (0+32768))
  4280  0544  00F4               	movwf	printf@f+1
  4281  0545  3183  2356         	fcall	_printf
  4282  0547  0008               	return
  4283  0548                     __end_of_SetFrequency:	
  4284                           
  4285                           	psect	text25
  4286  0548                     __ptext25:	
  4287 ;; *************** function _SetCommandMode *****************
  4288 ;; Defined at:
  4289 ;;		line 39 in file "SR_FRS.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    5
  4310 ;; This function calls:
  4311 ;;		_printf
  4312 ;; This function is called by:
  4313 ;;		_SR_FRSStart
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           
  4318                           ;psect for function _SetCommandMode
  4319  0548                     _SetCommandMode:	
  4320                           
  4321                           ;SR_FRS.c: 40: printf("\r\n");
  4322                           
  4323                           ;incstack = 0
  4324                           ; Regs used in _SetCommandMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4325  0548  30EF               	movlw	low (STR_1| (0+32768))
  4326  0549  00F3               	movwf	printf@f
  4327  054A  3082               	movlw	high (STR_1| (0+32768))
  4328  054B  00F4               	movwf	printf@f+1
  4329  054C  3183  2356  3185   	fcall	_printf
  4330                           
  4331                           ;SR_FRS.c: 41: printf("AT+DMOCONNECT");
  4332  054F  30E1               	movlw	low (STR_2| (0+32768))
  4333  0550  00F3               	movwf	printf@f
  4334  0551  3082               	movlw	high (STR_2| (0+32768))
  4335  0552  00F4               	movwf	printf@f+1
  4336  0553  3183  2356  3185   	fcall	_printf
  4337                           
  4338                           ;SR_FRS.c: 42: printf("\r\n");
  4339  0556  30EF               	movlw	low (STR_1| (0+32768))
  4340  0557  00F3               	movwf	printf@f
  4341  0558  3082               	movlw	high (STR_1| (0+32768))
  4342  0559  00F4               	movwf	printf@f+1
  4343  055A  3183  2356         	fcall	_printf
  4344  055C  0008               	return
  4345  055D                     __end_of_SetCommandMode:	
  4346                           
  4347                           	psect	text26
  4348  0356                     __ptext26:	
  4349 ;; *************** function _printf *****************
  4350 ;; Defined at:
  4351 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  f               2    3[COMMON] PTR const unsigned char 
  4354 ;;		 -> STR_18(3), STR_17(21), STR_16(3), STR_15(3), 
  4355 ;;		 -> STR_14(16), STR_13(3), STR_12(3), STR_11(19), 
  4356 ;;		 -> STR_10(3), STR_9(3), STR_8(22), STR_7(3), 
  4357 ;;		 -> STR_6(3), STR_5(45), STR_4(3), STR_3(3), 
  4358 ;;		 -> STR_2(14), STR_1(3), 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  tmpval          4    0        struct .
  4361 ;;  cp              2    0        PTR const unsigned char 
  4362 ;;  len             2    0        unsigned int 
  4363 ;;  val             2    0        unsigned int 
  4364 ;;  c               1    2[BANK0 ] char 
  4365 ;;  ap              1    1[BANK0 ] PTR void [1]
  4366 ;;		 -> ?_printf(2), 
  4367 ;;  flag            1    0[BANK0 ] unsigned char 
  4368 ;;  prec            1    0        char 
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  2    3[COMMON] int 
  4371 ;; Registers used:
  4372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4378 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;      Totals:         9       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;Total ram usage:       12 bytes
  4383 ;; Hardware stack levels used:    1
  4384 ;; Hardware stack levels required when called:    4
  4385 ;; This function calls:
  4386 ;;		_putch
  4387 ;; This function is called by:
  4388 ;;		_SetCommandMode
  4389 ;;		_SetFrequency
  4390 ;;		_SetPowerSave
  4391 ;;		_SetVolume
  4392 ;;		_SetVOX
  4393 ;;		_SetMIC
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           
  4398                           ;psect for function _printf
  4399  0356                     _printf:	
  4400                           
  4401                           ;doprnt.c: 466: va_list ap;
  4402                           ;doprnt.c: 499: signed char c;
  4403                           ;doprnt.c: 506: signed char prec;
  4404                           ;doprnt.c: 508: unsigned char flag;
  4405                           ;doprnt.c: 523: union {
  4406                           ;doprnt.c: 524: unsigned long vd;
  4407                           ;doprnt.c: 525: double integ;
  4408                           ;doprnt.c: 526: } tmpval;
  4409                           ;doprnt.c: 528: unsigned int val;
  4410                           ;doprnt.c: 529: unsigned len;
  4411                           ;doprnt.c: 530: const char * cp;
  4412                           ;doprnt.c: 533: *ap = __va_start();
  4413                           
  4414                           ;incstack = 0
  4415                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4416  0356  3075               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4417  0357  00F9               	movwf	??_printf
  4418  0358  0879               	movf	??_printf,w
  4419  0359  0020               	movlb	0	; select bank0
  4420  035A  00A1               	movwf	printf@ap
  4421  035B                     l1637:	
  4422                           ;doprnt.c: 1422: {
  4423                           
  4424                           ;doprnt.c: 536: while(c = *f++) {
  4425                           
  4426  035B  0874               	movf	printf@f+1,w
  4427  035C  00FA               	movwf	??_printf+1
  4428  035D  0873               	movf	printf@f,w
  4429  035E  00F9               	movwf	??_printf
  4430  035F  0AF3               	incf	printf@f,f
  4431  0360  1903               	skipnz
  4432  0361  0AF4               	incf	printf@f+1,f
  4433  0362  0879               	movf	??_printf,w
  4434  0363  0084               	movwf	4
  4435  0364  087A               	movf	??_printf+1,w
  4436  0365  0085               	movwf	5
  4437  0366  0800               	movf	0,w	;code access
  4438  0367  00FB               	movwf	??_printf+2
  4439  0368  087B               	movf	??_printf+2,w
  4440  0369  0020               	movlb	0	; select bank0
  4441  036A  00A2               	movwf	printf@c
  4442  036B  0822               	movf	printf@c,w
  4443  036C  1903               	btfsc	3,2
  4444  036D  0008               	return
  4445                           
  4446                           ;doprnt.c: 538: if(c != '%')
  4447  036E  3025               	movlw	37
  4448  036F  0622               	xorwf	printf@c,w
  4449  0370  1903               	btfsc	3,2
  4450  0371  2B77               	goto	l1625
  4451                           
  4452                           ;doprnt.c: 540: {
  4453                           ;doprnt.c: 541: (putch(c) );
  4454  0372  0822               	movf	printf@c,w
  4455  0373  3185  25F0  3183   	fcall	_putch
  4456                           
  4457                           ;doprnt.c: 542: continue;
  4458  0376  2B5B               	goto	l1637
  4459  0377                     l1625:	
  4460                           
  4461                           ;doprnt.c: 543: }
  4462                           ;doprnt.c: 548: flag = 0;
  4463  0377  0020               	movlb	0	; select bank0
  4464  0378  01A0               	clrf	printf@flag
  4465                           
  4466                           ;doprnt.c: 635: switch(c = *f++) {
  4467  0379  2B8A               	goto	l1635
  4468  037A                     l1627:	
  4469                           ;doprnt.c: 784: case 'c':
  4470                           
  4471                           ;doprnt.c: 638: goto alldone;
  4472                           
  4473                           ;doprnt.c: 637: case 0:
  4474                           
  4475                           
  4476                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  4477  037A  0821               	movf	printf@ap,w
  4478  037B  0086               	movwf	6
  4479  037C  0187               	clrf	7
  4480  037D  0801               	movf	1,w
  4481  037E  00F9               	movwf	??_printf
  4482  037F  0879               	movf	??_printf,w
  4483  0380  00A2               	movwf	printf@c
  4484  0381  3002               	movlw	2
  4485  0382  00F9               	movwf	??_printf
  4486  0383  0879               	movf	??_printf,w
  4487  0384  07A1               	addwf	printf@ap,f
  4488  0385                     l1631:	
  4489                           ;doprnt.c: 802: default:
  4490                           
  4491                           
  4492                           ;doprnt.c: 809: (putch(c) );
  4493  0385  0822               	movf	printf@c,w
  4494  0386  3185  25F0  3183   	fcall	_putch
  4495                           
  4496                           ;doprnt.c: 822: }
  4497                           
  4498                           ;doprnt.c: 810: continue;
  4499  0389  2B5B               	goto	l1637
  4500  038A                     l1635:	
  4501  038A  0874               	movf	printf@f+1,w
  4502  038B  00FA               	movwf	??_printf+1
  4503  038C  0873               	movf	printf@f,w
  4504  038D  00F9               	movwf	??_printf
  4505  038E  0AF3               	incf	printf@f,f
  4506  038F  1903               	skipnz
  4507  0390  0AF4               	incf	printf@f+1,f
  4508  0391  0879               	movf	??_printf,w
  4509  0392  0084               	movwf	4
  4510  0393  087A               	movf	??_printf+1,w
  4511  0394  0085               	movwf	5
  4512  0395  0800               	movf	0,w	;code access
  4513  0396  0020               	movlb	0	; select bank0
  4514  0397  00A2               	movwf	printf@c
  4515                           
  4516                           ; Switch size 1, requested type "space"
  4517                           ; Number of cases is 2, Range of values is 0 to 99
  4518                           ; switch strategies available:
  4519                           ; Name         Instructions Cycles
  4520                           ; simple_byte            7     4 (average)
  4521                           ; direct_byte          206     6 (fixed)
  4522                           ; jumptable            260     6 (fixed)
  4523                           ;	Chosen strategy is simple_byte
  4524  0398  3A00               	xorlw	0	; case 0
  4525  0399  1903               	skipnz
  4526  039A  2BA0               	goto	l301
  4527  039B  3A63               	xorlw	99	; case 99
  4528  039C  1903               	skipnz
  4529  039D  2B7A               	goto	l1627
  4530  039E  2B85               	goto	l1631
  4531  039F  2B5B               	goto	l1637
  4532  03A0                     l301:	
  4533                           ;doprnt.c: 1540: return 0;
  4534                           ;	Return value of _printf is never used
  4535                           
  4536                           ;doprnt.c: 1469: }
  4537                           ;doprnt.c: 1533: }
  4538                           ;doprnt.c: 1535: alldone:
  4539                           
  4540  03A0  0008               	return
  4541  03A1                     __end_of_printf:	
  4542                           
  4543                           	psect	text27
  4544  05F0                     __ptext27:	
  4545 ;; *************** function _putch *****************
  4546 ;; Defined at:
  4547 ;;		line 59 in file "UART.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  txData          1    wreg     unsigned char 
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  txData          1    2[COMMON] unsigned char 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0, pclath, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4565 ;;Total ram usage:        1 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    3
  4568 ;; This function calls:
  4569 ;;		_EUSART_Write
  4570 ;; This function is called by:
  4571 ;;		_printf
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           
  4576                           ;psect for function _putch
  4577  05F0                     _putch:	
  4578                           
  4579                           ;incstack = 0
  4580                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4581                           ;putch@txData stored from wreg
  4582  05F0  00F2               	movwf	putch@txData
  4583                           
  4584                           ;UART.c: 61: EUSART_Write(txData);
  4585  05F1  0872               	movf	putch@txData,w
  4586  05F2  3185  25DB         	fcall	_EUSART_Write
  4587  05F4  0008               	return
  4588  05F5                     __end_of_putch:	
  4589                           
  4590                           	psect	text28
  4591  05DB                     __ptext28:	
  4592 ;; *************** function _EUSART_Write *****************
  4593 ;; Defined at:
  4594 ;;		line 45 in file "UART.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  txData          1    wreg     unsigned char 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  txData          1    1[COMMON] unsigned char 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4611 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4612 ;;Total ram usage:        1 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; Hardware stack levels required when called:    2
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_putch
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           
  4623                           ;psect for function _EUSART_Write
  4624  05DB                     _EUSART_Write:	
  4625                           
  4626                           ;incstack = 0
  4627                           ; Regs used in _EUSART_Write: [wreg]
  4628                           ;EUSART_Write@txData stored from wreg
  4629  05DB  00F1               	movwf	EUSART_Write@txData
  4630  05DC                     l152:	
  4631                           ;UART.c: 48: {
  4632                           
  4633                           ;UART.c: 47: while(0 == PIR1bits.TXIF)
  4634                           
  4635  05DC  0020               	movlb	0	; select bank0
  4636  05DD  1E11               	btfss	17,4	;volatile
  4637  05DE  2DDC               	goto	l152
  4638                           
  4639                           ;UART.c: 49: }
  4640                           ;UART.c: 51: TXREG = txData;
  4641  05DF  0871               	movf	EUSART_Write@txData,w
  4642  05E0  0023               	movlb	3	; select bank3
  4643  05E1  009A               	movwf	26	;volatile
  4644  05E2  0008               	return
  4645  05E3                     __end_of_EUSART_Write:	
  4646                           
  4647                           	psect	text29
  4648  0583                     __ptext29:	
  4649 ;; *************** function _SR_FRSPowerDown *****************
  4650 ;; Defined at:
  4651 ;;		line 14 in file "SR_FRS.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;		None
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  1    wreg      void 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, status,0
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4668 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4669 ;;Total ram usage:        1 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:    2
  4672 ;; This function calls:
  4673 ;;		Nothing
  4674 ;; This function is called by:
  4675 ;;		_SR_FRSStart
  4676 ;;		_RadioOperation
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           
  4681                           ;psect for function _SR_FRSPowerDown
  4682  0583                     _SR_FRSPowerDown:	
  4683                           
  4684                           ;SR_FRS.c: 15: PORTCbits.RC6 ^= 1;
  4685                           
  4686                           ;incstack = 0
  4687                           ; Regs used in _SR_FRSPowerDown: [wreg+status,2+status,0]
  4688  0583  0020               	movlb	0	; select bank0
  4689  0584  0E0E               	swapf	14,w	;volatile
  4690  0585  00F1               	movwf	??_SR_FRSPowerDown
  4691  0586  0CF1               	rrf	??_SR_FRSPowerDown,f
  4692  0587  0C71               	rrf	??_SR_FRSPowerDown,w
  4693  0588  3901               	andlw	1
  4694  0589  00F1               	movwf	??_SR_FRSPowerDown
  4695  058A  3001               	movlw	1
  4696  058B  06F1               	xorwf	??_SR_FRSPowerDown,f
  4697  058C  0EF1               	swapf	??_SR_FRSPowerDown,f
  4698  058D  0DF1               	rlf	??_SR_FRSPowerDown,f
  4699  058E  0DF1               	rlf	??_SR_FRSPowerDown,f
  4700  058F  080E               	movf	14,w	;volatile
  4701  0590  0671               	xorwf	??_SR_FRSPowerDown,w
  4702  0591  39BF               	andlw	-65
  4703  0592  0671               	xorwf	??_SR_FRSPowerDown,w
  4704  0593  008E               	movwf	14	;volatile
  4705  0594  0008               	return
  4706  0595                     __end_of_SR_FRSPowerDown:	
  4707                           
  4708                           	psect	text30
  4709  0500                     __ptext30:	
  4710 ;; *************** function _Delay *****************
  4711 ;; Defined at:
  4712 ;;		line 76 in file "Function.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  wait            2    1[COMMON] int 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  x               2    4[COMMON] int 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      void 
  4719 ;; Registers used:
  4720 ;;		wreg, status,2
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4727 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4729 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;Total ram usage:        5 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    2
  4733 ;; This function calls:
  4734 ;;		Nothing
  4735 ;; This function is called by:
  4736 ;;		_main
  4737 ;;		_SR_FRSStart
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           
  4742                           ;psect for function _Delay
  4743  0500                     _Delay:	
  4744                           
  4745                           ;Function.c: 77: int x;
  4746                           ;Function.c: 78: for (x = 0; x < wait; x++) {
  4747                           
  4748                           ;incstack = 0
  4749                           ; Regs used in _Delay: [wreg+status,2]
  4750  0500  01F4               	clrf	Delay@x
  4751  0501  01F5               	clrf	Delay@x+1
  4752  0502                     l62:	
  4753  0502  0875               	movf	Delay@x+1,w
  4754  0503  3A80               	xorlw	128
  4755  0504  00F3               	movwf	??_Delay
  4756  0505  0872               	movf	Delay@wait+1,w
  4757  0506  3A80               	xorlw	128
  4758  0507  0273               	subwf	??_Delay,w
  4759  0508  1D03               	skipz
  4760  0509  2D0C               	goto	u765
  4761  050A  0871               	movf	Delay@wait,w
  4762  050B  0274               	subwf	Delay@x,w
  4763  050C                     u765:	
  4764  050C  1803               	btfsc	3,0
  4765  050D  0008               	return
  4766                           
  4767                           ;Function.c: 79: _delay((unsigned long)((1)*(4000000/4000.0)));
  4768  050E  30F9               	movlw	249
  4769  050F  00F3               	movwf	??_Delay
  4770  0510                     u1977:	
  4771  0510  0000               	nop
  4772  0511  0BF3               	decfsz	??_Delay,f
  4773  0512  2D10               	goto	u1977
  4774  0513  3200               	nop2	;nop
  4775  0514  0000               	nop
  4776  0515  3001               	movlw	1
  4777  0516  07F4               	addwf	Delay@x,f
  4778  0517  3000               	movlw	0
  4779  0518  3DF5               	addwfc	Delay@x+1,f
  4780  0519  2D02               	goto	l62
  4781  051A                     __end_of_Delay:	
  4782                           
  4783                           	psect	text31
  4784  05F5                     __ptext31:	
  4785 ;; *************** function _LEDOff *****************
  4786 ;; Defined at:
  4787 ;;		line 124 in file "Function.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;		None
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;		None
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		None
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4805 ;;Total ram usage:        0 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    2
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_main
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           
  4816                           ;psect for function _LEDOff
  4817  05F5                     _LEDOff:	
  4818                           
  4819                           ;Function.c: 125: PORTCbits.RC3 = 0;
  4820                           
  4821                           ;incstack = 0
  4822                           ; Regs used in _LEDOff: []
  4823  05F5  0020               	movlb	0	; select bank0
  4824  05F6  118E               	bcf	14,3	;volatile
  4825                           
  4826                           ;Function.c: 126: PORTCbits.RC5 = 0;
  4827  05F7  128E               	bcf	14,5	;volatile
  4828                           
  4829                           ;Function.c: 127: PORTCbits.RC4 = 0;
  4830  05F8  120E               	bcf	14,4	;volatile
  4831  05F9  0008               	return
  4832  05FA                     __end_of_LEDOff:	
  4833                           
  4834                           	psect	intentry
  4835  0004                     __pintentry:	
  4836 ;; *************** function _INTERRUPT_InterruptManager *****************
  4837 ;; Defined at:
  4838 ;;		line 94 in file "Function.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;		None
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      void 
  4845 ;; Registers used:
  4846 ;;		wreg, status,2, status,0, pclath, cstack
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4854 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4855 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4856 ;;Total ram usage:        1 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; Hardware stack levels required when called:    1
  4859 ;; This function calls:
  4860 ;;		_TMR2_ISR
  4861 ;; This function is called by:
  4862 ;;		Interrupt level 1
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866  0004                     _INTERRUPT_InterruptManager:	
  4867                           
  4868                           ;incstack = 0
  4869                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4870  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4871  0005  3180               	pagesel	$
  4872  0006  0020               	movlb	0	; select bank0
  4873  0007  087F               	movf	127,w
  4874  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
  4875                           
  4876                           ;Function.c: 96: if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4877  0009  0021               	movlb	1	; select bank1
  4878  000A  1C91               	btfss	17,1	;volatile
  4879  000B  2811               	goto	i1l73
  4880  000C  0020               	movlb	0	; select bank0
  4881  000D  1C91               	btfss	17,1	;volatile
  4882  000E  2811               	goto	i1l73
  4883                           
  4884                           ;Function.c: 97: {
  4885                           ;Function.c: 98: TMR2_ISR();
  4886  000F  3185  25E3         	fcall	_TMR2_ISR
  4887  0011                     i1l73:	
  4888                           ;Function.c: 100: else
  4889                           ;Function.c: 101: {
  4890                           
  4891                           ;Function.c: 99: }
  4892                           
  4893  0011  0870               	movf	??_INTERRUPT_InterruptManager,w
  4894  0012  0020               	movlb	0	; select bank0
  4895  0013  00FF               	movwf	127
  4896  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4897  0015  0009               	retfie
  4898  0016                     __end_of_INTERRUPT_InterruptManager:	
  4899                           
  4900                           	psect	text33
  4901  05E3                     __ptext33:	
  4902 ;; *************** function _TMR2_ISR *****************
  4903 ;; Defined at:
  4904 ;;		line 48 in file "Timer.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;		None
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;		None
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4922 ;;Total ram usage:        0 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; This function calls:
  4925 ;;		Nothing
  4926 ;; This function is called by:
  4927 ;;		_INTERRUPT_InterruptManager
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           
  4932                           ;psect for function _TMR2_ISR
  4933  05E3                     _TMR2_ISR:	
  4934                           
  4935                           ;Timer.c: 51: ticker++;
  4936                           
  4937                           ;incstack = 0
  4938                           ; Regs used in _TMR2_ISR: [wreg]
  4939  05E3  3001               	movlw	1
  4940  05E4  0020               	movlb	0	; select bank0
  4941  05E5  07C6               	addwf	_ticker,f
  4942  05E6  3000               	movlw	0
  4943  05E7  3DC7               	addwfc	_ticker+1,f
  4944                           
  4945                           ;Timer.c: 53: PIR1bits.TMR2IF = 0;
  4946  05E8  1091               	bcf	17,1	;volatile
  4947  05E9  0008               	return
  4948  05EA                     __end_of_TMR2_ISR:	
  4949  007E                     btemp	set	126	;btemp
  4950  007E                     int$flags	set	126
  4951  007E                     wtemp	set	126
  4952  007E                     wtemp0	set	126
  4953  0080                     wtemp1	set	128
  4954  0082                     wtemp2	set	130
  4955  0084                     wtemp3	set	132
  4956  0086                     wtemp4	set	134
  4957  0088                     wtemp5	set	136
  4958  007F                     wtemp6	set	127
  4959  007E                     ttemp	set	126
  4960  007E                     ttemp0	set	126
  4961  0081                     ttemp1	set	129
  4962  0084                     ttemp2	set	132
  4963  0087                     ttemp3	set	135
  4964  007F                     ttemp4	set	127
  4965  007E                     ltemp	set	126
  4966  007E                     ltemp0	set	126
  4967  0082                     ltemp1	set	130
  4968  0086                     ltemp2	set	134
  4969  0080                     ltemp3	set	128


Data Sizes:
    Strings     140
    Constant    0
    Data        1
    BSS         104
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     33      45
    BANK1            80      0      46
    BANK2            80      0      46
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_18(CODE[3]), STR_17(CODE[21]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[16]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[19]), 
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[22]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[45]), STR_4(CODE[3]), STR_3(CODE[3]), 
		 -> STR_2(CODE[14]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _RadioOperation->___awtoft
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    _ReadVoltage->_SetADCChannel
    _SetVolume->_printf
    _SetVOX->_printf
    _SetPowerSave->_printf
    _SetMIC->_printf
    _SetFrequency->_printf
    _SetCommandMode->_printf
    _printf->_putch
    _putch->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_RadioOperation
    _RadioOperation->___ftdiv
    ___ftdiv->___ftmul
    _SR_FRSStart->_SetMIC
    _SetVolume->_printf
    _SetVOX->_printf
    _SetPowerSave->_printf
    _SetMIC->_printf
    _SetFrequency->_printf
    _SetCommandMode->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17548
                              _Delay
                             _LEDOff
                         _RadioBegin
                     _RadioOperation
                              _Start
 ---------------------------------------------------------------------------------
 (1) _Start                                                0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RadioOperation                                       1     1      0    7720
                                             32 BANK0      1     1      0
                        _ClearTicker
                          _GetTicker
                        _ReadCharger
                        _ReadVoltage
                    _SR_FRSPowerDown
                         _SR_FRSTalk
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2626
                                              0 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     242
                                              1 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2558
                                             16 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2206
                                              9 COMMON     3     0      3
                                              0 BANK0      3     3      0
                        _ReadVoltage (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2008
                                              1 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _SR_FRSTalk                                           1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadVoltage                                          4     1      3      88
                                              2 COMMON     4     1      3
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (3) _SetADCChannel                                        1     1      0      66
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadCharger                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetTicker                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearTicker                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RadioBegin                                           0     0      0    9411
                        _SR_FRSStart
 ---------------------------------------------------------------------------------
 (2) _SR_FRSStart                                          0     0      0    9411
                              _Delay
                    _SR_FRSPowerDown
                     _SetCommandMode
                       _SetFrequency
                             _SetMIC
                       _SetPowerSave
                             _SetVOX
                          _SetVolume
 ---------------------------------------------------------------------------------
 (3) _SetVolume                                            3     3      0    1529
                                              3 BANK0      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SetVOX                                               3     1      2    1594
                                              3 BANK0      3     1      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SetPowerSave                                         0     0      0    1436
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SetMIC                                               6     5      1    1563
                                              3 BANK0      6     5      1
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SetFrequency                                         0     0      0    1436
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SetCommandMode                                       0     0      0    1436
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              23    17      6    1436
                                              3 COMMON     9     3      6
                                              0 BANK0      3     3      0
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              2 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SR_FRSPowerDown                                      1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     417
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LEDOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
   _LEDOff
   _RadioBegin
     _SR_FRSStart
       _Delay
       _SR_FRSPowerDown
       _SetCommandMode
         _printf
           _putch
             _EUSART_Write
       _SetFrequency
         _printf
           _putch
             _EUSART_Write
       _SetMIC
         _printf
           _putch
             _EUSART_Write
       _SetPowerSave
         _printf
           _putch
             _EUSART_Write
       _SetVOX
         _printf
           _putch
             _EUSART_Write
       _SetVolume
         _printf
           _putch
             _EUSART_Write
   _RadioOperation
     _ClearTicker
     _GetTicker
     _ReadCharger
     _ReadVoltage
       _SetADCChannel
     _SR_FRSPowerDown
     _SR_FRSTalk
     ___awtoft
       _ReadVoltage (ARG)
         _SetADCChannel
       ___ftpack (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
   _Start
     _ADC_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _TMR2_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      2D       5       56.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      2E       7       57.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      2E       9       57.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      96      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      96      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Aug 16 06:24:38 2016

                         __CFG_CP$ON 0000                                   l62 0502  
                                 l76 0577                                   l78 057C  
                        __CFG_CPD$ON 0000                          __CFG_LVP$ON 0000  
                                l301 03A0                                  l152 05DC  
                                l244 0041                                  l271 05AB  
                                l553 0337                                  l554 033F  
                                l546 0324                           _SR_FRSTalk 0595  
                                _PR2 001B                                  u765 050C  
                      _SetADCChannel 04E2                      _TMR2_Initialize 05BD  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       ___ftdiv@cntr 003A                         ___ftdiv@sign 003F  
                               l1303 04F6                                 l1361 0581  
                               l1631 0385                                 l1455 03FE  
                               l1625 0377                                 l1627 037A  
                               l1635 038A                                 l1299 04EC  
                               l1459 0414                                 l1803 0195  
                               l1637 035B                                 l1717 04CC  
                               l1733 01EA                                 l1671 0310  
                               l1663 02FA                                 l1727 01D4  
                               l1831 005A                                 l1667 0301  
                               l1755 0244                                 l1747 022B  
                               l1851 0080                                 l1677 0329  
                               l1669 030B                                 l1845 0077  
                               l1679 0331                                 l1791 0179  
                               l1775 0136                                 l1769 0120  
                               l1873 00E2                                 l1787 0171  
                               l1883 0103                                 l1867 00D2  
                               l1891 0566                                 l1799 018D  
                               l1879 00FA                                 STR_1 02EF  
                               STR_2 02E1                                 STR_3 02EF  
                               STR_4 02EF                                 STR_5 0266  
                               STR_6 02EF                                 STR_7 02EF  
                               STR_8 0293                                 STR_9 02EF  
                               u1605 0346                                 u1525 0306  
                               u1545 031F                                 u1565 032C  
                               u1805 0196                                 u1655 01FC  
                               u1815 019C                                 u1735 0142  
                               u1665 020C                                 u1745 0152  
                               u1675 022C                                 u1685 023B  
                               u1765 017A                                 u1925 008D  
                               u1695 0245                                 u1775 0180  
                               u1935 00DC                                 u1855 004A  
                               u1895 006C                                 u1977 0510  
                               i1l73 0011                                 _TMR2 001A  
                        _SR_FRSStart 03A1                         __CFG_WRT$ALL 0000  
                               _Mode 004A                                 _main 055D  
                       ___ftpack@arg 0071                         ___ftpack@exp 0074  
                               _time 0048                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                      ??_ReadCharger 0071                                 start 0016  
                               ttemp 007E                                 wtemp 007E  
                      __CFG_IESO$OFF 0000                        __CFG_MCLRE$ON 0000  
                       ___ftmul@cntr 002E                         ___ftmul@sign 002F  
                      ?_EUSART_Write 0070                        ??_ReadVoltage 0075  
                              ?_main 0070                                STR_10 02EF  
                              STR_11 02BE                                STR_12 02EF  
                              STR_13 02EF                                STR_14 02D1  
                              STR_15 02EF                                STR_16 02EF  
                              STR_17 02A9                        __CFG_WDTE$OFF 0000  
                              STR_18 02EF                      __end_of___ftdiv 0266  
                    __end_of___ftmul 01BD                                _T2CON 001C  
                   ??_SetCommandMode 007C                       ?_SetADCChannel 0070  
                              _RCREG 0199                                _RCSTA 019D  
                              _TXREG 019A                                _TXSTA 019E  
                              _Delay 0500                        __CFG_PWRTE$ON 0000  
                     __CFG_FCMEN$OFF 0000              __size_of_RadioOperation 00D2  
                   __end_of_TMR2_ISR 05EA                                _Start 0423  
                      ___awtoft@sign 0022                                _count 0044  
                      ___ftpack@sign 0075                                _putch 05F0  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                        _ClearTicker 05FA                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                    __initialization 0018           __end_of_EUSART1_Initialize 05BD  
                       __end_of_main 0571                           _RadioBegin 05FE  
                __end_of_ReadCharger 0583                       ??_EUSART_Write 0071  
                        SetMIC@scram 0023              __end_of_TMR2_Initialize 05C7  
        ?_INTERRUPT_InterruptManager 0070                               ??_main 007C  
                        ?_SR_FRSTalk 0070                   __size_of_GetTicker 0001  
                     __CFG_PLLEN$OFF 0000                               ?_Delay 0071  
                             ?_Start 0070                  __end_of_ReadVoltage 05B2  
                             _ADRESL 009B                     __end_of___awtoft 04E2  
                             ?_putch 0070                     __end_of___ftpack 0356  
                             _LEDOff 05F5                               Delay@x 0074  
                             _INTCON 000B                               _SPBRGH 019C  
                             _SPBRGL 019B                               _SetMIC 049B  
                             _SetVOX 044C                               ___ftge 03E8  
                      _output_buffer 0120                       __CFG_STVREN$ON 0000  
                          ??___ftdiv 0036                            ??___ftmul 0026  
                 __size_of_SetVolume 0027                               _ticker 0046  
                    ??_SetADCChannel 0071                               _printf 0356  
              ___ftmul@f3_as_product 002B                         __pdataCOMMON 007C  
                      ?_SetFrequency 0070        __size_of_INTERRUPT_Initialize 000A  
            __end_of__initialization 0033                           ___ftge@ff1 0071  
                         ___ftge@ff2 0074                           ___ftdiv@f1 0033  
                         ___ftdiv@f2 0030                           ___ftdiv@f3 003B  
                __size_of_SR_FRSTalk 000F                    __end_of_GetTicker 0603  
                        _ReadCharger 0571                           ___awtoft@c 0079  
                      __end_of_Delay 051A                           ___ftmul@f1 0020  
                         ___ftmul@f2 0023                       __pcstackCOMMON 0070  
                      __end_of_Start 044C                          ?_RadioBegin 0070  
                      ?_SetPowerSave 0070                            ?_TMR2_ISR 0070  
                      __end_of_putch 05F5                     ?_TMR2_Initialize 0070  
                    SetVolume@volume 0025                          _ReadVoltage 05A4  
                     ??_SetFrequency 007C                         SetMIC@volume 0028  
                            ??_Delay 0073                       _RadioOperation 0037  
                    SetADCChannel@ch 0071                              ??_Start 0071  
                            ??_putch 0072                           __pbssBANK0 0041  
                         __pbssBANK1 00A0                           __pbssBANK2 0120  
                       ?_SR_FRSStart 0070                              ?_LEDOff 0070  
               __end_of_EUSART_Write 05E3                    __end_of_SetVolume 049B  
                            ?_SetMIC 0023                              ?_SetVOX 0023  
                         __pmaintext 055D                       ??_SetPowerSave 007C  
                            ?___ftge 0071                           ??_TMR2_ISR 0070  
                         __pintentry 0004                              _BAUDCON 019F  
           __size_of_SR_FRSPowerDown 0012                            ?___awtoft 0079  
                          ?___ftpack 0071                              ?_printf 0073  
            __size_of_ADC_Initialize 000A               __end_of_RadioOperation 0109  
                __size_of_RadioBegin 0003                      __size_of_LEDOff 0005  
                            _Battery 0041                         ?_ClearTicker 0070  
                            _Talking 004C                      __size_of_SetMIC 0026  
                    __size_of_SetVOX 0028                      __size_of___ftge 003B  
                            ___ftdiv 01BD                              ___ftmul 0109  
                         ??___awtoft 0020                           ??___ftpack 0076  
                            __ptext1 0423                              __ptext2 05BD  
                            __ptext3 05C7                              __ptext4 05B2  
                            __ptext5 05D1                              __ptext6 0037  
                            __ptext7 0109                              __ptext8 03E8  
                            __ptext9 01BD                      __size_of_printf 004B  
                       ??_SR_FRSTalk 0071                      ?_RadioOperation 0070  
                          _T2CONbits 001C                   _EUSART1_Initialize 05B2  
                       SetVOX@volume 0023                              clrloop0 05EB  
               end_of_initialization 0033                            Delay@wait 0071  
                ?_EUSART1_Initialize 0070                 __end_of_SetFrequency 0548  
                   __CFG_CLKOUTEN$ON 0000                   __end_of_SR_FRSTalk 05A4  
                          _RCSTAbits 019D                              printf@c 0022  
                            printf@f 0073                         __pstringtext 0266  
               ??_EUSART1_Initialize 0071                            _PORTAbits 000C  
                          _PORTCbits 000E                     __CFG_FOSC$INTOSC 0000  
                          _TRISAbits 008C                            _TRISCbits 008E  
                  ??_SR_FRSPowerDown 0071                __size_of_EUSART_Write 0008  
               __end_of_SetPowerSave 0533              __size_of_SetCommandMode 0015  
                     __end_of_LEDOff 05FA                          ___ftdiv@exp 003E  
               __size_of_SR_FRSStart 0047                         ?_ReadCharger 0070  
                        ___ftmul@exp 002A                       __end_of_SetMIC 04C1  
                       ??_RadioBegin 007C                       __end_of_SetVOX 0474  
                          _GetTicker 0602         __end_of_INTERRUPT_Initialize 05D1  
                     __end_of___ftge 0423                        __pidataCOMMON 0601  
                       _EUSART_Write 05DB                    __size_of_TMR2_ISR 0007  
                     _ADC_Initialize 05D1                         ?_ReadVoltage 0072  
              __end_of_SetADCChannel 0500                       __end_of_printf 03A1  
                start_initialization 0018                        ReadVoltage@ch 0075  
                        putch@txData 0072                   __end_of_RadioBegin 0601  
                           ??_LEDOff 0071                 __size_of_ClearTicker 0004  
                          _SetVolume 0474                          _APFCON0bits 011D  
                           ??_SetMIC 0024                             ??_SetVOX 0025  
                           ??___ftge 0077                           ?_GetTicker 0070  
             __end_of_ADC_Initialize 05DB                             ??_printf 0079  
                  __size_of___awtoft 0021                    __size_of___ftpack 0064  
                          ___latbits 0002                        __pcstackBANK0 0020  
           __size_of_TMR2_Initialize 000A                __size_of_SetFrequency 0015  
                         ?_SetVolume 0070                             ?___ftdiv 0030  
                           ?___ftmul 0020                     ??_RadioOperation 0040  
                    ?_ADC_Initialize 0070         ??_INTERRUPT_InterruptManager 0070  
              __size_of_SetPowerSave 0019                         _SetFrequency 0533  
                     __size_of_Delay 001A                       __size_of_Start 0029  
                     __size_of_putch 0005                 _INTERRUPT_Initialize 05C7  
                     _SetCommandMode 0548                            clear_ram0 05EA  
                           _PIE1bits 0091  __size_of_INTERRUPT_InterruptManager 0012  
                           _PIR1bits 0011                 __size_of_ReadCharger 0012  
                        ??_GetTicker 0071                             _TMR2_ISR 05E3  
                       _SetPowerSave 051A                      _SR_FRSPowerDown 0583  
                       _input_buffer 00A0                           _ADCON0bits 009D  
                         _ADCON1bits 009E                           printf@flag 0020  
               __size_of_ReadVoltage 000E               __end_of_SetCommandMode 055D  
              ?_INTERRUPT_Initialize 0070                    ??_TMR2_Initialize 0071  
                        ??_SetVolume 0023                             _Shutdown 004B  
                   __size_of___ftdiv 00A9                     __size_of___ftmul 00B4  
        __size_of_EUSART1_Initialize 000B                             ___awtoft 04C1  
                           ___ftpack 02F2                           _ANSELAbits 018C  
                         _ANSELCbits 018E                             __ptext10 04C1  
                           __ptext11 02F2                             __ptext20 0474  
                           __ptext12 0595                             __ptext21 044C  
                           __ptext13 05A4                             __ptext30 0500  
                           __ptext22 051A                             __ptext14 04E2  
                           __ptext31 05F5                             __ptext23 049B  
                           __ptext15 0571                             __ptext24 0533  
                           __ptext16 0602                             __ptext33 05E3  
                           __ptext25 0548                             __ptext17 05FA  
                           __ptext26 0356                             __ptext18 05FE  
                           __ptext27 05F0                             __ptext19 03A1  
                           __ptext28 05DB                             __ptext29 0583  
                    ?_SetCommandMode 0070                        ??_SR_FRSStart 007C  
                      __size_of_main 0014                       _Transmit_stall 007C  
            __end_of_SR_FRSPowerDown 0595                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 0016           _INTERRUPT_InterruptManager 0004  
                         _INTCONbits 000B                           _FVRCONbits 0117  
             ??_INTERRUPT_Initialize 0071                             intlevel1 0000  
                      ??_ClearTicker 0071                     ??_ADC_Initialize 0071  
             __size_of_SetADCChannel 001E                  __end_of_SR_FRSStart 03E8  
                         _OSCCONbits 0099                             printf@ap 0021  
                 EUSART_Write@txData 0071                     ?_SR_FRSPowerDown 0070  
                __end_of_ClearTicker 05FE  
