

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Aug 17 17:27:17 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  008C                     	;# 
    80  008D                     	;# 
    81  008E                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0094                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0113                     	;# 
   103  0114                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011A                     	;# 
   110  011B                     	;# 
   111  011D                     	;# 
   112  011E                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  018E                     	;# 
   116  0191                     	;# 
   117  0191                     	;# 
   118  0192                     	;# 
   119  0193                     	;# 
   120  0193                     	;# 
   121  0193                     	;# 
   122  0194                     	;# 
   123  0195                     	;# 
   124  0196                     	;# 
   125  0199                     	;# 
   126  019A                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019C                     	;# 
   130  019D                     	;# 
   131  019E                     	;# 
   132  019F                     	;# 
   133  020C                     	;# 
   134  020D                     	;# 
   135  020E                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  0212                     	;# 
   139  0212                     	;# 
   140  0213                     	;# 
   141  0213                     	;# 
   142  0214                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0216                     	;# 
   148  0216                     	;# 
   149  0217                     	;# 
   150  0217                     	;# 
   151  0219                     	;# 
   152  021A                     	;# 
   153  021B                     	;# 
   154  021C                     	;# 
   155  021D                     	;# 
   156  021E                     	;# 
   157  021F                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029D                     	;# 
   173  029E                     	;# 
   174  0311                     	;# 
   175  0311                     	;# 
   176  0312                     	;# 
   177  0313                     	;# 
   178  0318                     	;# 
   179  0318                     	;# 
   180  0319                     	;# 
   181  031A                     	;# 
   182  038C                     	;# 
   183  038D                     	;# 
   184  038E                     	;# 
   185  0391                     	;# 
   186  0392                     	;# 
   187  0393                     	;# 
   188  0394                     	;# 
   189  0395                     	;# 
   190  0396                     	;# 
   191  039A                     	;# 
   192  039C                     	;# 
   193  039D                     	;# 
   194  039E                     	;# 
   195  039F                     	;# 
   196  0415                     	;# 
   197  0416                     	;# 
   198  0417                     	;# 
   199  041C                     	;# 
   200  041D                     	;# 
   201  041E                     	;# 
   202  0FE4                     	;# 
   203  0FE5                     	;# 
   204  0FE6                     	;# 
   205  0FE7                     	;# 
   206  0FE8                     	;# 
   207  0FE9                     	;# 
   208  0FEA                     	;# 
   209  0FEB                     	;# 
   210  0FED                     	;# 
   211  0FEE                     	;# 
   212  0FEF                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  010C                     	;# 
   262  010D                     	;# 
   263  010E                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0113                     	;# 
   267  0114                     	;# 
   268  0115                     	;# 
   269  0116                     	;# 
   270  0117                     	;# 
   271  0118                     	;# 
   272  0119                     	;# 
   273  011A                     	;# 
   274  011B                     	;# 
   275  011D                     	;# 
   276  011E                     	;# 
   277  018C                     	;# 
   278  018D                     	;# 
   279  018E                     	;# 
   280  0191                     	;# 
   281  0191                     	;# 
   282  0192                     	;# 
   283  0193                     	;# 
   284  0193                     	;# 
   285  0193                     	;# 
   286  0194                     	;# 
   287  0195                     	;# 
   288  0196                     	;# 
   289  0199                     	;# 
   290  019A                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019C                     	;# 
   294  019D                     	;# 
   295  019E                     	;# 
   296  019F                     	;# 
   297  020C                     	;# 
   298  020D                     	;# 
   299  020E                     	;# 
   300  0211                     	;# 
   301  0211                     	;# 
   302  0212                     	;# 
   303  0212                     	;# 
   304  0213                     	;# 
   305  0213                     	;# 
   306  0214                     	;# 
   307  0214                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0216                     	;# 
   312  0216                     	;# 
   313  0217                     	;# 
   314  0217                     	;# 
   315  0219                     	;# 
   316  021A                     	;# 
   317  021B                     	;# 
   318  021C                     	;# 
   319  021D                     	;# 
   320  021E                     	;# 
   321  021F                     	;# 
   322  0291                     	;# 
   323  0291                     	;# 
   324  0292                     	;# 
   325  0293                     	;# 
   326  0294                     	;# 
   327  0295                     	;# 
   328  0295                     	;# 
   329  0296                     	;# 
   330  0298                     	;# 
   331  0298                     	;# 
   332  0299                     	;# 
   333  029A                     	;# 
   334  029B                     	;# 
   335  029C                     	;# 
   336  029D                     	;# 
   337  029E                     	;# 
   338  0311                     	;# 
   339  0311                     	;# 
   340  0312                     	;# 
   341  0313                     	;# 
   342  0318                     	;# 
   343  0318                     	;# 
   344  0319                     	;# 
   345  031A                     	;# 
   346  038C                     	;# 
   347  038D                     	;# 
   348  038E                     	;# 
   349  0391                     	;# 
   350  0392                     	;# 
   351  0393                     	;# 
   352  0394                     	;# 
   353  0395                     	;# 
   354  0396                     	;# 
   355  039A                     	;# 
   356  039C                     	;# 
   357  039D                     	;# 
   358  039E                     	;# 
   359  039F                     	;# 
   360  0415                     	;# 
   361  0416                     	;# 
   362  0417                     	;# 
   363  041C                     	;# 
   364  041D                     	;# 
   365  041E                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEF                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  008E                     	;# 
   410  0091                     	;# 
   411  0092                     	;# 
   412  0093                     	;# 
   413  0094                     	;# 
   414  0095                     	;# 
   415  0096                     	;# 
   416  0097                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009A                     	;# 
   420  009B                     	;# 
   421  009B                     	;# 
   422  009C                     	;# 
   423  009D                     	;# 
   424  009E                     	;# 
   425  010C                     	;# 
   426  010D                     	;# 
   427  010E                     	;# 
   428  0111                     	;# 
   429  0112                     	;# 
   430  0113                     	;# 
   431  0114                     	;# 
   432  0115                     	;# 
   433  0116                     	;# 
   434  0117                     	;# 
   435  0118                     	;# 
   436  0119                     	;# 
   437  011A                     	;# 
   438  011B                     	;# 
   439  011D                     	;# 
   440  011E                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  018E                     	;# 
   444  0191                     	;# 
   445  0191                     	;# 
   446  0192                     	;# 
   447  0193                     	;# 
   448  0193                     	;# 
   449  0193                     	;# 
   450  0194                     	;# 
   451  0195                     	;# 
   452  0196                     	;# 
   453  0199                     	;# 
   454  019A                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019C                     	;# 
   458  019D                     	;# 
   459  019E                     	;# 
   460  019F                     	;# 
   461  020C                     	;# 
   462  020D                     	;# 
   463  020E                     	;# 
   464  0211                     	;# 
   465  0211                     	;# 
   466  0212                     	;# 
   467  0212                     	;# 
   468  0213                     	;# 
   469  0213                     	;# 
   470  0214                     	;# 
   471  0214                     	;# 
   472  0215                     	;# 
   473  0215                     	;# 
   474  0215                     	;# 
   475  0216                     	;# 
   476  0216                     	;# 
   477  0217                     	;# 
   478  0217                     	;# 
   479  0219                     	;# 
   480  021A                     	;# 
   481  021B                     	;# 
   482  021C                     	;# 
   483  021D                     	;# 
   484  021E                     	;# 
   485  021F                     	;# 
   486  0291                     	;# 
   487  0291                     	;# 
   488  0292                     	;# 
   489  0293                     	;# 
   490  0294                     	;# 
   491  0295                     	;# 
   492  0295                     	;# 
   493  0296                     	;# 
   494  0298                     	;# 
   495  0298                     	;# 
   496  0299                     	;# 
   497  029A                     	;# 
   498  029B                     	;# 
   499  029C                     	;# 
   500  029D                     	;# 
   501  029E                     	;# 
   502  0311                     	;# 
   503  0311                     	;# 
   504  0312                     	;# 
   505  0313                     	;# 
   506  0318                     	;# 
   507  0318                     	;# 
   508  0319                     	;# 
   509  031A                     	;# 
   510  038C                     	;# 
   511  038D                     	;# 
   512  038E                     	;# 
   513  0391                     	;# 
   514  0392                     	;# 
   515  0393                     	;# 
   516  0394                     	;# 
   517  0395                     	;# 
   518  0396                     	;# 
   519  039A                     	;# 
   520  039C                     	;# 
   521  039D                     	;# 
   522  039E                     	;# 
   523  039F                     	;# 
   524  0415                     	;# 
   525  0416                     	;# 
   526  0417                     	;# 
   527  041C                     	;# 
   528  041D                     	;# 
   529  041E                     	;# 
   530  0FE4                     	;# 
   531  0FE5                     	;# 
   532  0FE6                     	;# 
   533  0FE7                     	;# 
   534  0FE8                     	;# 
   535  0FE9                     	;# 
   536  0FEA                     	;# 
   537  0FEB                     	;# 
   538  0FED                     	;# 
   539  0FEE                     	;# 
   540  0FEF                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  0011                     	;# 
   557  0012                     	;# 
   558  0013                     	;# 
   559  0014                     	;# 
   560  0015                     	;# 
   561  0016                     	;# 
   562  0016                     	;# 
   563  0017                     	;# 
   564  0018                     	;# 
   565  0019                     	;# 
   566  001A                     	;# 
   567  001B                     	;# 
   568  001C                     	;# 
   569  001E                     	;# 
   570  001F                     	;# 
   571  008C                     	;# 
   572  008D                     	;# 
   573  008E                     	;# 
   574  0091                     	;# 
   575  0092                     	;# 
   576  0093                     	;# 
   577  0094                     	;# 
   578  0095                     	;# 
   579  0096                     	;# 
   580  0097                     	;# 
   581  0098                     	;# 
   582  0099                     	;# 
   583  009A                     	;# 
   584  009B                     	;# 
   585  009B                     	;# 
   586  009C                     	;# 
   587  009D                     	;# 
   588  009E                     	;# 
   589  010C                     	;# 
   590  010D                     	;# 
   591  010E                     	;# 
   592  0111                     	;# 
   593  0112                     	;# 
   594  0113                     	;# 
   595  0114                     	;# 
   596  0115                     	;# 
   597  0116                     	;# 
   598  0117                     	;# 
   599  0118                     	;# 
   600  0119                     	;# 
   601  011A                     	;# 
   602  011B                     	;# 
   603  011D                     	;# 
   604  011E                     	;# 
   605  018C                     	;# 
   606  018D                     	;# 
   607  018E                     	;# 
   608  0191                     	;# 
   609  0191                     	;# 
   610  0192                     	;# 
   611  0193                     	;# 
   612  0193                     	;# 
   613  0193                     	;# 
   614  0194                     	;# 
   615  0195                     	;# 
   616  0196                     	;# 
   617  0199                     	;# 
   618  019A                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019C                     	;# 
   622  019D                     	;# 
   623  019E                     	;# 
   624  019F                     	;# 
   625  020C                     	;# 
   626  020D                     	;# 
   627  020E                     	;# 
   628  0211                     	;# 
   629  0211                     	;# 
   630  0212                     	;# 
   631  0212                     	;# 
   632  0213                     	;# 
   633  0213                     	;# 
   634  0214                     	;# 
   635  0214                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0216                     	;# 
   640  0216                     	;# 
   641  0217                     	;# 
   642  0217                     	;# 
   643  0219                     	;# 
   644  021A                     	;# 
   645  021B                     	;# 
   646  021C                     	;# 
   647  021D                     	;# 
   648  021E                     	;# 
   649  021F                     	;# 
   650  0291                     	;# 
   651  0291                     	;# 
   652  0292                     	;# 
   653  0293                     	;# 
   654  0294                     	;# 
   655  0295                     	;# 
   656  0295                     	;# 
   657  0296                     	;# 
   658  0298                     	;# 
   659  0298                     	;# 
   660  0299                     	;# 
   661  029A                     	;# 
   662  029B                     	;# 
   663  029C                     	;# 
   664  029D                     	;# 
   665  029E                     	;# 
   666  0311                     	;# 
   667  0311                     	;# 
   668  0312                     	;# 
   669  0313                     	;# 
   670  0318                     	;# 
   671  0318                     	;# 
   672  0319                     	;# 
   673  031A                     	;# 
   674  038C                     	;# 
   675  038D                     	;# 
   676  038E                     	;# 
   677  0391                     	;# 
   678  0392                     	;# 
   679  0393                     	;# 
   680  0394                     	;# 
   681  0395                     	;# 
   682  0396                     	;# 
   683  039A                     	;# 
   684  039C                     	;# 
   685  039D                     	;# 
   686  039E                     	;# 
   687  039F                     	;# 
   688  0415                     	;# 
   689  0416                     	;# 
   690  0417                     	;# 
   691  041C                     	;# 
   692  041D                     	;# 
   693  041E                     	;# 
   694  0FE4                     	;# 
   695  0FE5                     	;# 
   696  0FE6                     	;# 
   697  0FE7                     	;# 
   698  0FE8                     	;# 
   699  0FE9                     	;# 
   700  0FEA                     	;# 
   701  0FEB                     	;# 
   702  0FED                     	;# 
   703  0FEE                     	;# 
   704  0FEF                     	;# 
   705  0000                     	;# 
   706  0001                     	;# 
   707  0002                     	;# 
   708  0003                     	;# 
   709  0004                     	;# 
   710  0005                     	;# 
   711  0006                     	;# 
   712  0007                     	;# 
   713  0008                     	;# 
   714  0009                     	;# 
   715  000A                     	;# 
   716  000B                     	;# 
   717  000C                     	;# 
   718  000D                     	;# 
   719  000E                     	;# 
   720  0011                     	;# 
   721  0012                     	;# 
   722  0013                     	;# 
   723  0014                     	;# 
   724  0015                     	;# 
   725  0016                     	;# 
   726  0016                     	;# 
   727  0017                     	;# 
   728  0018                     	;# 
   729  0019                     	;# 
   730  001A                     	;# 
   731  001B                     	;# 
   732  001C                     	;# 
   733  001E                     	;# 
   734  001F                     	;# 
   735  008C                     	;# 
   736  008D                     	;# 
   737  008E                     	;# 
   738  0091                     	;# 
   739  0092                     	;# 
   740  0093                     	;# 
   741  0094                     	;# 
   742  0095                     	;# 
   743  0096                     	;# 
   744  0097                     	;# 
   745  0098                     	;# 
   746  0099                     	;# 
   747  009A                     	;# 
   748  009B                     	;# 
   749  009B                     	;# 
   750  009C                     	;# 
   751  009D                     	;# 
   752  009E                     	;# 
   753  010C                     	;# 
   754  010D                     	;# 
   755  010E                     	;# 
   756  0111                     	;# 
   757  0112                     	;# 
   758  0113                     	;# 
   759  0114                     	;# 
   760  0115                     	;# 
   761  0116                     	;# 
   762  0117                     	;# 
   763  0118                     	;# 
   764  0119                     	;# 
   765  011A                     	;# 
   766  011B                     	;# 
   767  011D                     	;# 
   768  011E                     	;# 
   769  018C                     	;# 
   770  018D                     	;# 
   771  018E                     	;# 
   772  0191                     	;# 
   773  0191                     	;# 
   774  0192                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0194                     	;# 
   779  0195                     	;# 
   780  0196                     	;# 
   781  0199                     	;# 
   782  019A                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019C                     	;# 
   786  019D                     	;# 
   787  019E                     	;# 
   788  019F                     	;# 
   789  020C                     	;# 
   790  020D                     	;# 
   791  020E                     	;# 
   792  0211                     	;# 
   793  0211                     	;# 
   794  0212                     	;# 
   795  0212                     	;# 
   796  0213                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0216                     	;# 
   804  0216                     	;# 
   805  0217                     	;# 
   806  0217                     	;# 
   807  0219                     	;# 
   808  021A                     	;# 
   809  021B                     	;# 
   810  021C                     	;# 
   811  021D                     	;# 
   812  021E                     	;# 
   813  021F                     	;# 
   814  0291                     	;# 
   815  0291                     	;# 
   816  0292                     	;# 
   817  0293                     	;# 
   818  0294                     	;# 
   819  0295                     	;# 
   820  0295                     	;# 
   821  0296                     	;# 
   822  0298                     	;# 
   823  0298                     	;# 
   824  0299                     	;# 
   825  029A                     	;# 
   826  029B                     	;# 
   827  029C                     	;# 
   828  029D                     	;# 
   829  029E                     	;# 
   830  0311                     	;# 
   831  0311                     	;# 
   832  0312                     	;# 
   833  0313                     	;# 
   834  0318                     	;# 
   835  0318                     	;# 
   836  0319                     	;# 
   837  031A                     	;# 
   838  038C                     	;# 
   839  038D                     	;# 
   840  038E                     	;# 
   841  0391                     	;# 
   842  0392                     	;# 
   843  0393                     	;# 
   844  0394                     	;# 
   845  0395                     	;# 
   846  0396                     	;# 
   847  039A                     	;# 
   848  039C                     	;# 
   849  039D                     	;# 
   850  039E                     	;# 
   851  039F                     	;# 
   852  0415                     	;# 
   853  0416                     	;# 
   854  0417                     	;# 
   855  041C                     	;# 
   856  041D                     	;# 
   857  041E                     	;# 
   858  0FE4                     	;# 
   859  0FE5                     	;# 
   860  0FE6                     	;# 
   861  0FE7                     	;# 
   862  0FE8                     	;# 
   863  0FE9                     	;# 
   864  0FEA                     	;# 
   865  0FEB                     	;# 
   866  0FED                     	;# 
   867  0FEE                     	;# 
   868  0FEF                     	;# 
   869  0000                     	;# 
   870  0001                     	;# 
   871  0002                     	;# 
   872  0003                     	;# 
   873  0004                     	;# 
   874  0005                     	;# 
   875  0006                     	;# 
   876  0007                     	;# 
   877  0008                     	;# 
   878  0009                     	;# 
   879  000A                     	;# 
   880  000B                     	;# 
   881  000C                     	;# 
   882  000D                     	;# 
   883  000E                     	;# 
   884  0011                     	;# 
   885  0012                     	;# 
   886  0013                     	;# 
   887  0014                     	;# 
   888  0015                     	;# 
   889  0016                     	;# 
   890  0016                     	;# 
   891  0017                     	;# 
   892  0018                     	;# 
   893  0019                     	;# 
   894  001A                     	;# 
   895  001B                     	;# 
   896  001C                     	;# 
   897  001E                     	;# 
   898  001F                     	;# 
   899  008C                     	;# 
   900  008D                     	;# 
   901  008E                     	;# 
   902  0091                     	;# 
   903  0092                     	;# 
   904  0093                     	;# 
   905  0094                     	;# 
   906  0095                     	;# 
   907  0096                     	;# 
   908  0097                     	;# 
   909  0098                     	;# 
   910  0099                     	;# 
   911  009A                     	;# 
   912  009B                     	;# 
   913  009B                     	;# 
   914  009C                     	;# 
   915  009D                     	;# 
   916  009E                     	;# 
   917  010C                     	;# 
   918  010D                     	;# 
   919  010E                     	;# 
   920  0111                     	;# 
   921  0112                     	;# 
   922  0113                     	;# 
   923  0114                     	;# 
   924  0115                     	;# 
   925  0116                     	;# 
   926  0117                     	;# 
   927  0118                     	;# 
   928  0119                     	;# 
   929  011A                     	;# 
   930  011B                     	;# 
   931  011D                     	;# 
   932  011E                     	;# 
   933  018C                     	;# 
   934  018D                     	;# 
   935  018E                     	;# 
   936  0191                     	;# 
   937  0191                     	;# 
   938  0192                     	;# 
   939  0193                     	;# 
   940  0193                     	;# 
   941  0193                     	;# 
   942  0194                     	;# 
   943  0195                     	;# 
   944  0196                     	;# 
   945  0199                     	;# 
   946  019A                     	;# 
   947  019B                     	;# 
   948  019B                     	;# 
   949  019C                     	;# 
   950  019D                     	;# 
   951  019E                     	;# 
   952  019F                     	;# 
   953  020C                     	;# 
   954  020D                     	;# 
   955  020E                     	;# 
   956  0211                     	;# 
   957  0211                     	;# 
   958  0212                     	;# 
   959  0212                     	;# 
   960  0213                     	;# 
   961  0213                     	;# 
   962  0214                     	;# 
   963  0214                     	;# 
   964  0215                     	;# 
   965  0215                     	;# 
   966  0215                     	;# 
   967  0216                     	;# 
   968  0216                     	;# 
   969  0217                     	;# 
   970  0217                     	;# 
   971  0219                     	;# 
   972  021A                     	;# 
   973  021B                     	;# 
   974  021C                     	;# 
   975  021D                     	;# 
   976  021E                     	;# 
   977  021F                     	;# 
   978  0291                     	;# 
   979  0291                     	;# 
   980  0292                     	;# 
   981  0293                     	;# 
   982  0294                     	;# 
   983  0295                     	;# 
   984  0295                     	;# 
   985  0296                     	;# 
   986  0298                     	;# 
   987  0298                     	;# 
   988  0299                     	;# 
   989  029A                     	;# 
   990  029B                     	;# 
   991  029C                     	;# 
   992  029D                     	;# 
   993  029E                     	;# 
   994  0311                     	;# 
   995  0311                     	;# 
   996  0312                     	;# 
   997  0313                     	;# 
   998  0318                     	;# 
   999  0318                     	;# 
  1000  0319                     	;# 
  1001  031A                     	;# 
  1002  038C                     	;# 
  1003  038D                     	;# 
  1004  038E                     	;# 
  1005  0391                     	;# 
  1006  0392                     	;# 
  1007  0393                     	;# 
  1008  0394                     	;# 
  1009  0395                     	;# 
  1010  0396                     	;# 
  1011  039A                     	;# 
  1012  039C                     	;# 
  1013  039D                     	;# 
  1014  039E                     	;# 
  1015  039F                     	;# 
  1016  0415                     	;# 
  1017  0416                     	;# 
  1018  0417                     	;# 
  1019  041C                     	;# 
  1020  041D                     	;# 
  1021  041E                     	;# 
  1022  0FE4                     	;# 
  1023  0FE5                     	;# 
  1024  0FE6                     	;# 
  1025  0FE7                     	;# 
  1026  0FE8                     	;# 
  1027  0FE9                     	;# 
  1028  0FEA                     	;# 
  1029  0FEB                     	;# 
  1030  0FED                     	;# 
  1031  0FEE                     	;# 
  1032  0FEF                     	;# 
  1033  0000                     	;# 
  1034  0001                     	;# 
  1035  0002                     	;# 
  1036  0003                     	;# 
  1037  0004                     	;# 
  1038  0005                     	;# 
  1039  0006                     	;# 
  1040  0007                     	;# 
  1041  0008                     	;# 
  1042  0009                     	;# 
  1043  000A                     	;# 
  1044  000B                     	;# 
  1045  000C                     	;# 
  1046  000D                     	;# 
  1047  000E                     	;# 
  1048  0011                     	;# 
  1049  0012                     	;# 
  1050  0013                     	;# 
  1051  0014                     	;# 
  1052  0015                     	;# 
  1053  0016                     	;# 
  1054  0016                     	;# 
  1055  0017                     	;# 
  1056  0018                     	;# 
  1057  0019                     	;# 
  1058  001A                     	;# 
  1059  001B                     	;# 
  1060  001C                     	;# 
  1061  001E                     	;# 
  1062  001F                     	;# 
  1063  008C                     	;# 
  1064  008D                     	;# 
  1065  008E                     	;# 
  1066  0091                     	;# 
  1067  0092                     	;# 
  1068  0093                     	;# 
  1069  0094                     	;# 
  1070  0095                     	;# 
  1071  0096                     	;# 
  1072  0097                     	;# 
  1073  0098                     	;# 
  1074  0099                     	;# 
  1075  009A                     	;# 
  1076  009B                     	;# 
  1077  009B                     	;# 
  1078  009C                     	;# 
  1079  009D                     	;# 
  1080  009E                     	;# 
  1081  010C                     	;# 
  1082  010D                     	;# 
  1083  010E                     	;# 
  1084  0111                     	;# 
  1085  0112                     	;# 
  1086  0113                     	;# 
  1087  0114                     	;# 
  1088  0115                     	;# 
  1089  0116                     	;# 
  1090  0117                     	;# 
  1091  0118                     	;# 
  1092  0119                     	;# 
  1093  011A                     	;# 
  1094  011B                     	;# 
  1095  011D                     	;# 
  1096  011E                     	;# 
  1097  018C                     	;# 
  1098  018D                     	;# 
  1099  018E                     	;# 
  1100  0191                     	;# 
  1101  0191                     	;# 
  1102  0192                     	;# 
  1103  0193                     	;# 
  1104  0193                     	;# 
  1105  0193                     	;# 
  1106  0194                     	;# 
  1107  0195                     	;# 
  1108  0196                     	;# 
  1109  0199                     	;# 
  1110  019A                     	;# 
  1111  019B                     	;# 
  1112  019B                     	;# 
  1113  019C                     	;# 
  1114  019D                     	;# 
  1115  019E                     	;# 
  1116  019F                     	;# 
  1117  020C                     	;# 
  1118  020D                     	;# 
  1119  020E                     	;# 
  1120  0211                     	;# 
  1121  0211                     	;# 
  1122  0212                     	;# 
  1123  0212                     	;# 
  1124  0213                     	;# 
  1125  0213                     	;# 
  1126  0214                     	;# 
  1127  0214                     	;# 
  1128  0215                     	;# 
  1129  0215                     	;# 
  1130  0215                     	;# 
  1131  0216                     	;# 
  1132  0216                     	;# 
  1133  0217                     	;# 
  1134  0217                     	;# 
  1135  0219                     	;# 
  1136  021A                     	;# 
  1137  021B                     	;# 
  1138  021C                     	;# 
  1139  021D                     	;# 
  1140  021E                     	;# 
  1141  021F                     	;# 
  1142  0291                     	;# 
  1143  0291                     	;# 
  1144  0292                     	;# 
  1145  0293                     	;# 
  1146  0294                     	;# 
  1147  0295                     	;# 
  1148  0295                     	;# 
  1149  0296                     	;# 
  1150  0298                     	;# 
  1151  0298                     	;# 
  1152  0299                     	;# 
  1153  029A                     	;# 
  1154  029B                     	;# 
  1155  029C                     	;# 
  1156  029D                     	;# 
  1157  029E                     	;# 
  1158  0311                     	;# 
  1159  0311                     	;# 
  1160  0312                     	;# 
  1161  0313                     	;# 
  1162  0318                     	;# 
  1163  0318                     	;# 
  1164  0319                     	;# 
  1165  031A                     	;# 
  1166  038C                     	;# 
  1167  038D                     	;# 
  1168  038E                     	;# 
  1169  0391                     	;# 
  1170  0392                     	;# 
  1171  0393                     	;# 
  1172  0394                     	;# 
  1173  0395                     	;# 
  1174  0396                     	;# 
  1175  039A                     	;# 
  1176  039C                     	;# 
  1177  039D                     	;# 
  1178  039E                     	;# 
  1179  039F                     	;# 
  1180  0415                     	;# 
  1181  0416                     	;# 
  1182  0417                     	;# 
  1183  041C                     	;# 
  1184  041D                     	;# 
  1185  041E                     	;# 
  1186  0FE4                     	;# 
  1187  0FE5                     	;# 
  1188  0FE6                     	;# 
  1189  0FE7                     	;# 
  1190  0FE8                     	;# 
  1191  0FE9                     	;# 
  1192  0FEA                     	;# 
  1193  0FEB                     	;# 
  1194  0FED                     	;# 
  1195  0FEE                     	;# 
  1196  0FEF                     	;# 
  1197                           
  1198                           	psect	idataCOMMON
  1199  0616                     __pidataCOMMON:	
  1200                           
  1201                           ;initializer for _Transmit_stall
  1202  0616  3401               	retlw	1
  1203  000B                     _INTCON	set	11
  1204  000B                     _INTCONbits	set	11
  1205  0011                     _PIR1bits	set	17
  1206  000C                     _PORTAbits	set	12
  1207  000E                     _PORTCbits	set	14
  1208  001B                     _PR2	set	27
  1209  001C                     _T2CON	set	28
  1210  001C                     _T2CONbits	set	28
  1211  001A                     _TMR2	set	26
  1212  009D                     _ADCON0bits	set	157
  1213  009E                     _ADCON1bits	set	158
  1214  009B                     _ADRESL	set	155
  1215  0099                     _OSCCONbits	set	153
  1216  0091                     _PIE1bits	set	145
  1217  008C                     _TRISAbits	set	140
  1218  008E                     _TRISCbits	set	142
  1219  011D                     _APFCON0bits	set	285
  1220  0117                     _FVRCONbits	set	279
  1221  018C                     _ANSELAbits	set	396
  1222  018E                     _ANSELCbits	set	398
  1223  019F                     _BAUDCON	set	415
  1224  0199                     _RCREG	set	409
  1225  019D                     _RCSTA	set	413
  1226  019D                     _RCSTAbits	set	413
  1227  019C                     _SPBRGH	set	412
  1228  019B                     _SPBRGL	set	411
  1229  019A                     _TXREG	set	410
  1230  019E                     _TXSTA	set	414
  1231                           
  1232                           	psect	stringtext
  1233  027B                     __pstringtext:	
  1234  027B                     STR_5:	
  1235  027B  3441               	retlw	65	;'A'
  1236  027C  3454               	retlw	84	;'T'
  1237  027D  342B               	retlw	43	;'+'
  1238  027E  3444               	retlw	68	;'D'
  1239  027F  344D               	retlw	77	;'M'
  1240  0280  344F               	retlw	79	;'O'
  1241  0281  3453               	retlw	83	;'S'
  1242  0282  3445               	retlw	69	;'E'
  1243  0283  3454               	retlw	84	;'T'
  1244  0284  3447               	retlw	71	;'G'
  1245  0285  3452               	retlw	82	;'R'
  1246  0286  344F               	retlw	79	;'O'
  1247  0287  3455               	retlw	85	;'U'
  1248  0288  3450               	retlw	80	;'P'
  1249  0289  343D               	retlw	61	;'='
  1250  028A  3430               	retlw	48	;'0'
  1251  028B  342C               	retlw	44	;','
  1252  028C  3431               	retlw	49	;'1'
  1253  028D  3434               	retlw	52	;'4'
  1254  028E  3435               	retlw	53	;'5'
  1255  028F  342E               	retlw	46	;'.'
  1256  0290  3435               	retlw	53	;'5'
  1257  0291  3435               	retlw	53	;'5'
  1258  0292  3430               	retlw	48	;'0'
  1259  0293  3430               	retlw	48	;'0'
  1260  0294  342C               	retlw	44	;','
  1261  0295  3431               	retlw	49	;'1'
  1262  0296  3434               	retlw	52	;'4'
  1263  0297  3435               	retlw	53	;'5'
  1264  0298  342E               	retlw	46	;'.'
  1265  0299  3435               	retlw	53	;'5'
  1266  029A  3435               	retlw	53	;'5'
  1267  029B  3430               	retlw	48	;'0'
  1268  029C  3430               	retlw	48	;'0'
  1269  029D  342C               	retlw	44	;','
  1270  029E  3434               	retlw	52	;'4'
  1271  029F  3433               	retlw	51	;'3'
  1272  02A0  342C               	retlw	44	;','
  1273  02A1  3438               	retlw	56	;'8'
  1274  02A2  342C               	retlw	44	;','
  1275  02A3  3435               	retlw	53	;'5'
  1276  02A4  3431               	retlw	49	;'1'
  1277  02A5  342C               	retlw	44	;','
  1278  02A6  3430               	retlw	48	;'0'
  1279  02A7  3400               	retlw	0
  1280  02A8                     STR_8:	
  1281  02A8  3441               	retlw	65	;'A'
  1282  02A9  3454               	retlw	84	;'T'
  1283  02AA  342B               	retlw	43	;'+'
  1284  02AB  3444               	retlw	68	;'D'
  1285  02AC  344D               	retlw	77	;'M'
  1286  02AD  344F               	retlw	79	;'O'
  1287  02AE  3441               	retlw	65	;'A'
  1288  02AF  3455               	retlw	85	;'U'
  1289  02B0  3454               	retlw	84	;'T'
  1290  02B1  344F               	retlw	79	;'O'
  1291  02B2  3450               	retlw	80	;'P'
  1292  02B3  344F               	retlw	79	;'O'
  1293  02B4  3457               	retlw	87	;'W'
  1294  02B5  3443               	retlw	67	;'C'
  1295  02B6  344F               	retlw	79	;'O'
  1296  02B7  344E               	retlw	78	;'N'
  1297  02B8  3454               	retlw	84	;'T'
  1298  02B9  3452               	retlw	82	;'R'
  1299  02BA  343D               	retlw	61	;'='
  1300  02BB  3425               	retlw	37	;'%'
  1301  02BC  3463               	retlw	99	;'c'
  1302  02BD  3400               	retlw	0
  1303  02BE                     STR_17:	
  1304  02BE  3441               	retlw	65	;'A'
  1305  02BF  3454               	retlw	84	;'T'
  1306  02C0  342B               	retlw	43	;'+'
  1307  02C1  3444               	retlw	68	;'D'
  1308  02C2  344D               	retlw	77	;'M'
  1309  02C3  344F               	retlw	79	;'O'
  1310  02C4  3453               	retlw	83	;'S'
  1311  02C5  3445               	retlw	69	;'E'
  1312  02C6  3454               	retlw	84	;'T'
  1313  02C7  344D               	retlw	77	;'M'
  1314  02C8  3449               	retlw	73	;'I'
  1315  02C9  3443               	retlw	67	;'C'
  1316  02CA  343D               	retlw	61	;'='
  1317  02CB  3425               	retlw	37	;'%'
  1318  02CC  3463               	retlw	99	;'c'
  1319  02CD  342C               	retlw	44	;','
  1320  02CE  3425               	retlw	37	;'%'
  1321  02CF  3463               	retlw	99	;'c'
  1322  02D0  342C               	retlw	44	;','
  1323  02D1  3430               	retlw	48	;'0'
  1324  02D2  3400               	retlw	0
  1325  02D3                     STR_11:	
  1326  02D3  3441               	retlw	65	;'A'
  1327  02D4  3454               	retlw	84	;'T'
  1328  02D5  342B               	retlw	43	;'+'
  1329  02D6  3444               	retlw	68	;'D'
  1330  02D7  344D               	retlw	77	;'M'
  1331  02D8  344F               	retlw	79	;'O'
  1332  02D9  3453               	retlw	83	;'S'
  1333  02DA  3445               	retlw	69	;'E'
  1334  02DB  3454               	retlw	84	;'T'
  1335  02DC  3456               	retlw	86	;'V'
  1336  02DD  344F               	retlw	79	;'O'
  1337  02DE  344C               	retlw	76	;'L'
  1338  02DF  3455               	retlw	85	;'U'
  1339  02E0  344D               	retlw	77	;'M'
  1340  02E1  3445               	retlw	69	;'E'
  1341  02E2  343D               	retlw	61	;'='
  1342  02E3  3425               	retlw	37	;'%'
  1343  02E4  3463               	retlw	99	;'c'
  1344  02E5  3400               	retlw	0
  1345  02E6                     STR_14:	
  1346  02E6  3441               	retlw	65	;'A'
  1347  02E7  3454               	retlw	84	;'T'
  1348  02E8  342B               	retlw	43	;'+'
  1349  02E9  3444               	retlw	68	;'D'
  1350  02EA  344D               	retlw	77	;'M'
  1351  02EB  344F               	retlw	79	;'O'
  1352  02EC  3453               	retlw	83	;'S'
  1353  02ED  3445               	retlw	69	;'E'
  1354  02EE  3454               	retlw	84	;'T'
  1355  02EF  3456               	retlw	86	;'V'
  1356  02F0  344F               	retlw	79	;'O'
  1357  02F1  3458               	retlw	88	;'X'
  1358  02F2  343D               	retlw	61	;'='
  1359  02F3  3425               	retlw	37	;'%'
  1360  02F4  3463               	retlw	99	;'c'
  1361  02F5  3400               	retlw	0
  1362  02F6                     STR_2:	
  1363  02F6  3441               	retlw	65	;'A'
  1364  02F7  3454               	retlw	84	;'T'
  1365  02F8  342B               	retlw	43	;'+'
  1366  02F9  3444               	retlw	68	;'D'
  1367  02FA  344D               	retlw	77	;'M'
  1368  02FB  344F               	retlw	79	;'O'
  1369  02FC  3443               	retlw	67	;'C'
  1370  02FD  344F               	retlw	79	;'O'
  1371  02FE  344E               	retlw	78	;'N'
  1372  02FF  344E               	retlw	78	;'N'
  1373  0300  3445               	retlw	69	;'E'
  1374  0301  3443               	retlw	67	;'C'
  1375  0302  3454               	retlw	84	;'T'
  1376  0303  3400               	retlw	0
  1377  0304                     STR_1:	
  1378  0304  340D               	retlw	13
  1379  0305  340A               	retlw	10
  1380  0306  3400               	retlw	0
  1381  0304                     
  1382                           ; #config settings
  1383  0000                     
  1384                           	psect	cinit
  1385  0018                     start_initialization:	
  1386  0018                     __initialization:	
  1387                           
  1388                           ; Clear objects allocated to BANK0
  1389  0018  3041               	movlw	low __pbssBANK0
  1390  0019  0084               	movwf	4
  1391  001A  3000               	movlw	high __pbssBANK0
  1392  001B  0085               	movwf	5
  1393  001C  300C               	movlw	12
  1394  001D  3185  25FF  3180   	fcall	clear_ram0
  1395                           
  1396                           ; Clear objects allocated to BANK1
  1397  0020  30A0               	movlw	low __pbssBANK1
  1398  0021  0084               	movwf	4
  1399  0022  3000               	movlw	high __pbssBANK1
  1400  0023  0085               	movwf	5
  1401  0024  302E               	movlw	46
  1402  0025  3185  25FF  3180   	fcall	clear_ram0
  1403                           
  1404                           ; Clear objects allocated to BANK2
  1405  0028  3020               	movlw	low __pbssBANK2
  1406  0029  0084               	movwf	4
  1407  002A  3001               	movlw	high __pbssBANK2
  1408  002B  0085               	movwf	5
  1409  002C  302E               	movlw	46
  1410  002D  3185  25FF  3180   	fcall	clear_ram0
  1411                           
  1412                           ; Initialize objects allocated to COMMON
  1413  0030  3186  2616         	fcall	__pidataCOMMON	;fetch initializer
  1414  0032  00FC               	movwf	__pdataCOMMON& (0+127)
  1415  0033                     end_of_initialization:	
  1416                           ;End of C runtime variable initialization code
  1417                           
  1418  0033                     __end_of__initialization:	
  1419  0033  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1420  0034  0020               	movlb	0
  1421  0035  3185  2D72         	ljmp	_main	;jump to C main() function
  1422                           
  1423                           	psect	dataCOMMON
  1424  007C                     __pdataCOMMON:	
  1425  007C                     _Transmit_stall:	
  1426  007C                     	ds	1
  1427                           
  1428                           	psect	bssBANK0
  1429  0041                     __pbssBANK0:	
  1430  0041                     _Battery:	
  1431  0041                     	ds	3
  1432  0044                     _count:	
  1433  0044                     	ds	2
  1434  0046                     _ticker:	
  1435  0046                     	ds	2
  1436  0048                     _time:	
  1437  0048                     	ds	2
  1438  004A                     _Mode:	
  1439  004A                     	ds	1
  1440  004B                     _Shutdown:	
  1441  004B                     	ds	1
  1442  004C                     _Talking:	
  1443  004C                     	ds	1
  1444                           
  1445                           	psect	bssBANK1
  1446  00A0                     __pbssBANK1:	
  1447  00A0                     _input_buffer:	
  1448  00A0                     	ds	46
  1449                           
  1450                           	psect	bssBANK2
  1451  0120                     __pbssBANK2:	
  1452  0120                     _output_buffer:	
  1453  0120                     	ds	46
  1454                           
  1455                           	psect	clrtext
  1456  05FF                     clear_ram0:	
  1457                           ;	Called with FSR0 containing the base address, and
  1458                           ;	WREG with the size to clear
  1459                           
  1460  05FF  0064               	clrwdt	;clear the watchdog before getting into this loop
  1461  0600                     clrloop0:	
  1462  0600  0180               	clrf	0	;clear RAM location pointed to by FSR
  1463  0601  3101               	addfsr 0,1
  1464  0602  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1465  0603  2E00               	goto	clrloop0	;have we reached the end yet?
  1466  0604  3400               	retlw	0	;all done for this memory range, return
  1467                           
  1468                           	psect	cstackCOMMON
  1469  0070                     __pcstackCOMMON:	
  1470  0070                     ?_Start:	
  1471  0070                     ?_RadioBegin:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0070                     ?_LEDOff:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0070                     ?_RadioOperation:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  0070                     ?_ADC_Initialize:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483  0070                     ?_EUSART1_Initialize:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0070                     ?_INTERRUPT_Initialize:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0070                     ?_TMR2_Initialize:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0070                     ?_TMR2_ISR:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495  0070                     ??_TMR2_ISR:	
  1496                           ; 1 bytes @ 0x0
  1497                           
  1498  0070                     ?_SetCommandMode:	
  1499                           ; 1 bytes @ 0x0
  1500                           
  1501  0070                     ?_SetFrequency:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504  0070                     ?_SetPowerSave:	
  1505                           ; 1 bytes @ 0x0
  1506                           
  1507  0070                     ?_SetVolume:	
  1508                           ; 1 bytes @ 0x0
  1509                           
  1510  0070                     ?_SetADCChannel:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513  0070                     ?_INTERRUPT_InterruptManager:	
  1514                           ; 1 bytes @ 0x0
  1515                           
  1516  0070                     ??_INTERRUPT_InterruptManager:	
  1517                           ; 1 bytes @ 0x0
  1518                           
  1519  0070                     ?_ReadCharger:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0070                     ?_ClearTicker:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0070                     ?_EUSART_Write:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0070                     ?_putch:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0070                     ?_SR_FRSTalk:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0070                     ?_SR_FRSPowerDown:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0070                     ?_SR_FRSStart:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0070                     ?_main:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0070                     ?_GetTicker:	
  1544                           ; 2 bytes @ 0x0
  1545                           
  1546                           
  1547                           ; 2 bytes @ 0x0
  1548  0070                     	ds	1
  1549  0071                     ?___ftge:	
  1550  0071                     ??_Start:	
  1551                           ; 1 bit 
  1552                           
  1553  0071                     ??_LEDOff:	
  1554                           ; 1 bytes @ 0x1
  1555                           
  1556  0071                     ?_Delay:	
  1557                           ; 1 bytes @ 0x1
  1558                           
  1559  0071                     ??_ADC_Initialize:	
  1560                           ; 1 bytes @ 0x1
  1561                           
  1562  0071                     ??_EUSART1_Initialize:	
  1563                           ; 1 bytes @ 0x1
  1564                           
  1565  0071                     ??_INTERRUPT_Initialize:	
  1566                           ; 1 bytes @ 0x1
  1567                           
  1568  0071                     ??_TMR2_Initialize:	
  1569                           ; 1 bytes @ 0x1
  1570                           
  1571  0071                     ??_SetADCChannel:	
  1572                           ; 1 bytes @ 0x1
  1573                           
  1574  0071                     ??_ReadCharger:	
  1575                           ; 1 bytes @ 0x1
  1576                           
  1577  0071                     ??_ClearTicker:	
  1578                           ; 1 bytes @ 0x1
  1579                           
  1580  0071                     ??_GetTicker:	
  1581                           ; 1 bytes @ 0x1
  1582                           
  1583  0071                     ??_EUSART_Write:	
  1584                           ; 1 bytes @ 0x1
  1585                           
  1586  0071                     ??_SR_FRSTalk:	
  1587                           ; 1 bytes @ 0x1
  1588                           
  1589  0071                     ??_SR_FRSPowerDown:	
  1590                           ; 1 bytes @ 0x1
  1591                           
  1592  0071                     ?___ftpack:	
  1593                           ; 1 bytes @ 0x1
  1594                           
  1595  0071                     EUSART_Write@txData:	
  1596                           ; 3 bytes @ 0x1
  1597                           
  1598  0071                     SetADCChannel@ch:	
  1599                           ; 1 bytes @ 0x1
  1600                           
  1601  0071                     Delay@wait:	
  1602                           ; 1 bytes @ 0x1
  1603                           
  1604  0071                     ___ftpack@arg:	
  1605                           ; 2 bytes @ 0x1
  1606                           
  1607  0071                     ___ftge@ff1:	
  1608                           ; 3 bytes @ 0x1
  1609                           
  1610                           
  1611                           ; 3 bytes @ 0x1
  1612  0071                     	ds	1
  1613  0072                     ??_putch:	
  1614  0072                     ?_ReadVoltage:	
  1615                           ; 1 bytes @ 0x2
  1616                           
  1617  0072                     putch@txData:	
  1618                           ; 2 bytes @ 0x2
  1619                           
  1620                           
  1621                           ; 1 bytes @ 0x2
  1622  0072                     	ds	1
  1623  0073                     ??_Delay:	
  1624  0073                     ?_printf:	
  1625                           ; 1 bytes @ 0x3
  1626                           
  1627  0073                     printf@f:	
  1628                           ; 2 bytes @ 0x3
  1629                           
  1630                           
  1631                           ; 2 bytes @ 0x3
  1632  0073                     	ds	1
  1633  0074                     ___ftpack@exp:	
  1634  0074                     Delay@x:	
  1635                           ; 1 bytes @ 0x4
  1636                           
  1637  0074                     ___ftge@ff2:	
  1638                           ; 2 bytes @ 0x4
  1639                           
  1640                           
  1641                           ; 3 bytes @ 0x4
  1642  0074                     	ds	1
  1643  0075                     ??_ReadVoltage:	
  1644  0075                     ReadVoltage@ch:	
  1645                           ; 1 bytes @ 0x5
  1646                           
  1647  0075                     ___ftpack@sign:	
  1648                           ; 1 bytes @ 0x5
  1649                           
  1650                           
  1651                           ; 1 bytes @ 0x5
  1652  0075                     	ds	1
  1653  0076                     ??___ftpack:	
  1654                           
  1655                           ; 1 bytes @ 0x6
  1656  0076                     	ds	1
  1657  0077                     ??___ftge:	
  1658                           
  1659                           ; 1 bytes @ 0x7
  1660  0077                     	ds	2
  1661  0079                     ??_printf:	
  1662  0079                     ?___awtoft:	
  1663                           ; 1 bytes @ 0x9
  1664                           
  1665  0079                     ___awtoft@c:	
  1666                           ; 3 bytes @ 0x9
  1667                           
  1668                           
  1669                           ; 2 bytes @ 0x9
  1670  0079                     	ds	3
  1671  007C                     ??_RadioBegin:	
  1672  007C                     ??_SetCommandMode:	
  1673                           ; 1 bytes @ 0xC
  1674                           
  1675  007C                     ??_SetFrequency:	
  1676                           ; 1 bytes @ 0xC
  1677                           
  1678  007C                     ??_SetPowerSave:	
  1679                           ; 1 bytes @ 0xC
  1680                           
  1681  007C                     ??_main:	
  1682                           ; 1 bytes @ 0xC
  1683                           
  1684  007C                     ??_SR_FRSStart:	
  1685                           ; 1 bytes @ 0xC
  1686                           
  1687                           
  1688                           	psect	cstackBANK0
  1689  0020                     __pcstackBANK0:	
  1690                           ; 1 bytes @ 0xC
  1691                           
  1692  0020                     ??___awtoft:	
  1693  0020                     ?___ftmul:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  0020                     printf@flag:	
  1697                           ; 3 bytes @ 0x0
  1698                           
  1699  0020                     ___ftmul@f1:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702                           
  1703                           ; 3 bytes @ 0x0
  1704  0020                     	ds	1
  1705  0021                     printf@ap:	
  1706                           
  1707                           ; 1 bytes @ 0x1
  1708  0021                     	ds	1
  1709  0022                     printf@c:	
  1710  0022                     ___awtoft@sign:	
  1711                           ; 1 bytes @ 0x2
  1712                           
  1713                           
  1714                           ; 1 bytes @ 0x2
  1715  0022                     	ds	1
  1716  0023                     ??_SetVolume:	
  1717  0023                     ?_SetVOX:	
  1718                           ; 1 bytes @ 0x3
  1719                           
  1720  0023                     ?_SetMIC:	
  1721                           ; 1 bytes @ 0x3
  1722                           
  1723  0023                     SetMIC@scram:	
  1724                           ; 1 bytes @ 0x3
  1725                           
  1726  0023                     SetVOX@volume:	
  1727                           ; 1 bytes @ 0x3
  1728                           
  1729  0023                     ___ftmul@f2:	
  1730                           ; 2 bytes @ 0x3
  1731                           
  1732                           
  1733                           ; 3 bytes @ 0x3
  1734  0023                     	ds	1
  1735  0024                     ??_SetMIC:	
  1736                           
  1737                           ; 1 bytes @ 0x4
  1738  0024                     	ds	1
  1739  0025                     ??_SetVOX:	
  1740  0025                     SetVolume@volume:	
  1741                           ; 1 bytes @ 0x5
  1742                           
  1743                           
  1744                           ; 1 bytes @ 0x5
  1745  0025                     	ds	1
  1746  0026                     ??___ftmul:	
  1747                           
  1748                           ; 1 bytes @ 0x6
  1749  0026                     	ds	2
  1750  0028                     SetMIC@volume:	
  1751                           
  1752                           ; 1 bytes @ 0x8
  1753  0028                     	ds	2
  1754  002A                     ___ftmul@exp:	
  1755                           
  1756                           ; 1 bytes @ 0xA
  1757  002A                     	ds	1
  1758  002B                     ___ftmul@f3_as_product:	
  1759                           
  1760                           ; 3 bytes @ 0xB
  1761  002B                     	ds	3
  1762  002E                     ___ftmul@cntr:	
  1763                           
  1764                           ; 1 bytes @ 0xE
  1765  002E                     	ds	1
  1766  002F                     ___ftmul@sign:	
  1767                           
  1768                           ; 1 bytes @ 0xF
  1769  002F                     	ds	1
  1770  0030                     ?___ftdiv:	
  1771  0030                     ___ftdiv@f2:	
  1772                           ; 3 bytes @ 0x10
  1773                           
  1774                           
  1775                           ; 3 bytes @ 0x10
  1776  0030                     	ds	3
  1777  0033                     ___ftdiv@f1:	
  1778                           
  1779                           ; 3 bytes @ 0x13
  1780  0033                     	ds	3
  1781  0036                     ??___ftdiv:	
  1782                           
  1783                           ; 1 bytes @ 0x16
  1784  0036                     	ds	4
  1785  003A                     ___ftdiv@cntr:	
  1786                           
  1787                           ; 1 bytes @ 0x1A
  1788  003A                     	ds	1
  1789  003B                     ___ftdiv@f3:	
  1790                           
  1791                           ; 3 bytes @ 0x1B
  1792  003B                     	ds	3
  1793  003E                     ___ftdiv@exp:	
  1794                           
  1795                           ; 1 bytes @ 0x1E
  1796  003E                     	ds	1
  1797  003F                     ___ftdiv@sign:	
  1798                           
  1799                           ; 1 bytes @ 0x1F
  1800  003F                     	ds	1
  1801  0040                     ??_RadioOperation:	
  1802                           
  1803                           ; 1 bytes @ 0x20
  1804  0040                     	ds	1
  1805                           
  1806                           	psect	maintext
  1807  0572                     __pmaintext:	
  1808 ;;
  1809 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1810 ;;
  1811 ;; *************** function _main *****************
  1812 ;; Defined at:
  1813 ;;		line 16 in file "Main.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  2   12[None  ] int 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : B1F/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels required when called:    8
  1833 ;; This function calls:
  1834 ;;		_Delay
  1835 ;;		_LEDOff
  1836 ;;		_RadioBegin
  1837 ;;		_RadioOperation
  1838 ;;		_Start
  1839 ;; This function is called by:
  1840 ;;		Startup code after reset
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function _main
  1846  0572                     _main:	
  1847                           
  1848                           ;Main.c: 17: Start();
  1849                           
  1850                           ;incstack = 0
  1851                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1852  0572  3184  2438  3185   	fcall	_Start
  1853                           
  1854                           ;Main.c: 18: RadioBegin();
  1855  0575  3186  2613  3185   	fcall	_RadioBegin
  1856                           
  1857                           ;Main.c: 20: LEDOff();
  1858  0578  3186  260A  3185   	fcall	_LEDOff
  1859  057B                     l1904:	
  1860                           ;Main.c: 21: while(1){
  1861                           
  1862                           
  1863                           ;Main.c: 22: RadioOperation();
  1864  057B  3180  2037  3185   	fcall	_RadioOperation
  1865                           
  1866                           ;Main.c: 23: Delay(100);
  1867  057E  3064               	movlw	100
  1868  057F  00F1               	movwf	Delay@wait
  1869  0580  3000               	movlw	0
  1870  0581  00F2               	movwf	Delay@wait+1
  1871  0582  3185  2515  3185   	fcall	_Delay
  1872  0585  2D7B               	goto	l1904
  1873  0586                     __end_of_main:	
  1874                           ;Main.c: 24: }
  1875                           ;Main.c: 25: return 0;
  1876                           ;	Return value of _main is never used
  1877                           
  1878                           
  1879                           	psect	text1
  1880  0438                     __ptext1:	
  1881 ;; *************** function _Start *****************
  1882 ;; Defined at:
  1883 ;;		line 28 in file "Function.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;		None
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      void 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0, pclath, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;Total ram usage:        0 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    3
  1904 ;; This function calls:
  1905 ;;		_ADC_Initialize
  1906 ;;		_EUSART1_Initialize
  1907 ;;		_INTERRUPT_Initialize
  1908 ;;		_TMR2_Initialize
  1909 ;; This function is called by:
  1910 ;;		_main
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           
  1915                           ;psect for function _Start
  1916  0438                     _Start:	
  1917                           
  1918                           ;Function.c: 32: OSCCONbits.IRCF = 13;
  1919                           
  1920                           ;incstack = 0
  1921                           ; Regs used in _Start: [wreg+status,2+status,0+pclath+cstack]
  1922  0438  0021               	movlb	1	; select bank1
  1923  0439  0819               	movf	25,w	;volatile
  1924  043A  3987               	andlw	-121
  1925  043B  3868               	iorlw	104
  1926  043C  0099               	movwf	25	;volatile
  1927                           
  1928                           ;Function.c: 33: OSCCONbits.SCS = 2;
  1929  043D  0819               	movf	25,w	;volatile
  1930  043E  39FC               	andlw	-4
  1931  043F  3802               	iorlw	2
  1932  0440  0099               	movwf	25	;volatile
  1933                           
  1934                           ;Function.c: 34: OSCCONbits.SPLLEN = 0;
  1935  0441  1399               	bcf	25,7	;volatile
  1936                           
  1937                           ;Function.c: 38: TRISCbits.TRISC7 = 0;
  1938  0442  138E               	bcf	14,7	;volatile
  1939                           
  1940                           ;Function.c: 39: TRISCbits.TRISC6 = 0;
  1941  0443  130E               	bcf	14,6	;volatile
  1942                           
  1943                           ;Function.c: 40: TRISCbits.TRISC5 = 0;
  1944  0444  128E               	bcf	14,5	;volatile
  1945                           
  1946                           ;Function.c: 41: TRISCbits.TRISC4 = 0;
  1947  0445  120E               	bcf	14,4	;volatile
  1948                           
  1949                           ;Function.c: 42: TRISCbits.TRISC3 = 0;
  1950  0446  118E               	bcf	14,3	;volatile
  1951                           
  1952                           ;Function.c: 43: TRISAbits.TRISA2 = 1;
  1953  0447  150C               	bsf	12,2	;volatile
  1954                           
  1955                           ;Function.c: 44: TRISCbits.TRISC0 = 1;
  1956  0448  140E               	bsf	14,0	;volatile
  1957                           
  1958                           ;Function.c: 45: TRISCbits.TRISC1 = 1;
  1959  0449  148E               	bsf	14,1	;volatile
  1960                           
  1961                           ;Function.c: 46: TRISAbits.TRISA4 = 1;
  1962  044A  160C               	bsf	12,4	;volatile
  1963                           
  1964                           ;Function.c: 50: ANSELCbits.ANSC0 = 0;
  1965  044B  0023               	movlb	3	; select bank3
  1966  044C  100E               	bcf	14,0	;volatile
  1967                           
  1968                           ;Function.c: 51: ANSELCbits.ANSC1 = 0;
  1969  044D  108E               	bcf	14,1	;volatile
  1970                           
  1971                           ;Function.c: 52: ANSELAbits.ANSA2 = 0;
  1972  044E  110C               	bcf	12,2	;volatile
  1973                           
  1974                           ;Function.c: 53: ANSELCbits.ANSC3 = 0;
  1975  044F  118E               	bcf	14,3	;volatile
  1976                           
  1977                           ;Function.c: 54: ANSELCbits.ANSC6 = 0;
  1978  0450  130E               	bcf	14,6	;volatile
  1979                           
  1980                           ;Function.c: 55: ANSELCbits.ANSC7 = 0;
  1981  0451  138E               	bcf	14,7	;volatile
  1982                           
  1983                           ;Function.c: 58: APFCON0bits.RXDTSEL = 0;
  1984  0452  0022               	movlb	2	; select bank2
  1985  0453  139D               	bcf	29,7	;volatile
  1986                           
  1987                           ;Function.c: 59: APFCON0bits.TXCKSEL = 0;
  1988  0454  111D               	bcf	29,2	;volatile
  1989                           
  1990                           ;Function.c: 63: ADC_Initialize();
  1991  0455  3185  25E6  3184   	fcall	_ADC_Initialize
  1992                           
  1993                           ;Function.c: 67: EUSART1_Initialize();
  1994  0458  3185  25C7  3184   	fcall	_EUSART1_Initialize
  1995                           
  1996                           ;Function.c: 71: INTERRUPT_Initialize();
  1997  045B  3185  25DC  3184   	fcall	_INTERRUPT_Initialize
  1998                           
  1999                           ;Function.c: 72: TMR2_Initialize();
  2000  045E  3185  25D2         	fcall	_TMR2_Initialize
  2001  0460  0008               	return
  2002  0461                     __end_of_Start:	
  2003                           
  2004                           	psect	text2
  2005  05D2                     __ptext2:	
  2006 ;; *************** function _TMR2_Initialize *****************
  2007 ;; Defined at:
  2008 ;;		line 9 in file "Timer.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2026 ;;Total ram usage:        0 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    2
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_Start
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _TMR2_Initialize
  2038  05D2                     _TMR2_Initialize:	
  2039                           
  2040                           ;Timer.c: 14: T2CON = 0x00;
  2041                           
  2042                           ;incstack = 0
  2043                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  2044  05D2  0020               	movlb	0	; select bank0
  2045  05D3  019C               	clrf	28	;volatile
  2046                           
  2047                           ;Timer.c: 15: T2CONbits.TMR2ON = 0;
  2048  05D4  111C               	bcf	28,2	;volatile
  2049                           
  2050                           ;Timer.c: 18: PR2 = 18;
  2051  05D5  3012               	movlw	18
  2052  05D6  009B               	movwf	27	;volatile
  2053                           
  2054                           ;Timer.c: 21: TMR2 = 0;
  2055  05D7  019A               	clrf	26	;volatile
  2056                           
  2057                           ;Timer.c: 24: PIR1bits.TMR2IF = 0;
  2058  05D8  1091               	bcf	17,1	;volatile
  2059                           
  2060                           ;Timer.c: 27: PIE1bits.TMR2IE = 1;
  2061  05D9  0021               	movlb	1	; select bank1
  2062  05DA  1491               	bsf	17,1	;volatile
  2063  05DB  0008               	return
  2064  05DC                     __end_of_TMR2_Initialize:	
  2065                           
  2066                           	psect	text3
  2067  05DC                     __ptext3:	
  2068 ;; *************** function _INTERRUPT_Initialize *****************
  2069 ;; Defined at:
  2070 ;;		line 83 in file "Function.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		status,2
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2088 ;;Total ram usage:        0 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:    2
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_Start
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function _INTERRUPT_Initialize
  2100  05DC                     _INTERRUPT_Initialize:	
  2101                           
  2102                           ;Function.c: 85: INTCON = 0;
  2103                           
  2104                           ;incstack = 0
  2105                           ; Regs used in _INTERRUPT_Initialize: [status,2]
  2106  05DC  018B               	clrf	11	;volatile
  2107                           
  2108                           ;Function.c: 86: INTCONbits.TMR0IE = 0;
  2109  05DD  128B               	bcf	11,5	;volatile
  2110                           
  2111                           ;Function.c: 87: PIR1bits.TMR2IF = 0;
  2112  05DE  0020               	movlb	0	; select bank0
  2113  05DF  1091               	bcf	17,1	;volatile
  2114                           
  2115                           ;Function.c: 88: PIE1bits.TMR2IE = 1;
  2116  05E0  0021               	movlb	1	; select bank1
  2117  05E1  1491               	bsf	17,1	;volatile
  2118                           
  2119                           ;Function.c: 89: INTCONbits.TMR0IF = 0;
  2120  05E2  110B               	bcf	11,2	;volatile
  2121                           
  2122                           ;Function.c: 90: INTCONbits.GIE = 1;
  2123  05E3  178B               	bsf	11,7	;volatile
  2124                           
  2125                           ;Function.c: 91: INTCONbits.PEIE = 1;
  2126  05E4  170B               	bsf	11,6	;volatile
  2127  05E5  0008               	return
  2128  05E6                     __end_of_INTERRUPT_Initialize:	
  2129                           
  2130                           	psect	text4
  2131  05C7                     __ptext4:	
  2132 ;; *************** function _EUSART1_Initialize *****************
  2133 ;; Defined at:
  2134 ;;		line 10 in file "UART.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2152 ;;Total ram usage:        0 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    2
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_Start
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           
  2163                           ;psect for function _EUSART1_Initialize
  2164  05C7                     _EUSART1_Initialize:	
  2165                           
  2166                           ;UART.c: 12: BAUDCON = 0x08;
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in _EUSART1_Initialize: [wreg+status,2]
  2170  05C7  3008               	movlw	8
  2171  05C8  0023               	movlb	3	; select bank3
  2172  05C9  009F               	movwf	31	;volatile
  2173                           
  2174                           ;UART.c: 15: RCSTA = 0x90;
  2175  05CA  3090               	movlw	144
  2176  05CB  009D               	movwf	29	;volatile
  2177                           
  2178                           ;UART.c: 18: TXSTA = 0x24;
  2179  05CC  3024               	movlw	36
  2180  05CD  009E               	movwf	30	;volatile
  2181                           
  2182                           ;UART.c: 21: SPBRGL = 0x67;
  2183  05CE  3067               	movlw	103
  2184  05CF  009B               	movwf	27	;volatile
  2185                           
  2186                           ;UART.c: 24: SPBRGH = 0x00;
  2187  05D0  019C               	clrf	28	;volatile
  2188  05D1  0008               	return
  2189  05D2                     __end_of_EUSART1_Initialize:	
  2190                           
  2191                           	psect	text5
  2192  05E6                     __ptext5:	
  2193 ;; *************** function _ADC_Initialize *****************
  2194 ;; Defined at:
  2195 ;;		line 4 in file "ADC.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		None
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;Total ram usage:        0 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:    2
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_Start
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           
  2224                           ;psect for function _ADC_Initialize
  2225  05E6                     _ADC_Initialize:	
  2226                           
  2227                           ;ADC.c: 5: FVRCONbits.ADFVR0 = 1;
  2228                           
  2229                           ;incstack = 0
  2230                           ; Regs used in _ADC_Initialize: []
  2231  05E6  0022               	movlb	2	; select bank2
  2232  05E7  1417               	bsf	23,0	;volatile
  2233                           
  2234                           ;ADC.c: 6: FVRCONbits.ADFVR1 = 1;
  2235  05E8  1497               	bsf	23,1	;volatile
  2236                           
  2237                           ;ADC.c: 7: ADCON1bits.ADFM = 1;
  2238  05E9  0021               	movlb	1	; select bank1
  2239  05EA  179E               	bsf	30,7	;volatile
  2240                           
  2241                           ;ADC.c: 8: ADCON1bits.ADCS0 = 0;
  2242  05EB  121E               	bcf	30,4	;volatile
  2243                           
  2244                           ;ADC.c: 9: ADCON1bits.ADCS1 = 0;
  2245  05EC  129E               	bcf	30,5	;volatile
  2246                           
  2247                           ;ADC.c: 10: ADCON1bits.ADCS2 = 1;
  2248  05ED  171E               	bsf	30,6	;volatile
  2249                           
  2250                           ;ADC.c: 11: ADCON0bits.ADON = 1;
  2251  05EE  141D               	bsf	29,0	;volatile
  2252  05EF  0008               	return
  2253  05F0                     __end_of_ADC_Initialize:	
  2254                           
  2255                           	psect	text6
  2256  0037                     __ptext6:	
  2257 ;; *************** function _RadioOperation *****************
  2258 ;; Defined at:
  2259 ;;		line 28 in file "Radio.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0, pclath, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2275 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2276 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2277 ;;Total ram usage:        1 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    4
  2280 ;; This function calls:
  2281 ;;		_ClearTicker
  2282 ;;		_GetTicker
  2283 ;;		_ReadCharger
  2284 ;;		_ReadVoltage
  2285 ;;		_SR_FRSPowerDown
  2286 ;;		_SR_FRSTalk
  2287 ;;		___awtoft
  2288 ;;		___ftdiv
  2289 ;;		___ftge
  2290 ;;		___ftmul
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           
  2297                           ;psect for function _RadioOperation
  2298  0037                     _RadioOperation:	
  2299                           
  2300                           ;Radio.c: 29: if(!PORTAbits.RA2 && !Talking){
  2301                           
  2302                           ;incstack = 0
  2303                           ; Regs used in _RadioOperation: [wreg+status,2+status,0+pclath+cstack]
  2304  0037  0020               	movlb	0	; select bank0
  2305  0038  190C               	btfsc	12,2	;volatile
  2306  0039  2841               	goto	l244
  2307  003A  084C               	movf	_Talking,w
  2308  003B  1D03               	btfss	3,2
  2309  003C  2841               	goto	l244
  2310                           
  2311                           ;Radio.c: 30: count++;
  2312  003D  3001               	movlw	1
  2313  003E  07C4               	addwf	_count,f
  2314  003F  3000               	movlw	0
  2315  0040  3DC5               	addwfc	_count+1,f
  2316  0041                     l244:	
  2317                           
  2318                           ;Radio.c: 31: }
  2319                           ;Radio.c: 32: if((count > 5) && !Talking){
  2320  0041  0845               	movf	_count+1,w
  2321  0042  3A80               	xorlw	128
  2322  0043  00C0               	movwf	??_RadioOperation
  2323  0044  3080               	movlw	128
  2324  0045  0240               	subwf	??_RadioOperation,w
  2325  0046  1D03               	skipz
  2326  0047  284A               	goto	u1895
  2327  0048  3006               	movlw	6
  2328  0049  0244               	subwf	_count,w
  2329  004A                     u1895:	
  2330  004A  1C03               	skipc
  2331  004B  285A               	goto	l1840
  2332  004C  0020               	movlb	0	; select bank0
  2333  004D  084C               	movf	_Talking,w
  2334  004E  1D03               	btfss	3,2
  2335  004F  285A               	goto	l1840
  2336                           
  2337                           ;Radio.c: 33: SR_FRSTalk();
  2338  0050  3185  25AA  3180   	fcall	_SR_FRSTalk
  2339                           
  2340                           ;Radio.c: 34: PORTCbits.RC3 = 1;
  2341  0053  0020               	movlb	0	; select bank0
  2342  0054  158E               	bsf	14,3	;volatile
  2343                           
  2344                           ;Radio.c: 35: Talking = 1;
  2345  0055  01CC               	clrf	_Talking
  2346  0056  0ACC               	incf	_Talking,f
  2347                           
  2348                           ;Radio.c: 37: ClearTicker();
  2349  0057  3186  260F  3180   	fcall	_ClearTicker
  2350  005A                     l1840:	
  2351                           
  2352                           ;Radio.c: 38: }
  2353                           ;Radio.c: 39: if(Talking && PORTAbits.RA2){
  2354  005A  0020               	movlb	0	; select bank0
  2355  005B  084C               	movf	_Talking,w
  2356  005C  1D03               	btfss	3,2
  2357  005D  1D0C               	btfss	12,2	;volatile
  2358  005E  2877               	goto	l1854
  2359                           
  2360                           ;Radio.c: 40: count--;
  2361  005F  30FF               	movlw	255
  2362  0060  07C4               	addwf	_count,f
  2363  0061  30FF               	movlw	255
  2364  0062  3DC5               	addwfc	_count+1,f
  2365                           
  2366                           ;Radio.c: 41: if(count < 5){
  2367  0063  0845               	movf	_count+1,w
  2368  0064  3A80               	xorlw	128
  2369  0065  00C0               	movwf	??_RadioOperation
  2370  0066  3080               	movlw	128
  2371  0067  0240               	subwf	??_RadioOperation,w
  2372  0068  1D03               	skipz
  2373  0069  286C               	goto	u1935
  2374  006A  3005               	movlw	5
  2375  006B  0244               	subwf	_count,w
  2376  006C                     u1935:	
  2377  006C  1803               	skipnc
  2378  006D  2877               	goto	l1854
  2379                           
  2380                           ;Radio.c: 42: PORTCbits.RC3 = 0;
  2381  006E  0020               	movlb	0	; select bank0
  2382  006F  118E               	bcf	14,3	;volatile
  2383                           
  2384                           ;Radio.c: 43: SR_FRSTalk();
  2385  0070  3185  25AA  3180   	fcall	_SR_FRSTalk
  2386                           
  2387                           ;Radio.c: 45: count = 0;
  2388  0073  0020               	movlb	0	; select bank0
  2389  0074  01C4               	clrf	_count
  2390  0075  01C5               	clrf	_count+1
  2391                           
  2392                           ;Radio.c: 46: Talking = 0;
  2393  0076  01CC               	clrf	_Talking
  2394  0077                     l1854:	
  2395                           
  2396                           ;Radio.c: 47: }
  2397                           ;Radio.c: 48: }
  2398                           ;Radio.c: 49: if(Talking && !PORTAbits.RA2){
  2399  0077  0020               	movlb	0	; select bank0
  2400  0078  084C               	movf	_Talking,w
  2401  0079  1D03               	btfss	3,2
  2402  007A  190C               	btfsc	12,2	;volatile
  2403  007B  2880               	goto	l1860
  2404                           
  2405                           ;Radio.c: 50: count = 5;
  2406  007C  3005               	movlw	5
  2407  007D  00C4               	movwf	_count
  2408  007E  3000               	movlw	0
  2409  007F  00C5               	movwf	_count+1
  2410  0080                     l1860:	
  2411                           
  2412                           ;Radio.c: 51: }
  2413                           ;Radio.c: 52: if(!Talking && PORTAbits.RA2){
  2414  0080  084C               	movf	_Talking,w
  2415  0081  1903               	btfsc	3,2
  2416  0082  1D0C               	btfss	12,2	;volatile
  2417  0083  2886               	goto	l1866
  2418                           
  2419                           ;Radio.c: 53: count = 0;
  2420  0084  01C4               	clrf	_count
  2421  0085  01C5               	clrf	_count+1
  2422  0086                     l1866:	
  2423                           
  2424                           ;Radio.c: 54: }
  2425                           ;Radio.c: 55: if(GetTicker() > 100000){
  2426  0086  3186  2617  3180   	fcall	_GetTicker
  2427                           
  2428                           ;Radio.c: 59: }
  2429                           ;Radio.c: 60: if(time > 15){
  2430                           
  2431                           ;Radio.c: 58: PORTCbits.RC4 = 1;
  2432                           
  2433                           ;Radio.c: 57: SR_FRSPowerDown();
  2434  0089  0020               	movlb	0	; select bank0
  2435  008A  0849               	movf	_time+1,w
  2436  008B  3A80               	xorlw	128
  2437  008C  00C0               	movwf	??_RadioOperation
  2438  008D  3080               	movlw	128
  2439  008E  0240               	subwf	??_RadioOperation,w
  2440  008F  1D03               	skipz
  2441  0090  2893               	goto	u1985
  2442  0091  3010               	movlw	16
  2443  0092  0248               	subwf	_time,w
  2444  0093                     u1985:	
  2445  0093  1C03               	skipc
  2446  0094  28E7               	goto	l1880
  2447                           
  2448                           ;Radio.c: 61: PORTCbits.RC5 = 1;
  2449  0095  0020               	movlb	0	; select bank0
  2450  0096  168E               	bsf	14,5	;volatile
  2451                           
  2452                           ;Radio.c: 62: Battery = ReadVoltage(1);
  2453  0097  3001               	movlw	1
  2454  0098  3185  25B9  3180   	fcall	_ReadVoltage
  2455  009B  0873               	movf	?_ReadVoltage+1,w
  2456  009C  00FA               	movwf	___awtoft@c+1
  2457  009D  0872               	movf	?_ReadVoltage,w
  2458  009E  00F9               	movwf	___awtoft@c
  2459  009F  3184  24D6  3180   	fcall	___awtoft
  2460  00A2  0879               	movf	?___awtoft,w
  2461  00A3  0020               	movlb	0	; select bank0
  2462  00A4  00C1               	movwf	_Battery
  2463  00A5  087A               	movf	?___awtoft+1,w
  2464  00A6  00C2               	movwf	_Battery+1
  2465  00A7  087B               	movf	?___awtoft+2,w
  2466  00A8  00C3               	movwf	_Battery+2
  2467                           
  2468                           ;Radio.c: 63: Battery = (Battery*5.0)/1023.0;
  2469  00A9  30C0               	movlw	192
  2470  00AA  00B0               	movwf	___ftdiv@f2
  2471  00AB  307F               	movlw	127
  2472  00AC  00B1               	movwf	___ftdiv@f2+1
  2473  00AD  3044               	movlw	68
  2474  00AE  00B2               	movwf	___ftdiv@f2+2
  2475  00AF  3000               	movlw	0
  2476  00B0  00A0               	movwf	___ftmul@f1
  2477  00B1  30A0               	movlw	160
  2478  00B2  00A1               	movwf	___ftmul@f1+1
  2479  00B3  3040               	movlw	64
  2480  00B4  00A2               	movwf	___ftmul@f1+2
  2481  00B5  0841               	movf	_Battery,w
  2482  00B6  00A3               	movwf	___ftmul@f2
  2483  00B7  0842               	movf	_Battery+1,w
  2484  00B8  00A4               	movwf	___ftmul@f2+1
  2485  00B9  0843               	movf	_Battery+2,w
  2486  00BA  00A5               	movwf	___ftmul@f2+2
  2487  00BB  3181  211E  3180   	fcall	___ftmul
  2488  00BE  0020               	movlb	0	; select bank0
  2489  00BF  0820               	movf	?___ftmul,w
  2490  00C0  00B3               	movwf	___ftdiv@f1
  2491  00C1  0821               	movf	?___ftmul+1,w
  2492  00C2  00B4               	movwf	___ftdiv@f1+1
  2493  00C3  0822               	movf	?___ftmul+2,w
  2494  00C4  00B5               	movwf	___ftdiv@f1+2
  2495  00C5  3181  21D2  3180   	fcall	___ftdiv
  2496  00C8  0020               	movlb	0	; select bank0
  2497  00C9  0830               	movf	?___ftdiv,w
  2498  00CA  00C1               	movwf	_Battery
  2499  00CB  0831               	movf	?___ftdiv+1,w
  2500  00CC  00C2               	movwf	_Battery+1
  2501  00CD  0832               	movf	?___ftdiv+2,w
  2502  00CE  00C3               	movwf	_Battery+2
  2503                           
  2504                           ;Radio.c: 64: Battery = Battery*3;
  2505  00CF  3000               	movlw	0
  2506  00D0  00A0               	movwf	___ftmul@f1
  2507  00D1  3040               	movlw	64
  2508  00D2  00A1               	movwf	___ftmul@f1+1
  2509  00D3  3040               	movlw	64
  2510  00D4  00A2               	movwf	___ftmul@f1+2
  2511  00D5  0841               	movf	_Battery,w
  2512  00D6  00A3               	movwf	___ftmul@f2
  2513  00D7  0842               	movf	_Battery+1,w
  2514  00D8  00A4               	movwf	___ftmul@f2+1
  2515  00D9  0843               	movf	_Battery+2,w
  2516  00DA  00A5               	movwf	___ftmul@f2+2
  2517  00DB  3181  211E  3180   	fcall	___ftmul
  2518  00DE  0020               	movlb	0	; select bank0
  2519  00DF  0820               	movf	?___ftmul,w
  2520  00E0  00C1               	movwf	_Battery
  2521  00E1  0821               	movf	?___ftmul+1,w
  2522  00E2  00C2               	movwf	_Battery+1
  2523  00E3  0822               	movf	?___ftmul+2,w
  2524  00E4  00C3               	movwf	_Battery+2
  2525                           
  2526                           ;Radio.c: 65: time = 0;
  2527  00E5  01C8               	clrf	_time
  2528  00E6  01C9               	clrf	_time+1
  2529  00E7                     l1880:	
  2530                           
  2531                           ;Radio.c: 66: }
  2532                           ;Radio.c: 67: if((time > 1) && (PORTCbits.RC5 == 1)){
  2533  00E7  0020               	movlb	0	; select bank0
  2534  00E8  0849               	movf	_time+1,w
  2535  00E9  3A80               	xorlw	128
  2536  00EA  00C0               	movwf	??_RadioOperation
  2537  00EB  3080               	movlw	128
  2538  00EC  0240               	subwf	??_RadioOperation,w
  2539  00ED  1D03               	skipz
  2540  00EE  28F1               	goto	u1995
  2541  00EF  3002               	movlw	2
  2542  00F0  0248               	subwf	_time,w
  2543  00F1                     u1995:	
  2544  00F1  1C03               	skipc
  2545  00F2  28F7               	goto	l1886
  2546  00F3  0020               	movlb	0	; select bank0
  2547  00F4  1E8E               	btfss	14,5	;volatile
  2548  00F5  28F7               	goto	l1886
  2549                           
  2550                           ;Radio.c: 68: PORTCbits.RC5 = 0;
  2551  00F6  128E               	bcf	14,5	;volatile
  2552  00F7                     l1886:	
  2553                           
  2554                           ;Radio.c: 69: }
  2555                           ;Radio.c: 70: if(Battery < 6.2){
  2556  00F7  0020               	movlb	0	; select bank0
  2557  00F8  0841               	movf	_Battery,w
  2558  00F9  00F1               	movwf	___ftge@ff1
  2559  00FA  0842               	movf	_Battery+1,w
  2560  00FB  00F2               	movwf	___ftge@ff1+1
  2561  00FC  0843               	movf	_Battery+2,w
  2562  00FD  00F3               	movwf	___ftge@ff1+2
  2563  00FE  3066               	movlw	102
  2564  00FF  00F4               	movwf	___ftge@ff2
  2565  0100  30C6               	movlw	198
  2566  0101  00F5               	movwf	___ftge@ff2+1
  2567  0102  3040               	movlw	64
  2568  0103  00F6               	movwf	___ftge@ff2+2
  2569  0104  3183  23FD  3180   	fcall	___ftge
  2570                           
  2571                           ;Radio.c: 73: }
  2572                           ;Radio.c: 74: if(ReadCharger() == 1){
  2573  0107  3185  2586  3180   	fcall	_ReadCharger
  2574  010A  3A01               	xorlw	1
  2575  010B  1D03               	skipz
  2576  010C  290F               	goto	l1892
  2577                           
  2578                           ;Radio.c: 75: PORTCbits.RC4 = 1;
  2579  010D  0020               	movlb	0	; select bank0
  2580  010E  160E               	bsf	14,4	;volatile
  2581  010F                     l1892:	
  2582                           
  2583                           ;Radio.c: 76: }
  2584                           ;Radio.c: 77: if(ReadCharger() == 2){
  2585  010F  3185  2586  3180   	fcall	_ReadCharger
  2586  0112  3A02               	xorlw	2
  2587  0113  1D03               	skipz
  2588  0114  2918               	goto	l1896
  2589                           
  2590                           ;Radio.c: 78: PORTCbits.RC4 = 0;
  2591  0115  0020               	movlb	0	; select bank0
  2592  0116  120E               	bcf	14,4	;volatile
  2593                           
  2594                           ;Radio.c: 79: PORTCbits.RC5 = 1;
  2595  0117  168E               	bsf	14,5	;volatile
  2596  0118                     l1896:	
  2597                           
  2598                           ;Radio.c: 80: }
  2599                           ;Radio.c: 81: time++;
  2600  0118  3001               	movlw	1
  2601  0119  0020               	movlb	0	; select bank0
  2602  011A  07C8               	addwf	_time,f
  2603  011B  3000               	movlw	0
  2604  011C  3DC9               	addwfc	_time+1,f
  2605  011D  0008               	return
  2606  011E                     __end_of_RadioOperation:	
  2607                           
  2608                           	psect	text7
  2609  011E                     __ptext7:	
  2610 ;; *************** function ___ftmul *****************
  2611 ;; Defined at:
  2612 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  f1              3    0[BANK0 ] float 
  2615 ;;  f2              3    3[BANK0 ] float 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  2618 ;;  sign            1   15[BANK0 ] unsigned char 
  2619 ;;  cntr            1   14[BANK0 ] unsigned char 
  2620 ;;  exp             1   10[BANK0 ] unsigned char 
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  3    0[BANK0 ] float 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2, status,0, pclath, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2630 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2631 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2632 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2633 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2634 ;;Total ram usage:       16 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    3
  2637 ;; This function calls:
  2638 ;;		___ftpack
  2639 ;; This function is called by:
  2640 ;;		_RadioOperation
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           
  2645                           ;psect for function ___ftmul
  2646  011E                     ___ftmul:	
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2650  011E  0020               	movlb	0	; select bank0
  2651  011F  0820               	movf	___ftmul@f1,w
  2652  0120  00A6               	movwf	??___ftmul
  2653  0121  0821               	movf	___ftmul@f1+1,w
  2654  0122  00A7               	movwf	??___ftmul+1
  2655  0123  0822               	movf	___ftmul@f1+2,w
  2656  0124  00A8               	movwf	??___ftmul+2
  2657  0125  1003               	clrc
  2658  0126  0D27               	rlf	??___ftmul+1,w
  2659  0127  0D28               	rlf	??___ftmul+2,w
  2660  0128  00A9               	movwf	??___ftmul+3
  2661  0129  0829               	movf	??___ftmul+3,w
  2662  012A  00AA               	movwf	___ftmul@exp
  2663  012B  082A               	movf	___ftmul@exp,w
  2664  012C  1D03               	btfss	3,2
  2665  012D  2935               	goto	l1778
  2666  012E  3000               	movlw	0
  2667  012F  00A0               	movwf	?___ftmul
  2668  0130  3000               	movlw	0
  2669  0131  00A1               	movwf	?___ftmul+1
  2670  0132  3000               	movlw	0
  2671  0133  00A2               	movwf	?___ftmul+2
  2672  0134  0008               	return
  2673  0135                     l1778:	
  2674  0135  0823               	movf	___ftmul@f2,w
  2675  0136  00A6               	movwf	??___ftmul
  2676  0137  0824               	movf	___ftmul@f2+1,w
  2677  0138  00A7               	movwf	??___ftmul+1
  2678  0139  0825               	movf	___ftmul@f2+2,w
  2679  013A  00A8               	movwf	??___ftmul+2
  2680  013B  1003               	clrc
  2681  013C  0D27               	rlf	??___ftmul+1,w
  2682  013D  0D28               	rlf	??___ftmul+2,w
  2683  013E  00A9               	movwf	??___ftmul+3
  2684  013F  0829               	movf	??___ftmul+3,w
  2685  0140  00AF               	movwf	___ftmul@sign
  2686  0141  082F               	movf	___ftmul@sign,w
  2687  0142  1D03               	btfss	3,2
  2688  0143  294B               	goto	l1784
  2689  0144  3000               	movlw	0
  2690  0145  00A0               	movwf	?___ftmul
  2691  0146  3000               	movlw	0
  2692  0147  00A1               	movwf	?___ftmul+1
  2693  0148  3000               	movlw	0
  2694  0149  00A2               	movwf	?___ftmul+2
  2695  014A  0008               	return
  2696  014B                     l1784:	
  2697  014B  082F               	movf	___ftmul@sign,w
  2698  014C  3E7B               	addlw	123
  2699  014D  00A6               	movwf	??___ftmul
  2700  014E  0826               	movf	??___ftmul,w
  2701  014F  07AA               	addwf	___ftmul@exp,f
  2702  0150  0820               	movf	___ftmul@f1,w
  2703  0151  00A6               	movwf	??___ftmul
  2704  0152  0821               	movf	___ftmul@f1+1,w
  2705  0153  00A7               	movwf	??___ftmul+1
  2706  0154  0822               	movf	___ftmul@f1+2,w
  2707  0155  00A8               	movwf	??___ftmul+2
  2708  0156  3010               	movlw	16
  2709  0157                     u1775:	
  2710  0157  36A8               	lsrf	??___ftmul+2,f
  2711  0158  0CA7               	rrf	??___ftmul+1,f
  2712  0159  0CA6               	rrf	??___ftmul,f
  2713  015A  0B89               	decfsz	9,f
  2714  015B  2957               	goto	u1775
  2715  015C  0826               	movf	??___ftmul,w
  2716  015D  00A9               	movwf	??___ftmul+3
  2717  015E  0829               	movf	??___ftmul+3,w
  2718  015F  00AF               	movwf	___ftmul@sign
  2719  0160  0823               	movf	___ftmul@f2,w
  2720  0161  00A6               	movwf	??___ftmul
  2721  0162  0824               	movf	___ftmul@f2+1,w
  2722  0163  00A7               	movwf	??___ftmul+1
  2723  0164  0825               	movf	___ftmul@f2+2,w
  2724  0165  00A8               	movwf	??___ftmul+2
  2725  0166  3010               	movlw	16
  2726  0167                     u1785:	
  2727  0167  36A8               	lsrf	??___ftmul+2,f
  2728  0168  0CA7               	rrf	??___ftmul+1,f
  2729  0169  0CA6               	rrf	??___ftmul,f
  2730  016A  0B89               	decfsz	9,f
  2731  016B  2967               	goto	u1785
  2732  016C  0826               	movf	??___ftmul,w
  2733  016D  00A9               	movwf	??___ftmul+3
  2734  016E  0829               	movf	??___ftmul+3,w
  2735  016F  06AF               	xorwf	___ftmul@sign,f
  2736  0170  3080               	movlw	128
  2737  0171  00A6               	movwf	??___ftmul
  2738  0172  0826               	movf	??___ftmul,w
  2739  0173  05AF               	andwf	___ftmul@sign,f
  2740  0174  17A1               	bsf	___ftmul@f1+1,7
  2741  0175  17A4               	bsf	___ftmul@f2+1,7
  2742  0176  30FF               	movlw	255
  2743  0177  05A3               	andwf	___ftmul@f2,f
  2744  0178  30FF               	movlw	255
  2745  0179  05A4               	andwf	___ftmul@f2+1,f
  2746  017A  3000               	movlw	0
  2747  017B  05A5               	andwf	___ftmul@f2+2,f
  2748  017C  3000               	movlw	0
  2749  017D  00AB               	movwf	___ftmul@f3_as_product
  2750  017E  3000               	movlw	0
  2751  017F  00AC               	movwf	___ftmul@f3_as_product+1
  2752  0180  3000               	movlw	0
  2753  0181  00AD               	movwf	___ftmul@f3_as_product+2
  2754  0182  3007               	movlw	7
  2755  0183  00A6               	movwf	??___ftmul
  2756  0184  0826               	movf	??___ftmul,w
  2757  0185  00AE               	movwf	___ftmul@cntr
  2758  0186                     l1796:	
  2759  0186  1C20               	btfss	___ftmul@f1,0
  2760  0187  298E               	goto	l1800
  2761  0188  0823               	movf	___ftmul@f2,w
  2762  0189  07AB               	addwf	___ftmul@f3_as_product,f
  2763  018A  0824               	movf	___ftmul@f2+1,w
  2764  018B  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2765  018C  0825               	movf	___ftmul@f2+2,w
  2766  018D  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2767  018E                     l1800:	
  2768  018E  3001               	movlw	1
  2769  018F                     u1805:	
  2770  018F  36A2               	lsrf	___ftmul@f1+2,f
  2771  0190  0CA1               	rrf	___ftmul@f1+1,f
  2772  0191  0CA0               	rrf	___ftmul@f1,f
  2773  0192  0B89               	decfsz	9,f
  2774  0193  298F               	goto	u1805
  2775  0194  3001               	movlw	1
  2776  0195                     u1815:	
  2777  0195  35A3               	lslf	___ftmul@f2,f
  2778  0196  0DA4               	rlf	___ftmul@f2+1,f
  2779  0197  0DA5               	rlf	___ftmul@f2+2,f
  2780  0198  0B89               	decfsz	9,f
  2781  0199  2995               	goto	u1815
  2782  019A  3001               	movlw	1
  2783  019B  02AE               	subwf	___ftmul@cntr,f
  2784  019C  1D03               	btfss	3,2
  2785  019D  2986               	goto	l1796
  2786  019E  3009               	movlw	9
  2787  019F  00A6               	movwf	??___ftmul
  2788  01A0  0826               	movf	??___ftmul,w
  2789  01A1  00AE               	movwf	___ftmul@cntr
  2790  01A2                     l1808:	
  2791  01A2  1C20               	btfss	___ftmul@f1,0
  2792  01A3  29AA               	goto	l1812
  2793  01A4  0823               	movf	___ftmul@f2,w
  2794  01A5  07AB               	addwf	___ftmul@f3_as_product,f
  2795  01A6  0824               	movf	___ftmul@f2+1,w
  2796  01A7  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2797  01A8  0825               	movf	___ftmul@f2+2,w
  2798  01A9  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2799  01AA                     l1812:	
  2800  01AA  3001               	movlw	1
  2801  01AB                     u1845:	
  2802  01AB  36A2               	lsrf	___ftmul@f1+2,f
  2803  01AC  0CA1               	rrf	___ftmul@f1+1,f
  2804  01AD  0CA0               	rrf	___ftmul@f1,f
  2805  01AE  0B89               	decfsz	9,f
  2806  01AF  29AB               	goto	u1845
  2807  01B0  3001               	movlw	1
  2808  01B1                     u1855:	
  2809  01B1  36AD               	lsrf	___ftmul@f3_as_product+2,f
  2810  01B2  0CAC               	rrf	___ftmul@f3_as_product+1,f
  2811  01B3  0CAB               	rrf	___ftmul@f3_as_product,f
  2812  01B4  0B89               	decfsz	9,f
  2813  01B5  29B1               	goto	u1855
  2814  01B6  3001               	movlw	1
  2815  01B7  02AE               	subwf	___ftmul@cntr,f
  2816  01B8  1D03               	btfss	3,2
  2817  01B9  29A2               	goto	l1808
  2818  01BA  082B               	movf	___ftmul@f3_as_product,w
  2819  01BB  00F1               	movwf	___ftpack@arg
  2820  01BC  082C               	movf	___ftmul@f3_as_product+1,w
  2821  01BD  00F2               	movwf	___ftpack@arg+1
  2822  01BE  082D               	movf	___ftmul@f3_as_product+2,w
  2823  01BF  00F3               	movwf	___ftpack@arg+2
  2824  01C0  082A               	movf	___ftmul@exp,w
  2825  01C1  00A6               	movwf	??___ftmul
  2826  01C2  0826               	movf	??___ftmul,w
  2827  01C3  00F4               	movwf	___ftpack@exp
  2828  01C4  082F               	movf	___ftmul@sign,w
  2829  01C5  00A7               	movwf	??___ftmul+1
  2830  01C6  0827               	movf	??___ftmul+1,w
  2831  01C7  00F5               	movwf	___ftpack@sign
  2832  01C8  3183  2307         	fcall	___ftpack
  2833  01CA  0871               	movf	?___ftpack,w
  2834  01CB  0020               	movlb	0	; select bank0
  2835  01CC  00A0               	movwf	?___ftmul
  2836  01CD  0872               	movf	?___ftpack+1,w
  2837  01CE  00A1               	movwf	?___ftmul+1
  2838  01CF  0873               	movf	?___ftpack+2,w
  2839  01D0  00A2               	movwf	?___ftmul+2
  2840  01D1  0008               	return
  2841  01D2                     __end_of___ftmul:	
  2842                           
  2843                           	psect	text8
  2844  03FD                     __ptext8:	
  2845 ;; *************** function ___ftge *****************
  2846 ;; Defined at:
  2847 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftge.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  ff1             3    1[COMMON] float 
  2850 ;;  ff2             3    4[COMMON] float 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;		None               void
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, status,0
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2862 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2864 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2865 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2866 ;;Total ram usage:        9 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    2
  2869 ;; This function calls:
  2870 ;;		Nothing
  2871 ;; This function is called by:
  2872 ;;		_RadioOperation
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           
  2877                           ;psect for function ___ftge
  2878  03FD                     ___ftge:	
  2879                           
  2880                           ;incstack = 0
  2881                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2882  03FD  1FF3               	btfss	___ftge@ff1+2,7
  2883  03FE  2C13               	goto	l1460
  2884  03FF  0971               	comf	___ftge@ff1,w
  2885  0400  00F7               	movwf	??___ftge
  2886  0401  0972               	comf	___ftge@ff1+1,w
  2887  0402  00F8               	movwf	??___ftge+1
  2888  0403  0973               	comf	___ftge@ff1+2,w
  2889  0404  00F9               	movwf	??___ftge+2
  2890  0405  0AF7               	incf	??___ftge,f
  2891  0406  1903               	skipnz
  2892  0407  0AF8               	incf	??___ftge+1,f
  2893  0408  1903               	skipnz
  2894  0409  0AF9               	incf	??___ftge+2,f
  2895  040A  3000               	movlw	0
  2896  040B  0777               	addwf	??___ftge,w
  2897  040C  00F1               	movwf	___ftge@ff1
  2898  040D  3000               	movlw	0
  2899  040E  3D78               	addwfc	??___ftge+1,w
  2900  040F  00F2               	movwf	___ftge@ff1+1
  2901  0410  3080               	movlw	128
  2902  0411  3D79               	addwfc	??___ftge+2,w
  2903  0412  00F3               	movwf	___ftge@ff1+2
  2904  0413                     l1460:	
  2905  0413  1FF6               	btfss	___ftge@ff2+2,7
  2906  0414  2C29               	goto	l1464
  2907  0415  0974               	comf	___ftge@ff2,w
  2908  0416  00F7               	movwf	??___ftge
  2909  0417  0975               	comf	___ftge@ff2+1,w
  2910  0418  00F8               	movwf	??___ftge+1
  2911  0419  0976               	comf	___ftge@ff2+2,w
  2912  041A  00F9               	movwf	??___ftge+2
  2913  041B  0AF7               	incf	??___ftge,f
  2914  041C  1903               	skipnz
  2915  041D  0AF8               	incf	??___ftge+1,f
  2916  041E  1903               	skipnz
  2917  041F  0AF9               	incf	??___ftge+2,f
  2918  0420  3000               	movlw	0
  2919  0421  0777               	addwf	??___ftge,w
  2920  0422  00F4               	movwf	___ftge@ff2
  2921  0423  3000               	movlw	0
  2922  0424  3D78               	addwfc	??___ftge+1,w
  2923  0425  00F5               	movwf	___ftge@ff2+1
  2924  0426  3080               	movlw	128
  2925  0427  3D79               	addwfc	??___ftge+2,w
  2926  0428  00F6               	movwf	___ftge@ff2+2
  2927  0429                     l1464:	
  2928  0429  3080               	movlw	128
  2929  042A  06F3               	xorwf	___ftge@ff1+2,f
  2930  042B  3080               	movlw	128
  2931  042C  06F6               	xorwf	___ftge@ff2+2,f
  2932  042D  0876               	movf	___ftge@ff2+2,w
  2933  042E  0273               	subwf	___ftge@ff1+2,w
  2934  042F  1D03               	skipz
  2935  0430  0008               	return
  2936  0431  0875               	movf	___ftge@ff2+1,w
  2937  0432  0272               	subwf	___ftge@ff1+1,w
  2938  0433  1D03               	skipz
  2939  0434  0008               	return
  2940  0435  0874               	movf	___ftge@ff2,w
  2941  0436  0271               	subwf	___ftge@ff1,w
  2942  0437  0008               	return
  2943  0438                     __end_of___ftge:	
  2944                           
  2945                           	psect	text9
  2946  01D2                     __ptext9:	
  2947 ;; *************** function ___ftdiv *****************
  2948 ;; Defined at:
  2949 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  f2              3   16[BANK0 ] float 
  2952 ;;  f1              3   19[BANK0 ] float 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  f3              3   27[BANK0 ] float 
  2955 ;;  sign            1   31[BANK0 ] unsigned char 
  2956 ;;  exp             1   30[BANK0 ] unsigned char 
  2957 ;;  cntr            1   26[BANK0 ] unsigned char 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  3   16[BANK0 ] float 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0, pclath, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2967 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2968 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2969 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2970 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2971 ;;Total ram usage:       16 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    3
  2974 ;; This function calls:
  2975 ;;		___ftpack
  2976 ;; This function is called by:
  2977 ;;		_RadioOperation
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           
  2982                           ;psect for function ___ftdiv
  2983  01D2                     ___ftdiv:	
  2984                           
  2985                           ;incstack = 0
  2986                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2987  01D2  0020               	movlb	0	; select bank0
  2988  01D3  0833               	movf	___ftdiv@f1,w
  2989  01D4  00B6               	movwf	??___ftdiv
  2990  01D5  0834               	movf	___ftdiv@f1+1,w
  2991  01D6  00B7               	movwf	??___ftdiv+1
  2992  01D7  0835               	movf	___ftdiv@f1+2,w
  2993  01D8  00B8               	movwf	??___ftdiv+2
  2994  01D9  1003               	clrc
  2995  01DA  0D37               	rlf	??___ftdiv+1,w
  2996  01DB  0D38               	rlf	??___ftdiv+2,w
  2997  01DC  00B9               	movwf	??___ftdiv+3
  2998  01DD  0839               	movf	??___ftdiv+3,w
  2999  01DE  00BE               	movwf	___ftdiv@exp
  3000  01DF  083E               	movf	___ftdiv@exp,w
  3001  01E0  1D03               	btfss	3,2
  3002  01E1  29E9               	goto	l1736
  3003  01E2  3000               	movlw	0
  3004  01E3  00B0               	movwf	?___ftdiv
  3005  01E4  3000               	movlw	0
  3006  01E5  00B1               	movwf	?___ftdiv+1
  3007  01E6  3000               	movlw	0
  3008  01E7  00B2               	movwf	?___ftdiv+2
  3009  01E8  0008               	return
  3010  01E9                     l1736:	
  3011  01E9  0830               	movf	___ftdiv@f2,w
  3012  01EA  00B6               	movwf	??___ftdiv
  3013  01EB  0831               	movf	___ftdiv@f2+1,w
  3014  01EC  00B7               	movwf	??___ftdiv+1
  3015  01ED  0832               	movf	___ftdiv@f2+2,w
  3016  01EE  00B8               	movwf	??___ftdiv+2
  3017  01EF  1003               	clrc
  3018  01F0  0D37               	rlf	??___ftdiv+1,w
  3019  01F1  0D38               	rlf	??___ftdiv+2,w
  3020  01F2  00B9               	movwf	??___ftdiv+3
  3021  01F3  0839               	movf	??___ftdiv+3,w
  3022  01F4  00BF               	movwf	___ftdiv@sign
  3023  01F5  083F               	movf	___ftdiv@sign,w
  3024  01F6  1D03               	btfss	3,2
  3025  01F7  29FF               	goto	l1742
  3026  01F8  3000               	movlw	0
  3027  01F9  00B0               	movwf	?___ftdiv
  3028  01FA  3000               	movlw	0
  3029  01FB  00B1               	movwf	?___ftdiv+1
  3030  01FC  3000               	movlw	0
  3031  01FD  00B2               	movwf	?___ftdiv+2
  3032  01FE  0008               	return
  3033  01FF                     l1742:	
  3034  01FF  3000               	movlw	0
  3035  0200  00BB               	movwf	___ftdiv@f3
  3036  0201  3000               	movlw	0
  3037  0202  00BC               	movwf	___ftdiv@f3+1
  3038  0203  3000               	movlw	0
  3039  0204  00BD               	movwf	___ftdiv@f3+2
  3040  0205  3089               	movlw	137
  3041  0206  073F               	addwf	___ftdiv@sign,w
  3042  0207  00B6               	movwf	??___ftdiv
  3043  0208  0836               	movf	??___ftdiv,w
  3044  0209  02BE               	subwf	___ftdiv@exp,f
  3045  020A  0833               	movf	___ftdiv@f1,w
  3046  020B  00B6               	movwf	??___ftdiv
  3047  020C  0834               	movf	___ftdiv@f1+1,w
  3048  020D  00B7               	movwf	??___ftdiv+1
  3049  020E  0835               	movf	___ftdiv@f1+2,w
  3050  020F  00B8               	movwf	??___ftdiv+2
  3051  0210  3010               	movlw	16
  3052  0211                     u1695:	
  3053  0211  36B8               	lsrf	??___ftdiv+2,f
  3054  0212  0CB7               	rrf	??___ftdiv+1,f
  3055  0213  0CB6               	rrf	??___ftdiv,f
  3056  0214  0B89               	decfsz	9,f
  3057  0215  2A11               	goto	u1695
  3058  0216  0836               	movf	??___ftdiv,w
  3059  0217  00B9               	movwf	??___ftdiv+3
  3060  0218  0839               	movf	??___ftdiv+3,w
  3061  0219  00BF               	movwf	___ftdiv@sign
  3062  021A  0830               	movf	___ftdiv@f2,w
  3063  021B  00B6               	movwf	??___ftdiv
  3064  021C  0831               	movf	___ftdiv@f2+1,w
  3065  021D  00B7               	movwf	??___ftdiv+1
  3066  021E  0832               	movf	___ftdiv@f2+2,w
  3067  021F  00B8               	movwf	??___ftdiv+2
  3068  0220  3010               	movlw	16
  3069  0221                     u1705:	
  3070  0221  36B8               	lsrf	??___ftdiv+2,f
  3071  0222  0CB7               	rrf	??___ftdiv+1,f
  3072  0223  0CB6               	rrf	??___ftdiv,f
  3073  0224  0B89               	decfsz	9,f
  3074  0225  2A21               	goto	u1705
  3075  0226  0836               	movf	??___ftdiv,w
  3076  0227  00B9               	movwf	??___ftdiv+3
  3077  0228  0839               	movf	??___ftdiv+3,w
  3078  0229  06BF               	xorwf	___ftdiv@sign,f
  3079  022A  3080               	movlw	128
  3080  022B  00B6               	movwf	??___ftdiv
  3081  022C  0836               	movf	??___ftdiv,w
  3082  022D  05BF               	andwf	___ftdiv@sign,f
  3083  022E  17B4               	bsf	___ftdiv@f1+1,7
  3084  022F  30FF               	movlw	255
  3085  0230  05B3               	andwf	___ftdiv@f1,f
  3086  0231  30FF               	movlw	255
  3087  0232  05B4               	andwf	___ftdiv@f1+1,f
  3088  0233  3000               	movlw	0
  3089  0234  05B5               	andwf	___ftdiv@f1+2,f
  3090  0235  17B1               	bsf	___ftdiv@f2+1,7
  3091  0236  30FF               	movlw	255
  3092  0237  05B0               	andwf	___ftdiv@f2,f
  3093  0238  30FF               	movlw	255
  3094  0239  05B1               	andwf	___ftdiv@f2+1,f
  3095  023A  3000               	movlw	0
  3096  023B  05B2               	andwf	___ftdiv@f2+2,f
  3097  023C  3018               	movlw	24
  3098  023D  00B6               	movwf	??___ftdiv
  3099  023E  0836               	movf	??___ftdiv,w
  3100  023F  00BA               	movwf	___ftdiv@cntr
  3101  0240                     l1756:	
  3102  0240  3001               	movlw	1
  3103  0241                     u1715:	
  3104  0241  35BB               	lslf	___ftdiv@f3,f
  3105  0242  0DBC               	rlf	___ftdiv@f3+1,f
  3106  0243  0DBD               	rlf	___ftdiv@f3+2,f
  3107  0244  0B89               	decfsz	9,f
  3108  0245  2A41               	goto	u1715
  3109  0246  0832               	movf	___ftdiv@f2+2,w
  3110  0247  0235               	subwf	___ftdiv@f1+2,w
  3111  0248  1D03               	skipz
  3112  0249  2A50               	goto	u1725
  3113  024A  0831               	movf	___ftdiv@f2+1,w
  3114  024B  0234               	subwf	___ftdiv@f1+1,w
  3115  024C  1D03               	skipz
  3116  024D  2A50               	goto	u1725
  3117  024E  0830               	movf	___ftdiv@f2,w
  3118  024F  0233               	subwf	___ftdiv@f1,w
  3119  0250                     u1725:	
  3120  0250  1C03               	skipc
  3121  0251  2A59               	goto	l1764
  3122  0252  0830               	movf	___ftdiv@f2,w
  3123  0253  02B3               	subwf	___ftdiv@f1,f
  3124  0254  0831               	movf	___ftdiv@f2+1,w
  3125  0255  3BB4               	subwfb	___ftdiv@f1+1,f
  3126  0256  0832               	movf	___ftdiv@f2+2,w
  3127  0257  3BB5               	subwfb	___ftdiv@f1+2,f
  3128  0258  143B               	bsf	___ftdiv@f3,0
  3129  0259                     l1764:	
  3130  0259  3001               	movlw	1
  3131  025A                     u1735:	
  3132  025A  35B3               	lslf	___ftdiv@f1,f
  3133  025B  0DB4               	rlf	___ftdiv@f1+1,f
  3134  025C  0DB5               	rlf	___ftdiv@f1+2,f
  3135  025D  0B89               	decfsz	9,f
  3136  025E  2A5A               	goto	u1735
  3137  025F  3001               	movlw	1
  3138  0260  02BA               	subwf	___ftdiv@cntr,f
  3139  0261  1D03               	btfss	3,2
  3140  0262  2A40               	goto	l1756
  3141  0263  083B               	movf	___ftdiv@f3,w
  3142  0264  00F1               	movwf	___ftpack@arg
  3143  0265  083C               	movf	___ftdiv@f3+1,w
  3144  0266  00F2               	movwf	___ftpack@arg+1
  3145  0267  083D               	movf	___ftdiv@f3+2,w
  3146  0268  00F3               	movwf	___ftpack@arg+2
  3147  0269  083E               	movf	___ftdiv@exp,w
  3148  026A  00B6               	movwf	??___ftdiv
  3149  026B  0836               	movf	??___ftdiv,w
  3150  026C  00F4               	movwf	___ftpack@exp
  3151  026D  083F               	movf	___ftdiv@sign,w
  3152  026E  00B7               	movwf	??___ftdiv+1
  3153  026F  0837               	movf	??___ftdiv+1,w
  3154  0270  00F5               	movwf	___ftpack@sign
  3155  0271  3183  2307         	fcall	___ftpack
  3156  0273  0871               	movf	?___ftpack,w
  3157  0274  0020               	movlb	0	; select bank0
  3158  0275  00B0               	movwf	?___ftdiv
  3159  0276  0872               	movf	?___ftpack+1,w
  3160  0277  00B1               	movwf	?___ftdiv+1
  3161  0278  0873               	movf	?___ftpack+2,w
  3162  0279  00B2               	movwf	?___ftdiv+2
  3163  027A  0008               	return
  3164  027B                     __end_of___ftdiv:	
  3165                           
  3166                           	psect	text10
  3167  04D6                     __ptext10:	
  3168 ;; *************** function ___awtoft *****************
  3169 ;; Defined at:
  3170 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  c               2    9[COMMON] int 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  sign            1    2[BANK0 ] unsigned char 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  3    9[COMMON] float 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0, pclath, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3184 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3185 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3186 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3187 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3188 ;;Total ram usage:        6 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:    3
  3191 ;; This function calls:
  3192 ;;		___ftpack
  3193 ;; This function is called by:
  3194 ;;		_RadioOperation
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           
  3199                           ;psect for function ___awtoft
  3200  04D6                     ___awtoft:	
  3201                           
  3202                           ;incstack = 0
  3203                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3204  04D6  0020               	movlb	0	; select bank0
  3205  04D7  01A2               	clrf	___awtoft@sign
  3206  04D8  1FFA               	btfss	___awtoft@c+1,7
  3207  04D9  2CE1               	goto	l1726
  3208  04DA  09F9               	comf	___awtoft@c,f
  3209  04DB  09FA               	comf	___awtoft@c+1,f
  3210  04DC  0AF9               	incf	___awtoft@c,f
  3211  04DD  1903               	skipnz
  3212  04DE  0AFA               	incf	___awtoft@c+1,f
  3213  04DF  01A2               	clrf	___awtoft@sign
  3214  04E0  0AA2               	incf	___awtoft@sign,f
  3215  04E1                     l1726:	
  3216  04E1  0879               	movf	___awtoft@c,w
  3217  04E2  00F1               	movwf	___ftpack@arg
  3218  04E3  087A               	movf	___awtoft@c+1,w
  3219  04E4  00F2               	movwf	___ftpack@arg+1
  3220  04E5  01F3               	clrf	___ftpack@arg+2
  3221  04E6  308E               	movlw	142
  3222  04E7  00A0               	movwf	??___awtoft
  3223  04E8  0820               	movf	??___awtoft,w
  3224  04E9  00F4               	movwf	___ftpack@exp
  3225  04EA  0822               	movf	___awtoft@sign,w
  3226  04EB  00A1               	movwf	??___awtoft+1
  3227  04EC  0821               	movf	??___awtoft+1,w
  3228  04ED  00F5               	movwf	___ftpack@sign
  3229  04EE  3183  2307         	fcall	___ftpack
  3230  04F0  0871               	movf	?___ftpack,w
  3231  04F1  00F9               	movwf	?___awtoft
  3232  04F2  0872               	movf	?___ftpack+1,w
  3233  04F3  00FA               	movwf	?___awtoft+1
  3234  04F4  0873               	movf	?___ftpack+2,w
  3235  04F5  00FB               	movwf	?___awtoft+2
  3236  04F6  0008               	return
  3237  04F7                     __end_of___awtoft:	
  3238                           
  3239                           	psect	text11
  3240  0307                     __ptext11:	
  3241 ;; *************** function ___ftpack *****************
  3242 ;; Defined at:
  3243 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  arg             3    1[COMMON] unsigned um
  3246 ;;  exp             1    4[COMMON] unsigned char 
  3247 ;;  sign            1    5[COMMON] unsigned char 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  3    1[COMMON] float 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3259 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3261 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3262 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3263 ;;Total ram usage:        8 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    2
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		___awtoft
  3270 ;;		___ftdiv
  3271 ;;		___ftmul
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           
  3276                           ;psect for function ___ftpack
  3277  0307                     ___ftpack:	
  3278                           
  3279                           ;incstack = 0
  3280                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3281  0307  0874               	movf	___ftpack@exp,w
  3282  0308  1903               	btfsc	3,2
  3283  0309  2B0F               	goto	l1672
  3284  030A  0873               	movf	___ftpack@arg+2,w
  3285  030B  0472               	iorwf	___ftpack@arg+1,w
  3286  030C  0471               	iorwf	___ftpack@arg,w
  3287  030D  1D03               	skipz
  3288  030E  2B20               	goto	l1678
  3289  030F                     l1672:	
  3290  030F  3000               	movlw	0
  3291  0310  00F1               	movwf	?___ftpack
  3292  0311  3000               	movlw	0
  3293  0312  00F2               	movwf	?___ftpack+1
  3294  0313  3000               	movlw	0
  3295  0314  00F3               	movwf	?___ftpack+2
  3296  0315  0008               	return
  3297  0316                     l1676:	
  3298  0316  3001               	movlw	1
  3299  0317  00F6               	movwf	??___ftpack
  3300  0318  0876               	movf	??___ftpack,w
  3301  0319  07F4               	addwf	___ftpack@exp,f
  3302  031A  3001               	movlw	1
  3303  031B                     u1565:	
  3304  031B  36F3               	lsrf	___ftpack@arg+2,f
  3305  031C  0CF2               	rrf	___ftpack@arg+1,f
  3306  031D  0CF1               	rrf	___ftpack@arg,f
  3307  031E  0B89               	decfsz	9,f
  3308  031F  2B1B               	goto	u1565
  3309  0320                     l1678:	
  3310  0320  30FE               	movlw	254
  3311  0321  0573               	andwf	___ftpack@arg+2,w
  3312  0322  1903               	btfsc	3,2
  3313  0323  2B39               	goto	l547
  3314  0324  2B16               	goto	l1676
  3315  0325                     l1680:	
  3316  0325  3001               	movlw	1
  3317  0326  00F6               	movwf	??___ftpack
  3318  0327  0876               	movf	??___ftpack,w
  3319  0328  07F4               	addwf	___ftpack@exp,f
  3320  0329  3001               	movlw	1
  3321  032A  07F1               	addwf	___ftpack@arg,f
  3322  032B  3000               	movlw	0
  3323  032C  1803               	skipnc
  3324  032D  3001               	movlw	1
  3325  032E  07F2               	addwf	___ftpack@arg+1,f
  3326  032F  3000               	movlw	0
  3327  0330  1803               	skipnc
  3328  0331  3001               	movlw	1
  3329  0332  07F3               	addwf	___ftpack@arg+2,f
  3330  0333  3001               	movlw	1
  3331  0334                     u1585:	
  3332  0334  36F3               	lsrf	___ftpack@arg+2,f
  3333  0335  0CF2               	rrf	___ftpack@arg+1,f
  3334  0336  0CF1               	rrf	___ftpack@arg,f
  3335  0337  0B89               	decfsz	9,f
  3336  0338  2B34               	goto	u1585
  3337  0339                     l547:	
  3338  0339  30FF               	movlw	255
  3339  033A  0573               	andwf	___ftpack@arg+2,w
  3340  033B  1903               	btfsc	3,2
  3341  033C  2B46               	goto	l1688
  3342  033D  2B25               	goto	l1680
  3343  033E                     l1686:	
  3344  033E  3001               	movlw	1
  3345  033F  02F4               	subwf	___ftpack@exp,f
  3346  0340  3001               	movlw	1
  3347  0341                     u1605:	
  3348  0341  35F1               	lslf	___ftpack@arg,f
  3349  0342  0DF2               	rlf	___ftpack@arg+1,f
  3350  0343  0DF3               	rlf	___ftpack@arg+2,f
  3351  0344  0B89               	decfsz	9,f
  3352  0345  2B41               	goto	u1605
  3353  0346                     l1688:	
  3354  0346  1BF2               	btfsc	___ftpack@arg+1,7
  3355  0347  2B4C               	goto	l554
  3356  0348  3002               	movlw	2
  3357  0349  0274               	subwf	___ftpack@exp,w
  3358  034A  1803               	skipnc
  3359  034B  2B3E               	goto	l1686
  3360  034C                     l554:	
  3361  034C  1874               	btfsc	___ftpack@exp,0
  3362  034D  2B54               	goto	l555
  3363  034E  30FF               	movlw	255
  3364  034F  05F1               	andwf	___ftpack@arg,f
  3365  0350  307F               	movlw	127
  3366  0351  05F2               	andwf	___ftpack@arg+1,f
  3367  0352  30FF               	movlw	255
  3368  0353  05F3               	andwf	___ftpack@arg+2,f
  3369  0354                     l555:	
  3370  0354  1003               	clrc
  3371  0355  0CF4               	rrf	___ftpack@exp,f
  3372  0356  0874               	movf	___ftpack@exp,w
  3373  0357  00F6               	movwf	??___ftpack
  3374  0358  01F7               	clrf	??___ftpack+1
  3375  0359  01F8               	clrf	??___ftpack+2
  3376  035A  3010               	movlw	16
  3377  035B                     u1645:	
  3378  035B  35F6               	lslf	??___ftpack,f
  3379  035C  0DF7               	rlf	??___ftpack+1,f
  3380  035D  0DF8               	rlf	??___ftpack+2,f
  3381  035E  0B89               	decfsz	9,f
  3382  035F  2B5B               	goto	u1645
  3383  0360  0876               	movf	??___ftpack,w
  3384  0361  04F1               	iorwf	___ftpack@arg,f
  3385  0362  0877               	movf	??___ftpack+1,w
  3386  0363  04F2               	iorwf	___ftpack@arg+1,f
  3387  0364  0878               	movf	??___ftpack+2,w
  3388  0365  04F3               	iorwf	___ftpack@arg+2,f
  3389  0366  0875               	movf	___ftpack@sign,w
  3390  0367  1903               	btfsc	3,2
  3391  0368  0008               	return
  3392  0369  17F3               	bsf	___ftpack@arg+2,7
  3393  036A  0008               	return
  3394  036B                     __end_of___ftpack:	
  3395                           
  3396                           	psect	text12
  3397  05AA                     __ptext12:	
  3398 ;; *************** function _SR_FRSTalk *****************
  3399 ;; Defined at:
  3400 ;;		line 16 in file "SR_FRS.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;		None
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      void 
  3407 ;; Registers used:
  3408 ;;		wreg, status,2, status,0
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3418 ;;Total ram usage:        1 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:    2
  3421 ;; This function calls:
  3422 ;;		Nothing
  3423 ;; This function is called by:
  3424 ;;		_RadioOperation
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           
  3429                           ;psect for function _SR_FRSTalk
  3430  05AA                     _SR_FRSTalk:	
  3431                           
  3432                           ;SR_FRS.c: 17: PORTCbits.RC7 ^= 1;
  3433                           
  3434                           ;incstack = 0
  3435                           ; Regs used in _SR_FRSTalk: [wreg+status,2+status,0]
  3436  05AA  0020               	movlb	0	; select bank0
  3437  05AB  0D0E               	rlf	14,w	;volatile
  3438  05AC  0D0E               	rlf	14,w	;volatile
  3439  05AD  3901               	andlw	1
  3440  05AE  00F1               	movwf	??_SR_FRSTalk
  3441  05AF  3001               	movlw	1
  3442  05B0  06F1               	xorwf	??_SR_FRSTalk,f
  3443  05B1  0CF1               	rrf	??_SR_FRSTalk,f
  3444  05B2  0CF1               	rrf	??_SR_FRSTalk,f
  3445  05B3  080E               	movf	14,w	;volatile
  3446  05B4  0671               	xorwf	??_SR_FRSTalk,w
  3447  05B5  397F               	andlw	-129
  3448  05B6  0671               	xorwf	??_SR_FRSTalk,w
  3449  05B7  008E               	movwf	14	;volatile
  3450  05B8  0008               	return
  3451  05B9                     __end_of_SR_FRSTalk:	
  3452                           
  3453                           	psect	text13
  3454  05B9                     __ptext13:	
  3455 ;; *************** function _ReadVoltage *****************
  3456 ;; Defined at:
  3457 ;;		line 14 in file "ADC.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  ch              1    wreg     unsigned char 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  ch              1    5[COMMON] unsigned char 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  2    2[COMMON] int 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0, pclath, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3471 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3474 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3475 ;;Total ram usage:        4 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    3
  3478 ;; This function calls:
  3479 ;;		_SetADCChannel
  3480 ;; This function is called by:
  3481 ;;		_RadioOperation
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           
  3486                           ;psect for function _ReadVoltage
  3487  05B9                     _ReadVoltage:	
  3488                           
  3489                           ;incstack = 0
  3490                           ; Regs used in _ReadVoltage: [wreg+status,2+status,0+pclath+cstack]
  3491                           ;ReadVoltage@ch stored from wreg
  3492  05B9  00F5               	movwf	ReadVoltage@ch
  3493                           
  3494                           ;ADC.c: 15: SetADCChannel(ch);
  3495  05BA  0875               	movf	ReadVoltage@ch,w
  3496  05BB  3184  24F7  3185   	fcall	_SetADCChannel
  3497                           
  3498                           ;ADC.c: 16: ADCON0bits.GO_nDONE = 1;
  3499  05BE  0021               	movlb	1	; select bank1
  3500  05BF  149D               	bsf	29,1	;volatile
  3501  05C0                     l272:	
  3502                           ;ADC.c: 17: while(ADCON0bits.GO_nDONE);
  3503                           
  3504  05C0  189D               	btfsc	29,1	;volatile
  3505  05C1  2DC0               	goto	l272
  3506                           
  3507                           ;ADC.c: 18: return ((ADRESL << 8) + ADRESL);
  3508  05C2  081B               	movf	27,w	;volatile
  3509  05C3  00F3               	movwf	?_ReadVoltage+1
  3510  05C4  081B               	movf	27,w	;volatile
  3511  05C5  00F2               	movwf	?_ReadVoltage
  3512  05C6  0008               	return
  3513  05C7                     __end_of_ReadVoltage:	
  3514                           
  3515                           	psect	text14
  3516  04F7                     __ptext14:	
  3517 ;; *************** function _SetADCChannel *****************
  3518 ;; Defined at:
  3519 ;;		line 21 in file "ADC.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  ch              1    wreg     unsigned char 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  ch              1    1[COMMON] unsigned char 
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, status,0
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3537 ;;Total ram usage:        1 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    2
  3540 ;; This function calls:
  3541 ;;		Nothing
  3542 ;; This function is called by:
  3543 ;;		_ReadVoltage
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           
  3548                           ;psect for function _SetADCChannel
  3549  04F7                     _SetADCChannel:	
  3550                           
  3551                           ;incstack = 0
  3552                           ; Regs used in _SetADCChannel: [wreg+status,2+status,0]
  3553                           ;SetADCChannel@ch stored from wreg
  3554  04F7  00F1               	movwf	SetADCChannel@ch
  3555                           
  3556                           ;ADC.c: 22: if(ch == 1){
  3557  04F8  0371               	decf	SetADCChannel@ch,w
  3558  04F9  1D03               	btfss	3,2
  3559  04FA  2D01               	goto	l1304
  3560                           
  3561                           ;ADC.c: 23: ADCON0bits.CHS = 6;
  3562  04FB  0021               	movlb	1	; select bank1
  3563  04FC  081D               	movf	29,w	;volatile
  3564  04FD  3983               	andlw	-125
  3565  04FE  3818               	iorlw	24
  3566  04FF  009D               	movwf	29	;volatile
  3567                           
  3568                           ;ADC.c: 24: }
  3569  0500  0008               	return
  3570  0501                     l1304:	
  3571                           
  3572                           ;ADC.c: 25: else if(ch == 2){
  3573  0501  3002               	movlw	2
  3574  0502  0671               	xorwf	SetADCChannel@ch,w
  3575  0503  1D03               	btfss	3,2
  3576  0504  2D0B               	goto	l1308
  3577                           
  3578                           ;ADC.c: 26: ADCON0bits.CHS = 29;
  3579  0505  0021               	movlb	1	; select bank1
  3580  0506  081D               	movf	29,w	;volatile
  3581  0507  3983               	andlw	-125
  3582  0508  3874               	iorlw	116
  3583  0509  009D               	movwf	29	;volatile
  3584                           
  3585                           ;ADC.c: 27: }
  3586  050A  0008               	return
  3587  050B                     l1308:	
  3588                           
  3589                           ;ADC.c: 28: else if(ch == 3){
  3590  050B  3003               	movlw	3
  3591  050C  0671               	xorwf	SetADCChannel@ch,w
  3592  050D  1D03               	btfss	3,2
  3593  050E  0008               	return
  3594                           
  3595                           ;ADC.c: 29: ADCON0bits.CHS = 3;
  3596  050F  0021               	movlb	1	; select bank1
  3597  0510  081D               	movf	29,w	;volatile
  3598  0511  3983               	andlw	-125
  3599  0512  380C               	iorlw	12
  3600  0513  009D               	movwf	29	;volatile
  3601  0514  0008               	return
  3602  0515                     __end_of_SetADCChannel:	
  3603                           
  3604                           	psect	text15
  3605  0586                     __ptext15:	
  3606 ;; *************** function _ReadCharger *****************
  3607 ;; Defined at:
  3608 ;;		line 106 in file "Function.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      unsigned char 
  3615 ;; Registers used:
  3616 ;;		wreg
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;Total ram usage:        0 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    2
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_RadioOperation
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           
  3637                           ;psect for function _ReadCharger
  3638  0586                     _ReadCharger:	
  3639                           
  3640                           ;Function.c: 108: if(!PORTCbits.RC0 && PORTCbits.RC1){
  3641                           
  3642                           ;incstack = 0
  3643                           ; Regs used in _ReadCharger: [wreg]
  3644  0586  0020               	movlb	0	; select bank0
  3645  0587  1C0E               	btfss	14,0	;volatile
  3646  0588  1C8E               	btfss	14,1	;volatile
  3647  0589  2D8C               	goto	l76
  3648                           
  3649                           ;Function.c: 109: return 1;
  3650  058A  3001               	movlw	1
  3651  058B  0008               	return
  3652  058C                     l76:	
  3653                           
  3654                           ;Function.c: 110: }
  3655                           ;Function.c: 112: if(PORTCbits.RC0 && !PORTCbits.RC1){
  3656  058C  180E               	btfsc	14,0	;volatile
  3657  058D  188E               	btfsc	14,1	;volatile
  3658  058E  2D91               	goto	l78
  3659                           
  3660                           ;Function.c: 113: return 2;
  3661  058F  3002               	movlw	2
  3662  0590  0008               	return
  3663  0591                     l78:	
  3664                           
  3665                           ;Function.c: 114: }
  3666                           ;Function.c: 116: if(PORTCbits.RC0 && PORTCbits.RC1){
  3667  0591  180E               	btfsc	14,0	;volatile
  3668  0592  1C8E               	btfss	14,1	;volatile
  3669  0593  2D96               	goto	l1366
  3670                           
  3671                           ;Function.c: 117: return 0;
  3672  0594  3000               	movlw	0
  3673                           
  3674                           ;Function.c: 118: }
  3675  0595  0008               	return
  3676  0596                     l1366:	
  3677                           
  3678                           ;Function.c: 119: else{
  3679                           ;Function.c: 120: return 255;
  3680  0596  30FF               	movlw	255
  3681  0597  0008               	return
  3682  0598                     __end_of_ReadCharger:	
  3683                           
  3684                           	psect	text16
  3685  0617                     __ptext16:	
  3686 ;; *************** function _GetTicker *****************
  3687 ;; Defined at:
  3688 ;;		line 61 in file "Timer.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;		None
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  2  114[None  ] unsigned int 
  3695 ;; Registers used:
  3696 ;;		None
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3706 ;;Total ram usage:        0 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; Hardware stack levels required when called:    2
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_RadioOperation
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           
  3717                           ;psect for function _GetTicker
  3718  0617                     _GetTicker:	
  3719                           
  3720                           ;Timer.c: 62: return ticker;
  3721                           ;	Return value of _GetTicker is never used
  3722                           
  3723                           ;incstack = 0
  3724                           ; Regs used in _GetTicker: []
  3725  0617  0008               	return
  3726  0618                     __end_of_GetTicker:	
  3727                           
  3728                           	psect	text17
  3729  060F                     __ptext17:	
  3730 ;; *************** function _ClearTicker *****************
  3731 ;; Defined at:
  3732 ;;		line 57 in file "Timer.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;		None
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;		None
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  1    wreg      void 
  3739 ;; Registers used:
  3740 ;;		status,2
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3750 ;;Total ram usage:        0 bytes
  3751 ;; Hardware stack levels used:    1
  3752 ;; Hardware stack levels required when called:    2
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_RadioOperation
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           
  3761                           ;psect for function _ClearTicker
  3762  060F                     _ClearTicker:	
  3763                           
  3764                           ;Timer.c: 58: ticker = 0;
  3765                           
  3766                           ;incstack = 0
  3767                           ; Regs used in _ClearTicker: [status,2]
  3768  060F  0020               	movlb	0	; select bank0
  3769  0610  01C6               	clrf	_ticker
  3770  0611  01C7               	clrf	_ticker+1
  3771  0612  0008               	return
  3772  0613                     __end_of_ClearTicker:	
  3773                           
  3774                           	psect	text18
  3775  0613                     __ptext18:	
  3776 ;; *************** function _RadioBegin *****************
  3777 ;; Defined at:
  3778 ;;		line 24 in file "Radio.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3796 ;;Total ram usage:        0 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    7
  3799 ;; This function calls:
  3800 ;;		_SR_FRSStart
  3801 ;; This function is called by:
  3802 ;;		_main
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           
  3807                           ;psect for function _RadioBegin
  3808  0613                     _RadioBegin:	
  3809                           
  3810                           ;Radio.c: 25: SR_FRSStart();
  3811                           
  3812                           ;incstack = 0
  3813                           ; Regs used in _RadioBegin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3814  0613  3183  23B6         	fcall	_SR_FRSStart
  3815  0615  0008               	return
  3816  0616                     __end_of_RadioBegin:	
  3817                           
  3818                           	psect	text19
  3819  03B6                     __ptext19:	
  3820 ;; *************** function _SR_FRSStart *****************
  3821 ;; Defined at:
  3822 ;;		line 36 in file "SR_FRS.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;		None
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3840 ;;Total ram usage:        0 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:    6
  3843 ;; This function calls:
  3844 ;;		_Delay
  3845 ;;		_SR_FRSPowerDown
  3846 ;;		_SetCommandMode
  3847 ;;		_SetFrequency
  3848 ;;		_SetMIC
  3849 ;;		_SetPowerSave
  3850 ;;		_SetVOX
  3851 ;;		_SetVolume
  3852 ;; This function is called by:
  3853 ;;		_RadioBegin
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           
  3858                           ;psect for function _SR_FRSStart
  3859  03B6                     _SR_FRSStart:	
  3860                           
  3861                           ;SR_FRS.c: 37: SR_FRSPowerDown();
  3862                           
  3863                           ;incstack = 0
  3864                           ; Regs used in _SR_FRSStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3865  03B6  3185  2598  3183   	fcall	_SR_FRSPowerDown
  3866                           
  3867                           ;SR_FRS.c: 38: Delay(500);
  3868  03B9  30F4               	movlw	244
  3869  03BA  00F1               	movwf	Delay@wait
  3870  03BB  3001               	movlw	1
  3871  03BC  00F2               	movwf	Delay@wait+1
  3872  03BD  3185  2515  3183   	fcall	_Delay
  3873                           
  3874                           ;SR_FRS.c: 39: SetCommandMode();
  3875  03C0  3185  255D  3183   	fcall	_SetCommandMode
  3876                           
  3877                           ;SR_FRS.c: 40: Delay(1000);
  3878  03C3  30E8               	movlw	232
  3879  03C4  00F1               	movwf	Delay@wait
  3880  03C5  3003               	movlw	3
  3881  03C6  00F2               	movwf	Delay@wait+1
  3882  03C7  3185  2515  3183   	fcall	_Delay
  3883                           
  3884                           ;SR_FRS.c: 41: SetFrequency();
  3885  03CA  3185  2548  3183   	fcall	_SetFrequency
  3886                           
  3887                           ;SR_FRS.c: 42: Delay(1000);
  3888  03CD  30E8               	movlw	232
  3889  03CE  00F1               	movwf	Delay@wait
  3890  03CF  3003               	movlw	3
  3891  03D0  00F2               	movwf	Delay@wait+1
  3892  03D1  3185  2515  3183   	fcall	_Delay
  3893                           
  3894                           ;SR_FRS.c: 43: SetPowerSave();
  3895  03D4  3185  252F  3183   	fcall	_SetPowerSave
  3896                           
  3897                           ;SR_FRS.c: 44: Delay(1000);
  3898  03D7  30E8               	movlw	232
  3899  03D8  00F1               	movwf	Delay@wait
  3900  03D9  3003               	movlw	3
  3901  03DA  00F2               	movwf	Delay@wait+1
  3902  03DB  3185  2515  3183   	fcall	_Delay
  3903                           
  3904                           ;SR_FRS.c: 45: SetVolume(5);
  3905  03DE  3005               	movlw	5
  3906  03DF  3184  2489  3183   	fcall	_SetVolume
  3907                           
  3908                           ;SR_FRS.c: 46: Delay(1000);
  3909  03E2  30E8               	movlw	232
  3910  03E3  00F1               	movwf	Delay@wait
  3911  03E4  3003               	movlw	3
  3912  03E5  00F2               	movwf	Delay@wait+1
  3913  03E6  3185  2515  3183   	fcall	_Delay
  3914                           
  3915                           ;SR_FRS.c: 47: SetVOX(0);
  3916  03E9  3000               	movlw	0
  3917  03EA  0020               	movlb	0	; select bank0
  3918  03EB  00A3               	movwf	SetVOX@volume
  3919  03EC  00A4               	movwf	SetVOX@volume+1
  3920  03ED  3184  2461  3183   	fcall	_SetVOX
  3921                           
  3922                           ;SR_FRS.c: 48: Delay(1000);
  3923  03F0  30E8               	movlw	232
  3924  03F1  00F1               	movwf	Delay@wait
  3925  03F2  3003               	movlw	3
  3926  03F3  00F2               	movwf	Delay@wait+1
  3927  03F4  3185  2515  3183   	fcall	_Delay
  3928                           
  3929                           ;SR_FRS.c: 49: SetMIC(8,0);
  3930  03F7  0020               	movlb	0	; select bank0
  3931  03F8  01A3               	clrf	SetMIC@scram
  3932  03F9  3008               	movlw	8
  3933  03FA  3184  24B0         	fcall	_SetMIC
  3934  03FC  0008               	return
  3935  03FD                     __end_of_SR_FRSStart:	
  3936                           
  3937                           	psect	text20
  3938  0489                     __ptext20:	
  3939 ;; *************** function _SetVolume *****************
  3940 ;; Defined at:
  3941 ;;		line 95 in file "SR_FRS.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  volume          1    wreg     unsigned char 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  volume          1    5[BANK0 ] unsigned char 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3956 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3957 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3958 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3959 ;;Total ram usage:        3 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:    5
  3962 ;; This function calls:
  3963 ;;		_printf
  3964 ;; This function is called by:
  3965 ;;		_SR_FRSStart
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           
  3970                           ;psect for function _SetVolume
  3971  0489                     _SetVolume:	
  3972                           
  3973                           ;incstack = 0
  3974                           ; Regs used in _SetVolume: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3975                           ;SetVolume@volume stored from wreg
  3976  0489  0020               	movlb	0	; select bank0
  3977  048A  00A5               	movwf	SetVolume@volume
  3978                           
  3979                           ;SR_FRS.c: 96: if((volume < 9) && (volume > 1)){
  3980  048B  3009               	movlw	9
  3981  048C  0225               	subwf	SetVolume@volume,w
  3982  048D  1803               	skipnc
  3983  048E  0008               	return
  3984  048F  3002               	movlw	2
  3985  0490  0225               	subwf	SetVolume@volume,w
  3986  0491  1C03               	skipc
  3987  0492  0008               	return
  3988                           
  3989                           ;SR_FRS.c: 97: printf("\r\n");
  3990  0493  3004               	movlw	low (STR_1| (0+32768))
  3991  0494  00F3               	movwf	printf@f
  3992  0495  3083               	movlw	high (STR_1| (0+32768))
  3993  0496  00F4               	movwf	printf@f+1
  3994  0497  3183  236B  3184   	fcall	_printf
  3995                           
  3996                           ;SR_FRS.c: 98: printf("AT+DMOSETVOLUME=%c",volume);
  3997  049A  30D3               	movlw	low (STR_11| (0+32768))
  3998  049B  00F3               	movwf	printf@f
  3999  049C  3082               	movlw	high (STR_11| (0+32768))
  4000  049D  00F4               	movwf	printf@f+1
  4001  049E  0020               	movlb	0	; select bank0
  4002  049F  0825               	movf	SetVolume@volume,w
  4003  04A0  00A3               	movwf	??_SetVolume
  4004  04A1  01A4               	clrf	??_SetVolume+1
  4005  04A2  0823               	movf	??_SetVolume,w
  4006  04A3  00F5               	movwf	?_printf+2
  4007  04A4  0824               	movf	??_SetVolume+1,w
  4008  04A5  00F6               	movwf	?_printf+3
  4009  04A6  3183  236B  3184   	fcall	_printf
  4010                           
  4011                           ;SR_FRS.c: 99: printf("\r\n");
  4012  04A9  3004               	movlw	low (STR_1| (0+32768))
  4013  04AA  00F3               	movwf	printf@f
  4014  04AB  3083               	movlw	high (STR_1| (0+32768))
  4015  04AC  00F4               	movwf	printf@f+1
  4016  04AD  3183  236B         	fcall	_printf
  4017  04AF  0008               	return
  4018  04B0                     __end_of_SetVolume:	
  4019                           
  4020                           	psect	text21
  4021  0461                     __ptext21:	
  4022 ;; *************** function _SetVOX *****************
  4023 ;; Defined at:
  4024 ;;		line 109 in file "SR_FRS.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  volume          2    3[BANK0 ] int 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4038 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4040 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4041 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4042 ;;Total ram usage:        3 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    5
  4045 ;; This function calls:
  4046 ;;		_printf
  4047 ;; This function is called by:
  4048 ;;		_SR_FRSStart
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           
  4053                           ;psect for function _SetVOX
  4054  0461                     _SetVOX:	
  4055                           
  4056                           ;SR_FRS.c: 110: if((volume < 8) && (volume >= 0)){
  4057                           
  4058                           ;incstack = 0
  4059                           ; Regs used in _SetVOX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4060  0461  0020               	movlb	0	; select bank0
  4061  0462  0824               	movf	SetVOX@volume+1,w
  4062  0463  3A80               	xorlw	128
  4063  0464  00A5               	movwf	??_SetVOX
  4064  0465  3080               	movlw	128
  4065  0466  0225               	subwf	??_SetVOX,w
  4066  0467  3008               	movlw	8
  4067  0468  1903               	btfsc	3,2
  4068  0469  0223               	subwf	SetVOX@volume,w
  4069  046A  1803               	skipnc
  4070  046B  0008               	return
  4071  046C  0020               	movlb	0	; select bank0
  4072  046D  1BA4               	btfsc	SetVOX@volume+1,7
  4073  046E  0008               	return
  4074                           
  4075                           ;SR_FRS.c: 111: printf("\r\n");
  4076  046F  3004               	movlw	low (STR_1| (0+32768))
  4077  0470  00F3               	movwf	printf@f
  4078  0471  3083               	movlw	high (STR_1| (0+32768))
  4079  0472  00F4               	movwf	printf@f+1
  4080  0473  3183  236B  3184   	fcall	_printf
  4081                           
  4082                           ;SR_FRS.c: 112: printf("AT+DMOSETVOX=%c",volume);
  4083  0476  30E6               	movlw	low (STR_14| (0+32768))
  4084  0477  00F3               	movwf	printf@f
  4085  0478  3082               	movlw	high (STR_14| (0+32768))
  4086  0479  00F4               	movwf	printf@f+1
  4087  047A  0020               	movlb	0	; select bank0
  4088  047B  0824               	movf	SetVOX@volume+1,w
  4089  047C  00F6               	movwf	?_printf+3
  4090  047D  0823               	movf	SetVOX@volume,w
  4091  047E  00F5               	movwf	?_printf+2
  4092  047F  3183  236B  3184   	fcall	_printf
  4093                           
  4094                           ;SR_FRS.c: 113: printf("\r\n");
  4095  0482  3004               	movlw	low (STR_1| (0+32768))
  4096  0483  00F3               	movwf	printf@f
  4097  0484  3083               	movlw	high (STR_1| (0+32768))
  4098  0485  00F4               	movwf	printf@f+1
  4099  0486  3183  236B         	fcall	_printf
  4100  0488  0008               	return
  4101  0489                     __end_of_SetVOX:	
  4102                           
  4103                           	psect	text22
  4104  052F                     __ptext22:	
  4105 ;; *************** function _SetPowerSave *****************
  4106 ;; Defined at:
  4107 ;;		line 82 in file "SR_FRS.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;		None
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;		None
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  1    wreg      void 
  4114 ;; Registers used:
  4115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4125 ;;Total ram usage:        0 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:    5
  4128 ;; This function calls:
  4129 ;;		_printf
  4130 ;; This function is called by:
  4131 ;;		_SR_FRSStart
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           
  4136                           ;psect for function _SetPowerSave
  4137  052F                     _SetPowerSave:	
  4138                           
  4139                           ;SR_FRS.c: 84: printf("\r\n");
  4140                           
  4141                           ;incstack = 0
  4142                           ; Regs used in _SetPowerSave: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4143  052F  3004               	movlw	low (STR_1| (0+32768))
  4144  0530  00F3               	movwf	printf@f
  4145  0531  3083               	movlw	high (STR_1| (0+32768))
  4146  0532  00F4               	movwf	printf@f+1
  4147  0533  3183  236B  3185   	fcall	_printf
  4148                           
  4149                           ;SR_FRS.c: 85: printf("AT+DMOAUTOPOWCONTR=%c",1);
  4150  0536  30A8               	movlw	low (STR_8| (0+32768))
  4151  0537  00F3               	movwf	printf@f
  4152  0538  3082               	movlw	high (STR_8| (0+32768))
  4153  0539  00F4               	movwf	printf@f+1
  4154  053A  3001               	movlw	1
  4155  053B  00F5               	movwf	?_printf+2
  4156  053C  3000               	movlw	0
  4157  053D  00F6               	movwf	?_printf+3
  4158  053E  3183  236B  3185   	fcall	_printf
  4159                           
  4160                           ;SR_FRS.c: 86: printf("\r\n");
  4161  0541  3004               	movlw	low (STR_1| (0+32768))
  4162  0542  00F3               	movwf	printf@f
  4163  0543  3083               	movlw	high (STR_1| (0+32768))
  4164  0544  00F4               	movwf	printf@f+1
  4165  0545  3183  236B         	fcall	_printf
  4166  0547  0008               	return
  4167  0548                     __end_of_SetPowerSave:	
  4168                           
  4169                           	psect	text23
  4170  04B0                     __ptext23:	
  4171 ;; *************** function _SetMIC *****************
  4172 ;; Defined at:
  4173 ;;		line 123 in file "SR_FRS.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  volume          1    wreg     unsigned char 
  4176 ;;  scram           1    3[BANK0 ] unsigned char 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  volume          1    8[BANK0 ] unsigned char 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4188 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4191 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4192 ;;Total ram usage:        6 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; Hardware stack levels required when called:    5
  4195 ;; This function calls:
  4196 ;;		_printf
  4197 ;; This function is called by:
  4198 ;;		_SR_FRSStart
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           
  4203                           ;psect for function _SetMIC
  4204  04B0                     _SetMIC:	
  4205                           
  4206                           ;incstack = 0
  4207                           ; Regs used in _SetMIC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4208                           ;SetMIC@volume stored from wreg
  4209  04B0  0020               	movlb	0	; select bank0
  4210  04B1  00A8               	movwf	SetMIC@volume
  4211                           
  4212                           ;SR_FRS.c: 124: printf("\r\n");
  4213  04B2  3004               	movlw	low (STR_1| (0+32768))
  4214  04B3  00F3               	movwf	printf@f
  4215  04B4  3083               	movlw	high (STR_1| (0+32768))
  4216  04B5  00F4               	movwf	printf@f+1
  4217  04B6  3183  236B  3184   	fcall	_printf
  4218                           
  4219                           ;SR_FRS.c: 125: printf("AT+DMOSETMIC=%c,%c,0",volume,scram);
  4220  04B9  30BE               	movlw	low (STR_17| (0+32768))
  4221  04BA  00F3               	movwf	printf@f
  4222  04BB  3082               	movlw	high (STR_17| (0+32768))
  4223  04BC  00F4               	movwf	printf@f+1
  4224  04BD  0020               	movlb	0	; select bank0
  4225  04BE  0828               	movf	SetMIC@volume,w
  4226  04BF  00A4               	movwf	??_SetMIC
  4227  04C0  01A5               	clrf	??_SetMIC+1
  4228  04C1  0824               	movf	??_SetMIC,w
  4229  04C2  00F5               	movwf	?_printf+2
  4230  04C3  0825               	movf	??_SetMIC+1,w
  4231  04C4  00F6               	movwf	?_printf+3
  4232  04C5  0823               	movf	SetMIC@scram,w
  4233  04C6  00A6               	movwf	??_SetMIC+2
  4234  04C7  01A7               	clrf	??_SetMIC+3
  4235  04C8  0826               	movf	??_SetMIC+2,w
  4236  04C9  00F7               	movwf	?_printf+4
  4237  04CA  0827               	movf	??_SetMIC+3,w
  4238  04CB  00F8               	movwf	?_printf+5
  4239  04CC  3183  236B  3184   	fcall	_printf
  4240                           
  4241                           ;SR_FRS.c: 126: printf("\r\n");
  4242  04CF  3004               	movlw	low (STR_1| (0+32768))
  4243  04D0  00F3               	movwf	printf@f
  4244  04D1  3083               	movlw	high (STR_1| (0+32768))
  4245  04D2  00F4               	movwf	printf@f+1
  4246  04D3  3183  236B         	fcall	_printf
  4247  04D5  0008               	return
  4248  04D6                     __end_of_SetMIC:	
  4249                           
  4250                           	psect	text24
  4251  0548                     __ptext24:	
  4252 ;; *************** function _SetFrequency *****************
  4253 ;; Defined at:
  4254 ;;		line 70 in file "SR_FRS.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;		None
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4272 ;;Total ram usage:        0 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    5
  4275 ;; This function calls:
  4276 ;;		_printf
  4277 ;; This function is called by:
  4278 ;;		_SR_FRSStart
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           
  4283                           ;psect for function _SetFrequency
  4284  0548                     _SetFrequency:	
  4285                           
  4286                           ;SR_FRS.c: 71: printf("\r\n");
  4287                           
  4288                           ;incstack = 0
  4289                           ; Regs used in _SetFrequency: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4290  0548  3004               	movlw	low (STR_1| (0+32768))
  4291  0549  00F3               	movwf	printf@f
  4292  054A  3083               	movlw	high (STR_1| (0+32768))
  4293  054B  00F4               	movwf	printf@f+1
  4294  054C  3183  236B  3185   	fcall	_printf
  4295                           
  4296                           ;SR_FRS.c: 72: printf("AT+DMOSETGROUP=0,145.5500,145.5500,43,8,51,0");
  4297  054F  307B               	movlw	low (STR_5| (0+32768))
  4298  0550  00F3               	movwf	printf@f
  4299  0551  3082               	movlw	high (STR_5| (0+32768))
  4300  0552  00F4               	movwf	printf@f+1
  4301  0553  3183  236B  3185   	fcall	_printf
  4302                           
  4303                           ;SR_FRS.c: 73: printf("\r\n");
  4304  0556  3004               	movlw	low (STR_1| (0+32768))
  4305  0557  00F3               	movwf	printf@f
  4306  0558  3083               	movlw	high (STR_1| (0+32768))
  4307  0559  00F4               	movwf	printf@f+1
  4308  055A  3183  236B         	fcall	_printf
  4309  055C  0008               	return
  4310  055D                     __end_of_SetFrequency:	
  4311                           
  4312                           	psect	text25
  4313  055D                     __ptext25:	
  4314 ;; *************** function _SetCommandMode *****************
  4315 ;; Defined at:
  4316 ;;		line 58 in file "SR_FRS.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;		None
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;		None
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      void 
  4323 ;; Registers used:
  4324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4334 ;;Total ram usage:        0 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; Hardware stack levels required when called:    5
  4337 ;; This function calls:
  4338 ;;		_printf
  4339 ;; This function is called by:
  4340 ;;		_SR_FRSStart
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           
  4345                           ;psect for function _SetCommandMode
  4346  055D                     _SetCommandMode:	
  4347                           
  4348                           ;SR_FRS.c: 59: printf("\r\n");
  4349                           
  4350                           ;incstack = 0
  4351                           ; Regs used in _SetCommandMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4352  055D  3004               	movlw	low (STR_1| (0+32768))
  4353  055E  00F3               	movwf	printf@f
  4354  055F  3083               	movlw	high (STR_1| (0+32768))
  4355  0560  00F4               	movwf	printf@f+1
  4356  0561  3183  236B  3185   	fcall	_printf
  4357                           
  4358                           ;SR_FRS.c: 60: printf("AT+DMOCONNECT");
  4359  0564  30F6               	movlw	low (STR_2| (0+32768))
  4360  0565  00F3               	movwf	printf@f
  4361  0566  3082               	movlw	high (STR_2| (0+32768))
  4362  0567  00F4               	movwf	printf@f+1
  4363  0568  3183  236B  3185   	fcall	_printf
  4364                           
  4365                           ;SR_FRS.c: 61: printf("\r\n");
  4366  056B  3004               	movlw	low (STR_1| (0+32768))
  4367  056C  00F3               	movwf	printf@f
  4368  056D  3083               	movlw	high (STR_1| (0+32768))
  4369  056E  00F4               	movwf	printf@f+1
  4370  056F  3183  236B         	fcall	_printf
  4371  0571  0008               	return
  4372  0572                     __end_of_SetCommandMode:	
  4373                           
  4374                           	psect	text26
  4375  036B                     __ptext26:	
  4376 ;; *************** function _printf *****************
  4377 ;; Defined at:
  4378 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  f               2    3[COMMON] PTR const unsigned char 
  4381 ;;		 -> STR_18(3), STR_17(21), STR_16(3), STR_15(3), 
  4382 ;;		 -> STR_14(16), STR_13(3), STR_12(3), STR_11(19), 
  4383 ;;		 -> STR_10(3), STR_9(3), STR_8(22), STR_7(3), 
  4384 ;;		 -> STR_6(3), STR_5(45), STR_4(3), STR_3(3), 
  4385 ;;		 -> STR_2(14), STR_1(3), 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  tmpval          4    0        struct .
  4388 ;;  cp              2    0        PTR const unsigned char 
  4389 ;;  len             2    0        unsigned int 
  4390 ;;  val             2    0        unsigned int 
  4391 ;;  c               1    2[BANK0 ] char 
  4392 ;;  ap              1    1[BANK0 ] PTR void [1]
  4393 ;;		 -> ?_printf(2), 
  4394 ;;  flag            1    0[BANK0 ] unsigned char 
  4395 ;;  prec            1    0        char 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  2    3[COMMON] int 
  4398 ;; Registers used:
  4399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4405 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4406 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;      Totals:         9       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4409 ;;Total ram usage:       12 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    4
  4412 ;; This function calls:
  4413 ;;		_putch
  4414 ;; This function is called by:
  4415 ;;		_SetCommandMode
  4416 ;;		_SetFrequency
  4417 ;;		_SetPowerSave
  4418 ;;		_SetVolume
  4419 ;;		_SetVOX
  4420 ;;		_SetMIC
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           
  4425                           ;psect for function _printf
  4426  036B                     _printf:	
  4427                           
  4428                           ;doprnt.c: 466: va_list ap;
  4429                           ;doprnt.c: 499: signed char c;
  4430                           ;doprnt.c: 506: signed char prec;
  4431                           ;doprnt.c: 508: unsigned char flag;
  4432                           ;doprnt.c: 523: union {
  4433                           ;doprnt.c: 524: unsigned long vd;
  4434                           ;doprnt.c: 525: double integ;
  4435                           ;doprnt.c: 526: } tmpval;
  4436                           ;doprnt.c: 528: unsigned int val;
  4437                           ;doprnt.c: 529: unsigned len;
  4438                           ;doprnt.c: 530: const char * cp;
  4439                           ;doprnt.c: 533: *ap = __va_start();
  4440                           
  4441                           ;incstack = 0
  4442                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4443  036B  3075               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4444  036C  00F9               	movwf	??_printf
  4445  036D  0879               	movf	??_printf,w
  4446  036E  0020               	movlb	0	; select bank0
  4447  036F  00A1               	movwf	printf@ap
  4448  0370                     l1646:	
  4449                           ;doprnt.c: 1422: {
  4450                           
  4451                           ;doprnt.c: 536: while(c = *f++) {
  4452                           
  4453  0370  0874               	movf	printf@f+1,w
  4454  0371  00FA               	movwf	??_printf+1
  4455  0372  0873               	movf	printf@f,w
  4456  0373  00F9               	movwf	??_printf
  4457  0374  0AF3               	incf	printf@f,f
  4458  0375  1903               	skipnz
  4459  0376  0AF4               	incf	printf@f+1,f
  4460  0377  0879               	movf	??_printf,w
  4461  0378  0084               	movwf	4
  4462  0379  087A               	movf	??_printf+1,w
  4463  037A  0085               	movwf	5
  4464  037B  0800               	movf	0,w	;code access
  4465  037C  00FB               	movwf	??_printf+2
  4466  037D  087B               	movf	??_printf+2,w
  4467  037E  0020               	movlb	0	; select bank0
  4468  037F  00A2               	movwf	printf@c
  4469  0380  0822               	movf	printf@c,w
  4470  0381  1903               	btfsc	3,2
  4471  0382  0008               	return
  4472                           
  4473                           ;doprnt.c: 538: if(c != '%')
  4474  0383  3025               	movlw	37
  4475  0384  0622               	xorwf	printf@c,w
  4476  0385  1903               	btfsc	3,2
  4477  0386  2B8C               	goto	l1634
  4478                           
  4479                           ;doprnt.c: 540: {
  4480                           ;doprnt.c: 541: (putch(c) );
  4481  0387  0822               	movf	printf@c,w
  4482  0388  3186  2605  3183   	fcall	_putch
  4483                           
  4484                           ;doprnt.c: 542: continue;
  4485  038B  2B70               	goto	l1646
  4486  038C                     l1634:	
  4487                           
  4488                           ;doprnt.c: 543: }
  4489                           ;doprnt.c: 548: flag = 0;
  4490  038C  0020               	movlb	0	; select bank0
  4491  038D  01A0               	clrf	printf@flag
  4492                           
  4493                           ;doprnt.c: 635: switch(c = *f++) {
  4494  038E  2B9F               	goto	l1644
  4495  038F                     l1636:	
  4496                           ;doprnt.c: 784: case 'c':
  4497                           
  4498                           ;doprnt.c: 638: goto alldone;
  4499                           
  4500                           ;doprnt.c: 637: case 0:
  4501                           
  4502                           
  4503                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  4504  038F  0821               	movf	printf@ap,w
  4505  0390  0086               	movwf	6
  4506  0391  0187               	clrf	7
  4507  0392  0801               	movf	1,w
  4508  0393  00F9               	movwf	??_printf
  4509  0394  0879               	movf	??_printf,w
  4510  0395  00A2               	movwf	printf@c
  4511  0396  3002               	movlw	2
  4512  0397  00F9               	movwf	??_printf
  4513  0398  0879               	movf	??_printf,w
  4514  0399  07A1               	addwf	printf@ap,f
  4515  039A                     l1640:	
  4516                           ;doprnt.c: 802: default:
  4517                           
  4518                           
  4519                           ;doprnt.c: 809: (putch(c) );
  4520  039A  0822               	movf	printf@c,w
  4521  039B  3186  2605  3183   	fcall	_putch
  4522                           
  4523                           ;doprnt.c: 822: }
  4524                           
  4525                           ;doprnt.c: 810: continue;
  4526  039E  2B70               	goto	l1646
  4527  039F                     l1644:	
  4528  039F  0874               	movf	printf@f+1,w
  4529  03A0  00FA               	movwf	??_printf+1
  4530  03A1  0873               	movf	printf@f,w
  4531  03A2  00F9               	movwf	??_printf
  4532  03A3  0AF3               	incf	printf@f,f
  4533  03A4  1903               	skipnz
  4534  03A5  0AF4               	incf	printf@f+1,f
  4535  03A6  0879               	movf	??_printf,w
  4536  03A7  0084               	movwf	4
  4537  03A8  087A               	movf	??_printf+1,w
  4538  03A9  0085               	movwf	5
  4539  03AA  0800               	movf	0,w	;code access
  4540  03AB  0020               	movlb	0	; select bank0
  4541  03AC  00A2               	movwf	printf@c
  4542                           
  4543                           ; Switch size 1, requested type "space"
  4544                           ; Number of cases is 2, Range of values is 0 to 99
  4545                           ; switch strategies available:
  4546                           ; Name         Instructions Cycles
  4547                           ; simple_byte            7     4 (average)
  4548                           ; direct_byte          206     6 (fixed)
  4549                           ; jumptable            260     6 (fixed)
  4550                           ;	Chosen strategy is simple_byte
  4551  03AD  3A00               	xorlw	0	; case 0
  4552  03AE  1903               	skipnz
  4553  03AF  2BB5               	goto	l302
  4554  03B0  3A63               	xorlw	99	; case 99
  4555  03B1  1903               	skipnz
  4556  03B2  2B8F               	goto	l1636
  4557  03B3  2B9A               	goto	l1640
  4558  03B4  2B70               	goto	l1646
  4559  03B5                     l302:	
  4560                           ;doprnt.c: 1540: return 0;
  4561                           ;	Return value of _printf is never used
  4562                           
  4563                           ;doprnt.c: 1469: }
  4564                           ;doprnt.c: 1533: }
  4565                           ;doprnt.c: 1535: alldone:
  4566                           
  4567  03B5  0008               	return
  4568  03B6                     __end_of_printf:	
  4569                           
  4570                           	psect	text27
  4571  0605                     __ptext27:	
  4572 ;; *************** function _putch *****************
  4573 ;; Defined at:
  4574 ;;		line 59 in file "UART.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  txData          1    wreg     unsigned char 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  txData          1    2[COMMON] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      void 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0, pclath, cstack
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4592 ;;Total ram usage:        1 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    3
  4595 ;; This function calls:
  4596 ;;		_EUSART_Write
  4597 ;; This function is called by:
  4598 ;;		_printf
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           
  4603                           ;psect for function _putch
  4604  0605                     _putch:	
  4605                           
  4606                           ;incstack = 0
  4607                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4608                           ;putch@txData stored from wreg
  4609  0605  00F2               	movwf	putch@txData
  4610                           
  4611                           ;UART.c: 61: EUSART_Write(txData);
  4612  0606  0872               	movf	putch@txData,w
  4613  0607  3185  25F0         	fcall	_EUSART_Write
  4614  0609  0008               	return
  4615  060A                     __end_of_putch:	
  4616                           
  4617                           	psect	text28
  4618  05F0                     __ptext28:	
  4619 ;; *************** function _EUSART_Write *****************
  4620 ;; Defined at:
  4621 ;;		line 45 in file "UART.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  txData          1    wreg     unsigned char 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;  txData          1    1[COMMON] unsigned char 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      void 
  4628 ;; Registers used:
  4629 ;;		wreg
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4636 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4638 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4639 ;;Total ram usage:        1 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; Hardware stack levels required when called:    2
  4642 ;; This function calls:
  4643 ;;		Nothing
  4644 ;; This function is called by:
  4645 ;;		_putch
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           
  4650                           ;psect for function _EUSART_Write
  4651  05F0                     _EUSART_Write:	
  4652                           
  4653                           ;incstack = 0
  4654                           ; Regs used in _EUSART_Write: [wreg]
  4655                           ;EUSART_Write@txData stored from wreg
  4656  05F0  00F1               	movwf	EUSART_Write@txData
  4657  05F1                     l152:	
  4658                           ;UART.c: 48: {
  4659                           
  4660                           ;UART.c: 47: while(0 == PIR1bits.TXIF)
  4661                           
  4662  05F1  0020               	movlb	0	; select bank0
  4663  05F2  1E11               	btfss	17,4	;volatile
  4664  05F3  2DF1               	goto	l152
  4665                           
  4666                           ;UART.c: 49: }
  4667                           ;UART.c: 51: TXREG = txData;
  4668  05F4  0871               	movf	EUSART_Write@txData,w
  4669  05F5  0023               	movlb	3	; select bank3
  4670  05F6  009A               	movwf	26	;volatile
  4671  05F7  0008               	return
  4672  05F8                     __end_of_EUSART_Write:	
  4673                           
  4674                           	psect	text29
  4675  0598                     __ptext29:	
  4676 ;; *************** function _SR_FRSPowerDown *****************
  4677 ;; Defined at:
  4678 ;;		line 26 in file "SR_FRS.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;		None
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;		None
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		wreg, status,2, status,0
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;Total ram usage:        1 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; Hardware stack levels required when called:    2
  4699 ;; This function calls:
  4700 ;;		Nothing
  4701 ;; This function is called by:
  4702 ;;		_SR_FRSStart
  4703 ;;		_RadioOperation
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           
  4708                           ;psect for function _SR_FRSPowerDown
  4709  0598                     _SR_FRSPowerDown:	
  4710                           
  4711                           ;SR_FRS.c: 27: PORTCbits.RC6 ^= 1;
  4712                           
  4713                           ;incstack = 0
  4714                           ; Regs used in _SR_FRSPowerDown: [wreg+status,2+status,0]
  4715  0598  0020               	movlb	0	; select bank0
  4716  0599  0E0E               	swapf	14,w	;volatile
  4717  059A  00F1               	movwf	??_SR_FRSPowerDown
  4718  059B  0CF1               	rrf	??_SR_FRSPowerDown,f
  4719  059C  0C71               	rrf	??_SR_FRSPowerDown,w
  4720  059D  3901               	andlw	1
  4721  059E  00F1               	movwf	??_SR_FRSPowerDown
  4722  059F  3001               	movlw	1
  4723  05A0  06F1               	xorwf	??_SR_FRSPowerDown,f
  4724  05A1  0EF1               	swapf	??_SR_FRSPowerDown,f
  4725  05A2  0DF1               	rlf	??_SR_FRSPowerDown,f
  4726  05A3  0DF1               	rlf	??_SR_FRSPowerDown,f
  4727  05A4  080E               	movf	14,w	;volatile
  4728  05A5  0671               	xorwf	??_SR_FRSPowerDown,w
  4729  05A6  39BF               	andlw	-65
  4730  05A7  0671               	xorwf	??_SR_FRSPowerDown,w
  4731  05A8  008E               	movwf	14	;volatile
  4732  05A9  0008               	return
  4733  05AA                     __end_of_SR_FRSPowerDown:	
  4734                           
  4735                           	psect	text30
  4736  0515                     __ptext30:	
  4737 ;; *************** function _Delay *****************
  4738 ;; Defined at:
  4739 ;;		line 76 in file "Function.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  wait            2    1[COMMON] int 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;  x               2    4[COMMON] int 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      void 
  4746 ;; Registers used:
  4747 ;;		wreg, status,2
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;Total ram usage:        5 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; Hardware stack levels required when called:    2
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_main
  4764 ;;		_SR_FRSStart
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           
  4769                           ;psect for function _Delay
  4770  0515                     _Delay:	
  4771                           
  4772                           ;Function.c: 77: int x;
  4773                           ;Function.c: 78: for (x = 0; x < wait; x++) {
  4774                           
  4775                           ;incstack = 0
  4776                           ; Regs used in _Delay: [wreg+status,2]
  4777  0515  01F4               	clrf	Delay@x
  4778  0516  01F5               	clrf	Delay@x+1
  4779  0517                     l62:	
  4780  0517  0875               	movf	Delay@x+1,w
  4781  0518  3A80               	xorlw	128
  4782  0519  00F3               	movwf	??_Delay
  4783  051A  0872               	movf	Delay@wait+1,w
  4784  051B  3A80               	xorlw	128
  4785  051C  0273               	subwf	??_Delay,w
  4786  051D  1D03               	skipz
  4787  051E  2D21               	goto	u785
  4788  051F  0871               	movf	Delay@wait,w
  4789  0520  0274               	subwf	Delay@x,w
  4790  0521                     u785:	
  4791  0521  1803               	btfsc	3,0
  4792  0522  0008               	return
  4793                           
  4794                           ;Function.c: 79: _delay((unsigned long)((1)*(4000000/4000.0)));
  4795  0523  30F9               	movlw	249
  4796  0524  00F3               	movwf	??_Delay
  4797  0525                     u2037:	
  4798  0525  0000               	nop
  4799  0526  0BF3               	decfsz	??_Delay,f
  4800  0527  2D25               	goto	u2037
  4801  0528  3200               	nop2	;nop
  4802  0529  0000               	nop
  4803  052A  3001               	movlw	1
  4804  052B  07F4               	addwf	Delay@x,f
  4805  052C  3000               	movlw	0
  4806  052D  3DF5               	addwfc	Delay@x+1,f
  4807  052E  2D17               	goto	l62
  4808  052F                     __end_of_Delay:	
  4809                           
  4810                           	psect	text31
  4811  060A                     __ptext31:	
  4812 ;; *************** function _LEDOff *****************
  4813 ;; Defined at:
  4814 ;;		line 124 in file "Function.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;		None
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;		None
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      void 
  4821 ;; Registers used:
  4822 ;;		None
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4832 ;;Total ram usage:        0 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; Hardware stack levels required when called:    2
  4835 ;; This function calls:
  4836 ;;		Nothing
  4837 ;; This function is called by:
  4838 ;;		_main
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           
  4843                           ;psect for function _LEDOff
  4844  060A                     _LEDOff:	
  4845                           
  4846                           ;Function.c: 125: PORTCbits.RC3 = 0;
  4847                           
  4848                           ;incstack = 0
  4849                           ; Regs used in _LEDOff: []
  4850  060A  0020               	movlb	0	; select bank0
  4851  060B  118E               	bcf	14,3	;volatile
  4852                           
  4853                           ;Function.c: 126: PORTCbits.RC5 = 0;
  4854  060C  128E               	bcf	14,5	;volatile
  4855                           
  4856                           ;Function.c: 127: PORTCbits.RC4 = 0;
  4857  060D  120E               	bcf	14,4	;volatile
  4858  060E  0008               	return
  4859  060F                     __end_of_LEDOff:	
  4860                           
  4861                           	psect	intentry
  4862  0004                     __pintentry:	
  4863 ;; *************** function _INTERRUPT_InterruptManager *****************
  4864 ;; Defined at:
  4865 ;;		line 94 in file "Function.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0, pclath, cstack
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4882 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4883 ;;Total ram usage:        1 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    1
  4886 ;; This function calls:
  4887 ;;		_TMR2_ISR
  4888 ;; This function is called by:
  4889 ;;		Interrupt level 1
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893  0004                     _INTERRUPT_InterruptManager:	
  4894                           
  4895                           ;incstack = 0
  4896                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4897  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4898  0005  3180               	pagesel	$
  4899  0006  0020               	movlb	0	; select bank0
  4900  0007  087F               	movf	127,w
  4901  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
  4902                           
  4903                           ;Function.c: 96: if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4904  0009  0021               	movlb	1	; select bank1
  4905  000A  1C91               	btfss	17,1	;volatile
  4906  000B  2811               	goto	i1l73
  4907  000C  0020               	movlb	0	; select bank0
  4908  000D  1C91               	btfss	17,1	;volatile
  4909  000E  2811               	goto	i1l73
  4910                           
  4911                           ;Function.c: 97: {
  4912                           ;Function.c: 98: TMR2_ISR();
  4913  000F  3185  25F8         	fcall	_TMR2_ISR
  4914  0011                     i1l73:	
  4915                           ;Function.c: 100: else
  4916                           ;Function.c: 101: {
  4917                           
  4918                           ;Function.c: 99: }
  4919                           
  4920  0011  0870               	movf	??_INTERRUPT_InterruptManager,w
  4921  0012  0020               	movlb	0	; select bank0
  4922  0013  00FF               	movwf	127
  4923  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4924  0015  0009               	retfie
  4925  0016                     __end_of_INTERRUPT_InterruptManager:	
  4926                           
  4927                           	psect	text33
  4928  05F8                     __ptext33:	
  4929 ;; *************** function _TMR2_ISR *****************
  4930 ;; Defined at:
  4931 ;;		line 48 in file "Timer.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;		None
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;		None
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  1    wreg      void 
  4938 ;; Registers used:
  4939 ;;		wreg
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4949 ;;Total ram usage:        0 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_INTERRUPT_InterruptManager
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           
  4959                           ;psect for function _TMR2_ISR
  4960  05F8                     _TMR2_ISR:	
  4961                           
  4962                           ;Timer.c: 51: ticker++;
  4963                           
  4964                           ;incstack = 0
  4965                           ; Regs used in _TMR2_ISR: [wreg]
  4966  05F8  3001               	movlw	1
  4967  05F9  0020               	movlb	0	; select bank0
  4968  05FA  07C6               	addwf	_ticker,f
  4969  05FB  3000               	movlw	0
  4970  05FC  3DC7               	addwfc	_ticker+1,f
  4971                           
  4972                           ;Timer.c: 53: PIR1bits.TMR2IF = 0;
  4973  05FD  1091               	bcf	17,1	;volatile
  4974  05FE  0008               	return
  4975  05FF                     __end_of_TMR2_ISR:	
  4976  007E                     btemp	set	126	;btemp
  4977  007E                     int$flags	set	126
  4978  007E                     wtemp	set	126
  4979  007E                     wtemp0	set	126
  4980  0080                     wtemp1	set	128
  4981  0082                     wtemp2	set	130
  4982  0084                     wtemp3	set	132
  4983  0086                     wtemp4	set	134
  4984  0088                     wtemp5	set	136
  4985  007F                     wtemp6	set	127
  4986  007E                     ttemp	set	126
  4987  007E                     ttemp0	set	126
  4988  0081                     ttemp1	set	129
  4989  0084                     ttemp2	set	132
  4990  0087                     ttemp3	set	135
  4991  007F                     ttemp4	set	127
  4992  007E                     ltemp	set	126
  4993  007E                     ltemp0	set	126
  4994  0082                     ltemp1	set	130
  4995  0086                     ltemp2	set	134
  4996  0080                     ltemp3	set	128


Data Sizes:
    Strings     140
    Constant    0
    Data        1
    BSS         104
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     33      45
    BANK1            80      0      46
    BANK2            80      0      46
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_18(CODE[3]), STR_17(CODE[21]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[16]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[19]), 
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[22]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[45]), STR_4(CODE[3]), STR_3(CODE[3]), 
		 -> STR_2(CODE[14]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _RadioOperation->___awtoft
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    _ReadVoltage->_SetADCChannel
    _SetVolume->_printf
    _SetVOX->_printf
    _SetPowerSave->_printf
    _SetMIC->_printf
    _SetFrequency->_printf
    _SetCommandMode->_printf
    _printf->_putch
    _putch->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_RadioOperation
    _RadioOperation->___ftdiv
    ___ftdiv->___ftmul
    _SR_FRSStart->_SetMIC
    _SetVolume->_printf
    _SetVOX->_printf
    _SetPowerSave->_printf
    _SetMIC->_printf
    _SetFrequency->_printf
    _SetCommandMode->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17678
                              _Delay
                             _LEDOff
                         _RadioBegin
                     _RadioOperation
                              _Start
 ---------------------------------------------------------------------------------
 (1) _Start                                                0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RadioOperation                                       1     1      0    7850
                                             32 BANK0      1     1      0
                        _ClearTicker
                          _GetTicker
                        _ReadCharger
                        _ReadVoltage
                    _SR_FRSPowerDown
                         _SR_FRSTalk
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2756
                                              0 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     242
                                              1 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2558
                                             16 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2206
                                              9 COMMON     3     0      3
                                              0 BANK0      3     3      0
                        _ReadVoltage (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2008
                                              1 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _SR_FRSTalk                                           1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadVoltage                                          4     1      3      88
                                              2 COMMON     4     1      3
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (3) _SetADCChannel                                        1     1      0      66
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadCharger                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetTicker                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearTicker                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RadioBegin                                           0     0      0    9411
                        _SR_FRSStart
 ---------------------------------------------------------------------------------
 (2) _SR_FRSStart                                          0     0      0    9411
                              _Delay
                    _SR_FRSPowerDown
                     _SetCommandMode
                       _SetFrequency
                             _SetMIC
                       _SetPowerSave
                             _SetVOX
                          _SetVolume
 ---------------------------------------------------------------------------------
 (3) _SetVolume                                            3     3      0    1529
                                              3 BANK0      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SetVOX                                               3     1      2    1594
                                              3 BANK0      3     1      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SetPowerSave                                         0     0      0    1436
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SetMIC                                               6     5      1    1563
                                              3 BANK0      6     5      1
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SetFrequency                                         0     0      0    1436
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SetCommandMode                                       0     0      0    1436
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              23    17      6    1436
                                              3 COMMON     9     3      6
                                              0 BANK0      3     3      0
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              2 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SR_FRSPowerDown                                      1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     417
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LEDOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
   _LEDOff
   _RadioBegin
     _SR_FRSStart
       _Delay
       _SR_FRSPowerDown
       _SetCommandMode
         _printf
           _putch
             _EUSART_Write
       _SetFrequency
         _printf
           _putch
             _EUSART_Write
       _SetMIC
         _printf
           _putch
             _EUSART_Write
       _SetPowerSave
         _printf
           _putch
             _EUSART_Write
       _SetVOX
         _printf
           _putch
             _EUSART_Write
       _SetVolume
         _printf
           _putch
             _EUSART_Write
   _RadioOperation
     _ClearTicker
     _GetTicker
     _ReadCharger
     _ReadVoltage
       _SetADCChannel
     _SR_FRSPowerDown
     _SR_FRSTalk
     ___awtoft
       _ReadVoltage (ARG)
         _SetADCChannel
       ___ftpack (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
   _Start
     _ADC_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _TMR2_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      2D       5       56.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      2E       7       57.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      2E       9       57.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      96      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      96      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Aug 17 17:27:17 2016

                         __CFG_CP$ON 0000                                   l62 0517  
                                 l76 058C                                   l78 0591  
                        __CFG_CPD$ON 0000                          __CFG_LVP$ON 0000  
                                l302 03B5                                  l152 05F1  
                                l244 0041                                  l272 05C0  
                                l554 034C                                  l555 0354  
                                l547 0339                           _SR_FRSTalk 05AA  
                                _PR2 001B                                  u785 0521  
                      _SetADCChannel 04F7                      _TMR2_Initialize 05D2  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       ___ftdiv@cntr 003A                         ___ftdiv@sign 003F  
                               l1304 0501                                 l1308 050B  
                               l1460 0413                                 l1366 0596  
                               l1640 039A                                 l1464 0429  
                               l1800 018E                                 l1634 038C  
                               l1636 038F                                 l1644 039F  
                               l1812 01AA                                 l1646 0370  
                               l1726 04E1                                 l1742 01FF  
                               l1680 0325                                 l1672 030F  
                               l1736 01E9                                 l1808 01A2  
                               l1840 005A                                 l1904 057B  
                               l1676 0316                                 l1764 0259  
                               l1756 0240                                 l1860 0080  
                               l1686 033E                                 l1678 0320  
                               l1854 0077                                 l1688 0346  
                               l1784 014B                                 l1880 00E7  
                               l1778 0135                                 l1866 0086  
                               l1796 0186                                 l1892 010F  
                               l1886 00F7                                 l1896 0118  
                               STR_1 0304                                 STR_2 02F6  
                               STR_3 0304                                 STR_4 0304  
                               STR_5 027B                                 STR_6 0304  
                               STR_7 0304                                 STR_8 02A8  
                               STR_9 0304                                 u2037 0525  
                               u1605 0341                                 u1705 0221  
                               u1715 0241                                 u1645 035B  
                               u1565 031B                                 u1725 0250  
                               u1805 018F                                 u1735 025A  
                               u1815 0195                                 u1585 0334  
                               u1845 01AB                                 u1695 0211  
                               u1855 01B1                                 u1775 0157  
                               u1935 006C                                 u1785 0167  
                               u1895 004A                                 u1985 0093  
                               u1995 00F1                                 i1l73 0011  
                               _TMR2 001A                          _SR_FRSStart 03B6  
                       __CFG_WRT$ALL 0000                                 _Mode 004A  
                               _main 0572                         ___ftpack@arg 0071  
                       ___ftpack@exp 0074                                 _time 0048  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               ltemp 007E                        ??_ReadCharger 0071  
                               start 0016                                 ttemp 007E  
                               wtemp 007E                        __CFG_IESO$OFF 0000  
                      __CFG_MCLRE$ON 0000                         ___ftmul@cntr 002E  
                       ___ftmul@sign 002F                        ?_EUSART_Write 0070  
                      ??_ReadVoltage 0075                                ?_main 0070  
                              STR_10 0304                                STR_11 02D3  
                              STR_12 0304                                STR_13 0304  
                              STR_14 02E6                                STR_15 0304  
                              STR_16 0304                                STR_17 02BE  
                      __CFG_WDTE$OFF 0000                                STR_18 0304  
                    __end_of___ftdiv 027B                      __end_of___ftmul 01D2  
                              _T2CON 001C                     ??_SetCommandMode 007C  
                     ?_SetADCChannel 0070                                _RCREG 0199  
                              _RCSTA 019D                                _TXREG 019A  
                              _TXSTA 019E                                _Delay 0515  
                      __CFG_PWRTE$ON 0000                       __CFG_FCMEN$OFF 0000  
            __size_of_RadioOperation 00E7                     __end_of_TMR2_ISR 05FF  
                              _Start 0438                        ___awtoft@sign 0022  
                              _count 0044                        ___ftpack@sign 0075  
                              _putch 0605                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                          _ClearTicker 060F  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                      __initialization 0018  
         __end_of_EUSART1_Initialize 05D2                         __end_of_main 0586  
                         _RadioBegin 0613                  __end_of_ReadCharger 0598  
                     ??_EUSART_Write 0071                          SetMIC@scram 0023  
            __end_of_TMR2_Initialize 05DC          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 007C                          ?_SR_FRSTalk 0070  
                 __size_of_GetTicker 0001                       __CFG_PLLEN$OFF 0000  
                             ?_Delay 0071                               ?_Start 0070  
                __end_of_ReadVoltage 05C7                               _ADRESL 009B  
                   __end_of___awtoft 04F7                               ?_putch 0070  
                   __end_of___ftpack 036B                               _LEDOff 060A  
                             Delay@x 0074                               _INTCON 000B  
                             _SPBRGH 019C                               _SPBRGL 019B  
                             _SetMIC 04B0                               _SetVOX 0461  
                             ___ftge 03FD                        _output_buffer 0120  
                     __CFG_STVREN$ON 0000                            ??___ftdiv 0036  
                          ??___ftmul 0026                   __size_of_SetVolume 0027  
                             _ticker 0046                      ??_SetADCChannel 0071  
                             _printf 036B                ___ftmul@f3_as_product 002B  
                       __pdataCOMMON 007C                        ?_SetFrequency 0070  
      __size_of_INTERRUPT_Initialize 000A              __end_of__initialization 0033  
                         ___ftge@ff1 0071                           ___ftge@ff2 0074  
                         ___ftdiv@f1 0033                           ___ftdiv@f2 0030  
                         ___ftdiv@f3 003B                  __size_of_SR_FRSTalk 000F  
                  __end_of_GetTicker 0618                          _ReadCharger 0586  
                         ___awtoft@c 0079                        __end_of_Delay 052F  
                         ___ftmul@f1 0020                           ___ftmul@f2 0023  
                     __pcstackCOMMON 0070                        __end_of_Start 0461  
                        ?_RadioBegin 0070                        ?_SetPowerSave 0070  
                          ?_TMR2_ISR 0070                        __end_of_putch 060A  
                   ?_TMR2_Initialize 0070                      SetVolume@volume 0025  
                        _ReadVoltage 05B9                       ??_SetFrequency 007C  
                       SetMIC@volume 0028                              ??_Delay 0073  
                     _RadioOperation 0037                      SetADCChannel@ch 0071  
                            ??_Start 0071                              ??_putch 0072  
                         __pbssBANK0 0041                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                         ?_SR_FRSStart 0070  
                            ?_LEDOff 0070                 __end_of_EUSART_Write 05F8  
                  __end_of_SetVolume 04B0                              ?_SetMIC 0023  
                            ?_SetVOX 0023                           __pmaintext 0572  
                     ??_SetPowerSave 007C                              ?___ftge 0071  
                         ??_TMR2_ISR 0070                           __pintentry 0004  
                            _BAUDCON 019F             __size_of_SR_FRSPowerDown 0012  
                          ?___awtoft 0079                            ?___ftpack 0071  
                            ?_printf 0073              __size_of_ADC_Initialize 000A  
             __end_of_RadioOperation 011E                  __size_of_RadioBegin 0003  
                    __size_of_LEDOff 0005                              _Battery 0041  
                       ?_ClearTicker 0070                              _Talking 004C  
                    __size_of_SetMIC 0026                      __size_of_SetVOX 0028  
                    __size_of___ftge 003B                              ___ftdiv 01D2  
                            ___ftmul 011E                           ??___awtoft 0020  
                         ??___ftpack 0076                              __ptext1 0438  
                            __ptext2 05D2                              __ptext3 05DC  
                            __ptext4 05C7                              __ptext5 05E6  
                            __ptext6 0037                              __ptext7 011E  
                            __ptext8 03FD                              __ptext9 01D2  
                    __size_of_printf 004B                         ??_SR_FRSTalk 0071  
                    ?_RadioOperation 0070                            _T2CONbits 001C  
                 _EUSART1_Initialize 05C7                         SetVOX@volume 0023  
                            clrloop0 0600                 end_of_initialization 0033  
                          Delay@wait 0071                  ?_EUSART1_Initialize 0070  
               __end_of_SetFrequency 055D                     __CFG_CLKOUTEN$ON 0000  
                 __end_of_SR_FRSTalk 05B9                            _RCSTAbits 019D  
                            printf@c 0022                              printf@f 0073  
                       __pstringtext 027B                 ??_EUSART1_Initialize 0071  
                          _PORTAbits 000C                            _PORTCbits 000E  
                   __CFG_FOSC$INTOSC 0000                            _TRISAbits 008C  
                          _TRISCbits 008E                    ??_SR_FRSPowerDown 0071  
              __size_of_EUSART_Write 0008                 __end_of_SetPowerSave 0548  
            __size_of_SetCommandMode 0015                       __end_of_LEDOff 060F  
                        ___ftdiv@exp 003E                 __size_of_SR_FRSStart 0047  
                       ?_ReadCharger 0070                          ___ftmul@exp 002A  
                     __end_of_SetMIC 04D6                         ??_RadioBegin 007C  
                     __end_of_SetVOX 0489                            _GetTicker 0617  
       __end_of_INTERRUPT_Initialize 05E6                       __end_of___ftge 0438  
                      __pidataCOMMON 0616                         _EUSART_Write 05F0  
                  __size_of_TMR2_ISR 0007                       _ADC_Initialize 05E6  
                       ?_ReadVoltage 0072                __end_of_SetADCChannel 0515  
                     __end_of_printf 03B6                  start_initialization 0018  
                      ReadVoltage@ch 0075                          putch@txData 0072  
                 __end_of_RadioBegin 0616                             ??_LEDOff 0071  
               __size_of_ClearTicker 0004                            _SetVolume 0489  
                        _APFCON0bits 011D                             ??_SetMIC 0024  
                           ??_SetVOX 0025                             ??___ftge 0077  
                         ?_GetTicker 0070               __end_of_ADC_Initialize 05F0  
                           ??_printf 0079                    __size_of___awtoft 0021  
                  __size_of___ftpack 0064                            ___latbits 0002  
                      __pcstackBANK0 0020             __size_of_TMR2_Initialize 000A  
              __size_of_SetFrequency 0015                           ?_SetVolume 0070  
                           ?___ftdiv 0030                             ?___ftmul 0020  
                   ??_RadioOperation 0040                      ?_ADC_Initialize 0070  
       ??_INTERRUPT_InterruptManager 0070                __size_of_SetPowerSave 0019  
                       _SetFrequency 0548                       __size_of_Delay 001A  
                     __size_of_Start 0029                       __size_of_putch 0005  
               _INTERRUPT_Initialize 05DC                       _SetCommandMode 055D  
                          clear_ram0 05FF                             _PIE1bits 0091  
__size_of_INTERRUPT_InterruptManager 0012                             _PIR1bits 0011  
               __size_of_ReadCharger 0012                          ??_GetTicker 0071  
                           _TMR2_ISR 05F8                         _SetPowerSave 052F  
                    _SR_FRSPowerDown 0598                         _input_buffer 00A0  
                         _ADCON0bits 009D                           _ADCON1bits 009E  
                         printf@flag 0020                 __size_of_ReadVoltage 000E  
             __end_of_SetCommandMode 0572                ?_INTERRUPT_Initialize 0070  
                  ??_TMR2_Initialize 0071                          ??_SetVolume 0023  
                           _Shutdown 004B                     __size_of___ftdiv 00A9  
                   __size_of___ftmul 00B4          __size_of_EUSART1_Initialize 000B  
                           ___awtoft 04D6                             ___ftpack 0307  
                         _ANSELAbits 018C                           _ANSELCbits 018E  
                           __ptext10 04D6                             __ptext11 0307  
                           __ptext20 0489                             __ptext12 05AA  
                           __ptext21 0461                             __ptext13 05B9  
                           __ptext30 0515                             __ptext22 052F  
                           __ptext14 04F7                             __ptext31 060A  
                           __ptext23 04B0                             __ptext15 0586  
                           __ptext24 0548                             __ptext16 0617  
                           __ptext33 05F8                             __ptext25 055D  
                           __ptext17 060F                             __ptext26 036B  
                           __ptext18 0613                             __ptext27 0605  
                           __ptext19 03B6                             __ptext28 05F0  
                           __ptext29 0598                      ?_SetCommandMode 0070  
                      ??_SR_FRSStart 007C                        __size_of_main 0014  
                     _Transmit_stall 007C              __end_of_SR_FRSPowerDown 05AA  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 0016  
         _INTERRUPT_InterruptManager 0004                           _INTCONbits 000B  
                         _FVRCONbits 0117               ??_INTERRUPT_Initialize 0071  
                           intlevel1 0000                        ??_ClearTicker 0071  
                   ??_ADC_Initialize 0071               __size_of_SetADCChannel 001E  
                __end_of_SR_FRSStart 03FD                           _OSCCONbits 0099  
                           printf@ap 0021                   EUSART_Write@txData 0071  
                   ?_SR_FRSPowerDown 0070                  __end_of_ClearTicker 0613  
